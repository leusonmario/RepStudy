import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest8 {

    public static boolean debug = false;

    @Test
    public void test04001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04001");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap13);
        java.security.Provider provider15 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap16;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
    }

    @Test
    public void test04002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04002");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration12.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider16 = kerberosUserConfiguration12.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        java.lang.String str18 = kerberosUserConfiguration12.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap26);
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration29);
        kerberosUserConfiguration29.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration34.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.options = strMap38;
        kerberosUserConfiguration20.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration12.setoptions(strMap41);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration43.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration43);
        kerberosUserConfiguration43.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration43.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap55);
        kerberosUserConfiguration0.setoptions(strMap55);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test04003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04003");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider11 = kerberosUserConfiguration10.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration0.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass22 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test04004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04004");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider11 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap19;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration24.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration24.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration40.refresh();
        java.lang.String str42 = kerberosUserConfiguration40.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration43.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.setoptions(strMap48);
        kerberosUserConfiguration40.options = strMap48;
        kerberosUserConfiguration37.setoptions(strMap48);
        kerberosUserConfiguration37.refresh();
        javax.security.auth.login.Configuration.Parameters parameters53 = kerberosUserConfiguration37.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration37.getParameters();
        kerberosUserConfiguration37.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray57 = kerberosUserConfiguration37.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters60 = kerberosUserConfiguration59.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration59.getoptions();
        kerberosUserConfiguration59.refresh();
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration59.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration68.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration68.setoptions(strMap70);
        java.security.Provider provider72 = kerberosUserConfiguration68.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters73 = kerberosUserConfiguration68.getParameters();
        kerberosUserConfiguration68.refresh();
        javax.security.auth.login.Configuration.Parameters parameters75 = kerberosUserConfiguration68.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration68.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration68.options;
        kerberosUserConfiguration59.setoptions(strMap77);
        kerberosUserConfiguration37.options = strMap77;
        kerberosUserConfiguration24.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters82 = kerberosUserConfiguration24.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration0.setoptions(strMap84);
        java.lang.Class<?> wildcardClass86 = strMap84.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters53);
        org.junit.Assert.assertNull(parameters54);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(parameters60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNull(parameters73);
        org.junit.Assert.assertNull(parameters75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(parameters82);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test04005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04005");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration0.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test04006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04006");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.setoptions(strMap12);
        java.security.Provider provider14 = kerberosUserConfiguration10.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration10.getParameters();
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.options = strMap18;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider26 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test04007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04007");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test04008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04008");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str11 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap16);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap19);
        java.security.Provider provider21 = kerberosUserConfiguration0.getProvider();
        java.lang.String str22 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test04009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04009");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap13);
        java.security.Provider provider15 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap16;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str19 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider22 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider22);
    }

    @Test
    public void test04010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04010");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
    }

    @Test
    public void test04011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04011");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test04012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04012");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test04013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04013");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        java.lang.String str11 = kerberosUserConfiguration9.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap17);
        kerberosUserConfiguration9.options = strMap17;
        kerberosUserConfiguration6.setoptions(strMap17);
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration6.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration6.getParameters();
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration27.setoptions(strMap30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap38);
        kerberosUserConfiguration27.options = strMap38;
        kerberosUserConfiguration6.setoptions(strMap38);
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration6.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration45.setoptions(strMap47);
        java.security.Provider provider49 = kerberosUserConfiguration45.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration6.options = strMap50;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray53 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap54;
        java.lang.Class<?> wildcardClass56 = strMap54.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test04014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04014");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration42.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str45 = kerberosUserConfiguration44.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration44.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration47.refresh();
        java.lang.String str49 = kerberosUserConfiguration47.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration50.setoptions(strMap55);
        kerberosUserConfiguration47.options = strMap55;
        kerberosUserConfiguration44.setoptions(strMap55);
        kerberosUserConfiguration42.setoptions(strMap55);
        java.security.Provider provider60 = kerberosUserConfiguration42.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = null;
        kerberosUserConfiguration61.options = strMap62;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration61.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration61.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.options = strMap66;
        kerberosUserConfiguration42.refresh();
        java.security.Provider provider69 = kerberosUserConfiguration42.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration0.setoptions(strMap70);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test04015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04015");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        kerberosUserConfiguration11.refresh();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap16;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration19.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.setoptions(strMap25);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration23.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration30.options = strMap33;
        kerberosUserConfiguration23.setoptions(strMap33);
        kerberosUserConfiguration19.options = strMap33;
        kerberosUserConfiguration7.options = strMap33;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration7.options;
        java.lang.String str41 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test04016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04016");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
    }

    @Test
    public void test04017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04017");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test04018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04018");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider13 = kerberosUserConfiguration6.getProvider();
        java.security.Provider provider14 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration6.getParameters();
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration6.options;
        java.security.Provider provider18 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration0.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
    }

    @Test
    public void test04019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04019");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.setoptions(strMap12);
        java.security.Provider provider14 = kerberosUserConfiguration10.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration10.getParameters();
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.options = strMap18;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
    }

    @Test
    public void test04020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04020");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider10 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        java.security.Provider provider12 = kerberosUserConfiguration9.getProvider();
        java.lang.String str13 = kerberosUserConfiguration9.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration9.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap16);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test04021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04021");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(provider18);
    }

    @Test
    public void test04022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04022");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider6 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(provider13);
    }

    @Test
    public void test04023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04023");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        java.security.Provider provider14 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration6.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getoptions();
        kerberosUserConfiguration22.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration22.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider33 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        kerberosUserConfiguration22.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration38.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration22.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.options = strMap46;
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
    }

    @Test
    public void test04024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04024");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test04025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04025");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(provider6);
    }

    @Test
    public void test04026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04026");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration3.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap6;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration1.getParameters();
        java.lang.Class<?> wildcardClass12 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test04027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04027");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap31);
        kerberosUserConfiguration24.setoptions(strMap31);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration24.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration0.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration0.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration0.options = strMap48;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test04028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04028");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
    }

    @Test
    public void test04029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04029");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass9 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test04030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04030");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap17);
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration0.setoptions(strMap20);
        java.lang.String str22 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration0.options = strMap25;
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
    }

    @Test
    public void test04031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04031");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.setoptions(strMap11);
        java.security.Provider provider13 = kerberosUserConfiguration9.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration9.getParameters();
        kerberosUserConfiguration9.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.setoptions(strMap18);
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider22 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.options = strMap26;
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration23.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration23.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration0.setoptions(strMap32);
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters34);
    }

    @Test
    public void test04032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04032");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test04033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04033");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(provider6);
    }

    @Test
    public void test04034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04034");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.String str24 = kerberosUserConfiguration1.getType();
        java.security.Provider provider25 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.setoptions(strMap28);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration26.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider33 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration26.options;
        java.security.Provider provider35 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration26.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration40.setoptions(strMap44);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration46.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.options = strMap48;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration26.options = strMap50;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str53 = kerberosUserConfiguration52.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration52.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap58);
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration61.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration61.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration61);
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration66.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters69 = kerberosUserConfiguration66.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.options = strMap70;
        kerberosUserConfiguration52.options = strMap70;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration52.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration26.setoptions(strMap75);
        kerberosUserConfiguration1.setoptions(strMap75);
        java.lang.Class<?> wildcardClass78 = strMap75.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(parameters69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test04035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04035");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.options;
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test04036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04036");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration34);
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.options = strMap43;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str46 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.setoptions(strMap51);
        kerberosUserConfiguration34.options = strMap51;
        kerberosUserConfiguration23.options = strMap51;
        java.security.Provider provider55 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration23.options;
        java.security.Provider provider58 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration1.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray64 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass65 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test04037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04037");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
    }

    @Test
    public void test04038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04038");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        java.lang.String str24 = kerberosUserConfiguration22.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap33);
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration11.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.setoptions(strMap39);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray42 = kerberosUserConfiguration37.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider44 = kerberosUserConfiguration37.getProvider();
        java.security.Provider provider45 = kerberosUserConfiguration37.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration37.getParameters();
        kerberosUserConfiguration37.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration11.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration0.options = strMap50;
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test04039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04039");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        java.lang.String str7 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test04040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04040");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.setoptions(strMap9);
        java.security.Provider provider11 = kerberosUserConfiguration7.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration7.getParameters();
        kerberosUserConfiguration7.refresh();
        java.security.Provider provider14 = kerberosUserConfiguration7.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        java.lang.String str17 = kerberosUserConfiguration15.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap26);
        kerberosUserConfiguration15.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration15.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration15.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider34 = kerberosUserConfiguration33.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration15.setoptions(strMap36);
        kerberosUserConfiguration7.options = strMap36;
        kerberosUserConfiguration0.setoptions(strMap36);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test04041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04041");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test04042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04042");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test04043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04043");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass9 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test04044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04044");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        java.lang.String str25 = kerberosUserConfiguration1.getType();
        java.lang.String str26 = kerberosUserConfiguration1.getType();
        java.lang.String str27 = kerberosUserConfiguration1.getType();
        java.lang.String str28 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(parameters29);
    }

    @Test
    public void test04045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04045");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        kerberosUserConfiguration5.refresh();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration0.options = strMap10;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test04046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04046");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test04047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04047");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test04048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04048");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration11.getAppConfigurationEntry("");
        kerberosUserConfiguration11.refresh();
        java.lang.String str28 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration0.options = strMap29;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters34);
    }

    @Test
    public void test04049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04049");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.lang.String str4 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.lang.Class<?> wildcardClass6 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test04050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04050");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
    }

    @Test
    public void test04051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04051");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration0.options = strMap11;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.lang.String str16 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.options;
        java.security.Provider provider18 = kerberosUserConfiguration13.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration13.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.options = strMap23;
        kerberosUserConfiguration0.options = strMap23;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.options = strMap29;
        java.lang.String str31 = kerberosUserConfiguration26.getType();
        kerberosUserConfiguration26.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        java.security.Provider provider34 = kerberosUserConfiguration26.getProvider();
        java.security.Provider provider35 = kerberosUserConfiguration26.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration38.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration38.refresh();
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration38.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration47.setoptions(strMap49);
        java.security.Provider provider51 = kerberosUserConfiguration47.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration47.getParameters();
        kerberosUserConfiguration47.refresh();
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration47.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration47.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration38.setoptions(strMap56);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str59 = kerberosUserConfiguration58.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration58.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration62.getoptions();
        kerberosUserConfiguration58.setoptions(strMap63);
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration58.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration58.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters68 = kerberosUserConfiguration58.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider71 = kerberosUserConfiguration70.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration70.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration70.getoptions();
        kerberosUserConfiguration58.setoptions(strMap73);
        kerberosUserConfiguration38.options = strMap73;
        kerberosUserConfiguration26.setoptions(strMap73);
        kerberosUserConfiguration0.options = strMap73;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNull(parameters54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(parameters68);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test04052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04052");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap16);
        java.security.Provider provider18 = kerberosUserConfiguration14.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str23 = kerberosUserConfiguration14.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.lang.String str27 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.options;
        java.security.Provider provider29 = kerberosUserConfiguration24.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration30.setoptions(strMap32);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration30.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.options = strMap36;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        java.lang.String str40 = kerberosUserConfiguration38.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap46);
        kerberosUserConfiguration38.options = strMap46;
        javax.security.auth.login.Configuration.Parameters parameters49 = kerberosUserConfiguration38.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        java.lang.String str52 = kerberosUserConfiguration50.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration50.options = strMap58;
        kerberosUserConfiguration38.setoptions(strMap58);
        kerberosUserConfiguration24.setoptions(strMap58);
        kerberosUserConfiguration14.options = strMap58;
        kerberosUserConfiguration0.setoptions(strMap58);
        java.security.Provider provider65 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider66 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(parameters49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNull(provider66);
    }

    @Test
    public void test04053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04053");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration0.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test04054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04054");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str57 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.getoptions();
        kerberosUserConfiguration56.setoptions(strMap61);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str65 = kerberosUserConfiguration64.getType();
        kerberosUserConfiguration64.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = null;
        kerberosUserConfiguration67.options = strMap68;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration67.options = strMap70;
        kerberosUserConfiguration64.options = strMap70;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = null;
        kerberosUserConfiguration73.options = strMap74;
        java.lang.String str76 = kerberosUserConfiguration73.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration73.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration73.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration64.setoptions(strMap78);
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration64.options;
        kerberosUserConfiguration56.setoptions(strMap80);
        kerberosUserConfiguration6.setoptions(strMap80);
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap85;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test04055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04055");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap13);
        java.security.Provider provider15 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration0.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.options;
        java.lang.String str21 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test04056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04056");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.options;
        kerberosUserConfiguration9.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.refresh();
        java.lang.String str21 = kerberosUserConfiguration17.getType();
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration17.options = strMap25;
        kerberosUserConfiguration9.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.options;
        java.security.Provider provider31 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider31);
    }

    @Test
    public void test04057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04057");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        kerberosUserConfiguration15.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration26.refresh();
        java.lang.String str28 = kerberosUserConfiguration26.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration29);
        kerberosUserConfiguration29.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap37);
        kerberosUserConfiguration26.setoptions(strMap37);
        kerberosUserConfiguration15.setoptions(strMap37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration42.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str45 = kerberosUserConfiguration44.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration44.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration47.refresh();
        java.lang.String str49 = kerberosUserConfiguration47.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration50.setoptions(strMap55);
        kerberosUserConfiguration47.options = strMap55;
        kerberosUserConfiguration44.setoptions(strMap55);
        kerberosUserConfiguration42.setoptions(strMap55);
        kerberosUserConfiguration15.setoptions(strMap55);
        kerberosUserConfiguration15.refresh();
        java.security.Provider provider62 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration15.getoptions();
        kerberosUserConfiguration0.options = strMap63;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray66 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray66);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test04058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04058");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration3.setoptions(strMap5);
        java.security.Provider provider7 = kerberosUserConfiguration3.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration3.getParameters();
        kerberosUserConfiguration3.refresh();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration3.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration3.getoptions();
        kerberosUserConfiguration0.setoptions(strMap11);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test04059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04059");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test04060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04060");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test04061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04061");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration1.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass17 = strMap16.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test04062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04062");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        java.lang.Class<?> wildcardClass19 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test04063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04063");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test04064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04064");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test04065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04065");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test04066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04066");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
    }

    @Test
    public void test04067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04067");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.refresh();
        java.lang.String str10 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.options = strMap13;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider18 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration12.setoptions(strMap19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str29 = kerberosUserConfiguration28.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration31.refresh();
        java.lang.String str33 = kerberosUserConfiguration31.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap39);
        kerberosUserConfiguration31.options = strMap39;
        kerberosUserConfiguration28.setoptions(strMap39);
        kerberosUserConfiguration26.setoptions(strMap39);
        java.security.Provider provider44 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap45);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration47.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.refresh();
        java.lang.String str51 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.options = strMap52;
        kerberosUserConfiguration12.options = strMap52;
        kerberosUserConfiguration6.setoptions(strMap52);
        java.security.Provider provider56 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap62);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray65 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray65);
    }

    @Test
    public void test04068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04068");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test04069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04069");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test04070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04070");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        java.lang.String str16 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.options;
        kerberosUserConfiguration0.setoptions(strMap18);
        java.lang.Class<?> wildcardClass20 = strMap18.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test04071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04071");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        java.lang.String str34 = kerberosUserConfiguration32.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration32.options = strMap40;
        kerberosUserConfiguration29.setoptions(strMap40);
        kerberosUserConfiguration27.setoptions(strMap40);
        kerberosUserConfiguration0.setoptions(strMap40);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass49 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass49);
    }

    @Test
    public void test04072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04072");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider11 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap19;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration22.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration28.setoptions(strMap30);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration28.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider35 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration28.options;
        java.security.Provider provider37 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider40 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap41);
        kerberosUserConfiguration0.options = strMap41;
        java.security.Provider provider44 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider44);
    }

    @Test
    public void test04073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04073");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider14 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
    }

    @Test
    public void test04074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04074");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray55 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray55);
    }

    @Test
    public void test04075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04075");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.options = strMap13;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap15);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration0.options = strMap18;
        java.lang.Class<?> wildcardClass20 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test04076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04076");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test04077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04077");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test04078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04078");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        java.lang.String str21 = kerberosUserConfiguration19.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap27);
        kerberosUserConfiguration19.options = strMap27;
        kerberosUserConfiguration16.setoptions(strMap27);
        kerberosUserConfiguration14.setoptions(strMap27);
        java.security.Provider provider32 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap33);
        kerberosUserConfiguration6.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap36;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray39 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray39);
    }

    @Test
    public void test04079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04079");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str5 = kerberosUserConfiguration4.getType();
        kerberosUserConfiguration4.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration16.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.options = strMap26;
        kerberosUserConfiguration16.setoptions(strMap26);
        kerberosUserConfiguration12.options = strMap26;
        kerberosUserConfiguration0.options = strMap26;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test04080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04080");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        java.lang.String str11 = kerberosUserConfiguration9.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        kerberosUserConfiguration12.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap20);
        kerberosUserConfiguration9.setoptions(strMap20);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration9.getAppConfigurationEntry("");
        kerberosUserConfiguration9.refresh();
        java.lang.String str26 = kerberosUserConfiguration9.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap32);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration27.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider39 = kerberosUserConfiguration38.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters41 = kerberosUserConfiguration40.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap43;
        kerberosUserConfiguration27.setoptions(strMap43);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str47 = kerberosUserConfiguration46.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration49.refresh();
        java.lang.String str51 = kerberosUserConfiguration49.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap57);
        kerberosUserConfiguration49.options = strMap57;
        kerberosUserConfiguration46.setoptions(strMap57);
        kerberosUserConfiguration46.refresh();
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration46.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration63.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.setoptions(strMap66);
        kerberosUserConfiguration27.options = strMap66;
        kerberosUserConfiguration9.options = strMap66;
        javax.security.auth.login.Configuration.Parameters parameters70 = kerberosUserConfiguration9.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters71 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.options = strMap72;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNull(parameters41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNull(parameters64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(parameters70);
        org.junit.Assert.assertNull(parameters71);
        org.junit.Assert.assertNotNull(strMap72);
    }

    @Test
    public void test04081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04081");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap18;
        kerberosUserConfiguration0.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters26);
    }

    @Test
    public void test04082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04082");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap16;
        kerberosUserConfiguration0.setoptions(strMap16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration20);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration20.getAppConfigurationEntry("hi!");
        java.lang.String str28 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration0.options = strMap29;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
    }

    @Test
    public void test04083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04083");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test04084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04084");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        java.lang.String str14 = kerberosUserConfiguration12.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration12.options = strMap20;
        kerberosUserConfiguration9.setoptions(strMap20);
        kerberosUserConfiguration7.setoptions(strMap20);
        java.security.Provider provider25 = kerberosUserConfiguration7.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration26.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap31;
        kerberosUserConfiguration0.setoptions(strMap31);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass36 = strMap35.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(wildcardClass36);
    }

    @Test
    public void test04085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04085");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test04086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04086");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration8.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.options = strMap15;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters20);
    }

    @Test
    public void test04087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04087");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration8.setoptions(strMap10);
        java.security.Provider provider12 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        kerberosUserConfiguration8.refresh();
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        kerberosUserConfiguration8.options = strMap33;
        kerberosUserConfiguration1.setoptions(strMap33);
        java.security.Provider provider40 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration41.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration41);
        kerberosUserConfiguration41.refresh();
        java.security.Provider provider48 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration41.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration50.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider54 = kerberosUserConfiguration50.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration50);
        java.lang.String str56 = kerberosUserConfiguration50.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration50);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str59 = kerberosUserConfiguration58.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration58.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = null;
        kerberosUserConfiguration61.options = strMap62;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration61.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration58.setoptions(strMap64);
        kerberosUserConfiguration58.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration67.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration67);
        kerberosUserConfiguration67.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration72.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration72.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters75 = kerberosUserConfiguration72.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration72.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration67.options = strMap76;
        kerberosUserConfiguration58.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration58.options;
        kerberosUserConfiguration50.setoptions(strMap79);
        kerberosUserConfiguration41.options = strMap79;
        kerberosUserConfiguration1.setoptions(strMap79);
        java.security.Provider provider83 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(parameters75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(provider83);
    }

    @Test
    public void test04088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04088");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test04089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04089");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test04090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04090");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass6 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test04091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04091");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration38.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration0.options = strMap48;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test04092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04092");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.Class<?> wildcardClass11 = appConfigurationEntryArray10.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test04093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04093");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str14 = kerberosUserConfiguration13.getType();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.options = strMap19;
        kerberosUserConfiguration13.options = strMap19;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.lang.String str25 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap27);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        kerberosUserConfiguration29.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str40 = kerberosUserConfiguration39.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration42.refresh();
        java.lang.String str44 = kerberosUserConfiguration42.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.options = strMap48;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.setoptions(strMap50);
        kerberosUserConfiguration42.options = strMap50;
        kerberosUserConfiguration39.setoptions(strMap50);
        kerberosUserConfiguration37.setoptions(strMap50);
        java.security.Provider provider55 = kerberosUserConfiguration37.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap56);
        kerberosUserConfiguration29.setoptions(strMap56);
        kerberosUserConfiguration13.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration13.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration13.getoptions();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str64 = kerberosUserConfiguration63.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration63.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration67.getoptions();
        kerberosUserConfiguration63.setoptions(strMap68);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str72 = kerberosUserConfiguration71.getType();
        kerberosUserConfiguration71.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration74 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = null;
        kerberosUserConfiguration74.options = strMap75;
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration74.options = strMap77;
        kerberosUserConfiguration71.options = strMap77;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = null;
        kerberosUserConfiguration80.options = strMap81;
        java.lang.String str83 = kerberosUserConfiguration80.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration80.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration71.setoptions(strMap85);
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration71.options;
        kerberosUserConfiguration63.setoptions(strMap87);
        kerberosUserConfiguration13.setoptions(strMap87);
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap90;
        java.lang.Class<?> wildcardClass92 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test04094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04094");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration5.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.refresh();
        java.lang.String str30 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.options = strMap40;
        kerberosUserConfiguration34.options = strMap40;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.lang.String str46 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap48);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration58.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str61 = kerberosUserConfiguration60.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration63.refresh();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration66.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap71);
        kerberosUserConfiguration63.options = strMap71;
        kerberosUserConfiguration60.setoptions(strMap71);
        kerberosUserConfiguration58.setoptions(strMap71);
        java.security.Provider provider76 = kerberosUserConfiguration58.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap77);
        kerberosUserConfiguration50.setoptions(strMap77);
        kerberosUserConfiguration34.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration0.options = strMap84;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration86 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration86.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration86.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration86.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration86.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration86);
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration86.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration86.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap93;
        java.lang.String str95 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass96 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(parameters87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test04095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04095");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass22 = strMap21.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test04096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04096");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration5.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.options = strMap29;
        java.lang.String str31 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration26.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration26.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str37 = kerberosUserConfiguration36.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration36.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration36.setoptions(strMap42);
        java.lang.String str44 = kerberosUserConfiguration36.getType();
        java.lang.String str45 = kerberosUserConfiguration36.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration36.options;
        kerberosUserConfiguration26.options = strMap46;
        kerberosUserConfiguration0.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration0.options = strMap52;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test04097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04097");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test04098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04098");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        kerberosUserConfiguration11.refresh();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration16.refresh();
        java.lang.String str18 = kerberosUserConfiguration16.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap24);
        kerberosUserConfiguration16.options = strMap24;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration16.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration11.setoptions(strMap29);
        kerberosUserConfiguration0.setoptions(strMap29);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test04099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04099");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(provider8);
    }

    @Test
    public void test04100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04100");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration1.setoptions(strMap5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        java.lang.String str9 = kerberosUserConfiguration7.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap18);
        kerberosUserConfiguration7.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider26 = kerberosUserConfiguration25.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration25.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getoptions();
        kerberosUserConfiguration7.setoptions(strMap28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration30.setoptions(strMap32);
        java.security.Provider provider34 = kerberosUserConfiguration30.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration30.getParameters();
        kerberosUserConfiguration30.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration7.setoptions(strMap38);
        kerberosUserConfiguration1.options = strMap38;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str44 = kerberosUserConfiguration43.getType();
        kerberosUserConfiguration43.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration43);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str50 = kerberosUserConfiguration49.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap55);
        java.security.Provider provider57 = kerberosUserConfiguration49.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.options = strMap58;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider63 = kerberosUserConfiguration43.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration1.options = strMap64;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test04101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04101");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.options = strMap13;
        java.lang.String str15 = kerberosUserConfiguration10.getType();
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.lang.String str19 = kerberosUserConfiguration10.getType();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration10.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap27);
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration10.setoptions(strMap30);
        kerberosUserConfiguration0.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider36 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getoptions();
        kerberosUserConfiguration0.setoptions(strMap37);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test04102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04102");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration11.setoptions(strMap17);
        java.lang.String str19 = kerberosUserConfiguration11.getType();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration0.options = strMap21;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.lang.String str26 = kerberosUserConfiguration23.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap29;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test04103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04103");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str13 = kerberosUserConfiguration12.getType();
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.options = strMap18;
        kerberosUserConfiguration12.options = strMap18;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.lang.String str24 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration12.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration29.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider32 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.options = strMap34;
        kerberosUserConfiguration0.setoptions(strMap34);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test04104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04104");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass13 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test04105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04105");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        kerberosUserConfiguration4.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap9);
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass14 = strMap13.getClass();
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test04106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04106");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.refresh();
        java.lang.String str9 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider17 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration11.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration46.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.refresh();
        java.lang.String str50 = kerberosUserConfiguration46.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap51;
        kerberosUserConfiguration11.options = strMap51;
        kerberosUserConfiguration5.setoptions(strMap51);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration55.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration55.setoptions(strMap60);
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration55.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration55.getoptions();
        kerberosUserConfiguration5.options = strMap63;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration0.setoptions(strMap65);
        java.lang.String str67 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = null;
        kerberosUserConfiguration70.options = strMap71;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = null;
        kerberosUserConfiguration70.setoptions(strMap73);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration70);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = null;
        kerberosUserConfiguration76.options = strMap77;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration76.options = strMap79;
        java.lang.String str81 = kerberosUserConfiguration76.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration76.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration76.options;
        kerberosUserConfiguration70.setoptions(strMap83);
        kerberosUserConfiguration0.setoptions(strMap83);
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test04107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04107");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
    }

    @Test
    public void test04108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04108");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        kerberosUserConfiguration25.refresh();
        java.lang.String str31 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap32);
        kerberosUserConfiguration0.options = strMap32;
        java.lang.Class<?> wildcardClass35 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test04109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04109");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration14.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration14.setoptions(strMap23);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration14.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap27);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test04110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04110");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
    }

    @Test
    public void test04111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04111");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap17);
        kerberosUserConfiguration0.options = strMap17;
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str26 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test04112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04112");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str16 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap21);
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration15.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration25.options = strMap28;
        kerberosUserConfiguration15.setoptions(strMap28);
        kerberosUserConfiguration0.setoptions(strMap28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.getoptions();
        kerberosUserConfiguration32.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration32.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider43 = kerberosUserConfiguration42.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.getoptions();
        kerberosUserConfiguration32.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration32.getAppConfigurationEntry("hi!");
        java.security.Provider provider49 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration32.getoptions();
        kerberosUserConfiguration0.setoptions(strMap51);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration53.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration53);
        kerberosUserConfiguration53.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration53.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration64.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration64.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration64);
        kerberosUserConfiguration64.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration69.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration69.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration69.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration64.options = strMap73;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str76 = kerberosUserConfiguration75.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration75.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = null;
        kerberosUserConfiguration78.options = strMap79;
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration78.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration75.setoptions(strMap81);
        kerberosUserConfiguration64.options = strMap81;
        kerberosUserConfiguration53.options = strMap81;
        java.lang.String str85 = kerberosUserConfiguration53.getType();
        javax.security.auth.login.Configuration.Parameters parameters86 = kerberosUserConfiguration53.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration53.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration88 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = null;
        kerberosUserConfiguration88.options = strMap89;
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = null;
        kerberosUserConfiguration88.setoptions(strMap91);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration88);
        java.util.HashMap<java.lang.String, java.lang.String> strMap94 = kerberosUserConfiguration88.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration88);
        java.util.HashMap<java.lang.String, java.lang.String> strMap96 = kerberosUserConfiguration88.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap96);
        kerberosUserConfiguration0.options = strMap96;
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNull(parameters86);
        org.junit.Assert.assertNull(parameters87);
        org.junit.Assert.assertNull(strMap94);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test04113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04113");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
    }

    @Test
    public void test04114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04114");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        java.lang.String str25 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration1.getParameters();
        java.lang.String str29 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration1.getoptions();
        java.lang.Class<?> wildcardClass31 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test04115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04115");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider14 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        java.lang.String str24 = kerberosUserConfiguration22.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap30);
        kerberosUserConfiguration22.options = strMap30;
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration22.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration34.refresh();
        java.lang.String str36 = kerberosUserConfiguration34.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration37.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap42);
        kerberosUserConfiguration34.options = strMap42;
        kerberosUserConfiguration22.setoptions(strMap42);
        kerberosUserConfiguration0.setoptions(strMap42);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
    }

    @Test
    public void test04116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04116");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test04117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04117");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test04118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04118");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap17);
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration0.setoptions(strMap20);
        kerberosUserConfiguration0.refresh();
        java.lang.String str23 = kerberosUserConfiguration0.getType();
        java.lang.String str24 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test04119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04119");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str57 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration59.refresh();
        java.lang.String str61 = kerberosUserConfiguration59.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration62.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = null;
        kerberosUserConfiguration64.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap67);
        kerberosUserConfiguration59.options = strMap67;
        kerberosUserConfiguration56.setoptions(strMap67);
        kerberosUserConfiguration56.refresh();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration56.getParameters();
        java.lang.String str73 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap74;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray78 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration0.options;
        java.security.Provider provider82 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray85 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(provider82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray85);
    }

    @Test
    public void test04120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04120");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str11 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap16);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap19);
        java.security.Provider provider21 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getoptions();
        kerberosUserConfiguration22.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration22.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration22.getoptions();
        kerberosUserConfiguration0.options = strMap34;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test04121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04121");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test04122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04122");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str19 = kerberosUserConfiguration18.getType();
        kerberosUserConfiguration18.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration21.options = strMap24;
        kerberosUserConfiguration18.options = strMap24;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.lang.String str30 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration18.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration35.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider38 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.options = strMap40;
        kerberosUserConfiguration0.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider44 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider44);
    }

    @Test
    public void test04123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04123");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        kerberosUserConfiguration0.setoptions(strMap6);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap14);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.refresh();
        java.lang.String str24 = kerberosUserConfiguration20.getType();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration20.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration20.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration0.options = strMap31;
        java.lang.String str33 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test04124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04124");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap19);
        kerberosUserConfiguration11.options = strMap19;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration11.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str26 = kerberosUserConfiguration25.getType();
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        kerberosUserConfiguration25.refresh();
        java.security.Provider provider32 = kerberosUserConfiguration25.getProvider();
        java.lang.String str33 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration11.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration0.options;
        java.lang.String str42 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test04125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04125");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test04126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04126");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration1.options;
        java.lang.Class<?> wildcardClass25 = strMap24.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test04127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04127");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test04128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04128");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration13.setoptions(strMap15);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration13.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration20.options = strMap23;
        kerberosUserConfiguration13.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str29 = kerberosUserConfiguration28.getType();
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration9.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration33.setoptions(strMap40);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration9.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider52 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider52);
    }

    @Test
    public void test04129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04129");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.String str12 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str14 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap19);
        kerberosUserConfiguration13.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration13.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap25);
        java.lang.Class<?> wildcardClass27 = strMap25.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test04130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04130");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration51.setoptions(strMap53);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray56 = kerberosUserConfiguration51.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider58 = kerberosUserConfiguration51.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration51.getoptions();
        kerberosUserConfiguration1.setoptions(strMap61);
        java.security.Provider provider63 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(provider63);
    }

    @Test
    public void test04131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04131");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test04132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04132");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration12.refresh();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration21.setoptions(strMap23);
        java.security.Provider provider25 = kerberosUserConfiguration21.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration21.getParameters();
        kerberosUserConfiguration21.refresh();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration21.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration12.setoptions(strMap30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.getoptions();
        kerberosUserConfiguration32.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration32.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider45 = kerberosUserConfiguration44.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration44.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getoptions();
        kerberosUserConfiguration32.setoptions(strMap47);
        kerberosUserConfiguration12.options = strMap47;
        kerberosUserConfiguration0.setoptions(strMap47);
        java.lang.String str51 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test04133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04133");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration8.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.lang.String str20 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.setoptions(strMap24);
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration0.getParameters();
        java.lang.String str27 = kerberosUserConfiguration0.getType();
        java.lang.String str28 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test04134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04134");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider19 = kerberosUserConfiguration18.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration0.setoptions(strMap21);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.setoptions(strMap25);
        java.security.Provider provider27 = kerberosUserConfiguration23.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration23.getParameters();
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration0.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration33.setoptions(strMap35);
        java.security.Provider provider37 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration33);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration33.getAppConfigurationEntry("");
        kerberosUserConfiguration33.refresh();
        java.lang.String str43 = kerberosUserConfiguration33.getType();
        java.security.Provider provider44 = kerberosUserConfiguration33.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration45.refresh();
        java.lang.String str47 = kerberosUserConfiguration45.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration48.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration48);
        kerberosUserConfiguration48.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap56);
        kerberosUserConfiguration45.setoptions(strMap56);
        kerberosUserConfiguration33.options = strMap56;
        kerberosUserConfiguration0.options = strMap56;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration61.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration61.getoptions();
        kerberosUserConfiguration61.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration61.options;
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration61.getParameters();
        java.security.Provider provider67 = kerberosUserConfiguration61.getProvider();
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters70 = kerberosUserConfiguration69.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration69.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration69);
        javax.security.auth.login.Configuration.Parameters parameters74 = kerberosUserConfiguration69.getParameters();
        kerberosUserConfiguration69.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str77 = kerberosUserConfiguration76.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration76.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = null;
        kerberosUserConfiguration79.options = strMap80;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration79.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration76.setoptions(strMap82);
        java.security.Provider provider84 = kerberosUserConfiguration76.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration76.options;
        kerberosUserConfiguration69.options = strMap85;
        kerberosUserConfiguration61.setoptions(strMap85);
        kerberosUserConfiguration0.options = strMap85;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray90 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters91 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray93 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNull(parameters70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(parameters74);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(provider84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray90);
        org.junit.Assert.assertNull(parameters91);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray93);
    }

    @Test
    public void test04135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04135");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration3.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration1.setoptions(strMap16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration18.setoptions(strMap20);
        java.security.Provider provider22 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration18.getAppConfigurationEntry("");
        java.security.Provider provider27 = kerberosUserConfiguration18.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration1.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration1.options;
        java.lang.String str33 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test04136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04136");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration9.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration16.setoptions(strMap19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap27);
        kerberosUserConfiguration16.options = strMap27;
        kerberosUserConfiguration9.setoptions(strMap27);
        kerberosUserConfiguration0.options = strMap27;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider33 = kerberosUserConfiguration0.getProvider();
        java.lang.Class<?> wildcardClass34 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test04137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04137");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration4.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass15 = appConfigurationEntryArray14.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test04138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04138");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.options = strMap18;
        kerberosUserConfiguration6.options = strMap18;
        kerberosUserConfiguration0.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration0.getParameters();
        java.lang.Class<?> wildcardClass25 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test04139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04139");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str60 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters61 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters63 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(parameters61);
        org.junit.Assert.assertNull(parameters63);
    }

    @Test
    public void test04140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04140");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test04141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04141");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration20.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str29 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.getoptions();
        kerberosUserConfiguration31.refresh();
        java.lang.String str35 = kerberosUserConfiguration31.getType();
        java.lang.String str36 = kerberosUserConfiguration31.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.setoptions(strMap39);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray42 = kerberosUserConfiguration37.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider44 = kerberosUserConfiguration37.getProvider();
        java.security.Provider provider45 = kerberosUserConfiguration37.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration37.getParameters();
        kerberosUserConfiguration37.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration37.options;
        java.security.Provider provider49 = kerberosUserConfiguration37.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.options = strMap50;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration31.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration31.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration55.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration55.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration55);
        kerberosUserConfiguration55.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters61 = kerberosUserConfiguration55.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration55.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str67 = kerberosUserConfiguration66.getType();
        kerberosUserConfiguration66.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = null;
        kerberosUserConfiguration69.options = strMap70;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration69.options = strMap72;
        kerberosUserConfiguration66.options = strMap72;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.options = strMap76;
        java.lang.String str78 = kerberosUserConfiguration75.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration75.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap80);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = null;
        kerberosUserConfiguration82.options = strMap83;
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = null;
        kerberosUserConfiguration82.setoptions(strMap85);
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration82.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap87);
        javax.security.auth.login.Configuration.Parameters parameters89 = kerberosUserConfiguration66.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters90 = kerberosUserConfiguration66.getParameters();
        java.lang.String str91 = kerberosUserConfiguration66.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration66.getoptions();
        kerberosUserConfiguration55.options = strMap92;
        kerberosUserConfiguration31.setoptions(strMap92);
        kerberosUserConfiguration1.setoptions(strMap92);
        java.security.Provider provider96 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(parameters61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(parameters89);
        org.junit.Assert.assertNull(parameters90);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNull(provider96);
    }

    @Test
    public void test04142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04142");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider6);
    }

    @Test
    public void test04143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04143");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration20);
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap28);
        kerberosUserConfiguration17.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration11.setoptions(strMap31);
        kerberosUserConfiguration8.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap35;
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test04144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04144");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration3.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration1.setoptions(strMap16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration18.setoptions(strMap20);
        java.security.Provider provider22 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration18.getAppConfigurationEntry("");
        java.security.Provider provider27 = kerberosUserConfiguration18.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration1.setoptions(strMap30);
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str34 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration33.setoptions(strMap39);
        java.lang.String str41 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration1.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test04145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04145");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass7 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test04146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04146");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration14.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider25 = kerberosUserConfiguration24.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration14.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap28);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration0.options;
        java.security.Provider provider32 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider32);
    }

    @Test
    public void test04147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04147");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(parameters9);
    }

    @Test
    public void test04148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04148");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration5.refresh();
        java.lang.String str7 = kerberosUserConfiguration5.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap16);
        kerberosUserConfiguration5.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration5.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration0.setoptions(strMap21);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test04149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04149");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        java.lang.String str25 = kerberosUserConfiguration1.getType();
        java.lang.String str26 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test04150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04150");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray56 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str57 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test04151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04151");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test04152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04152");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap7);
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test04153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04153");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str5 = kerberosUserConfiguration4.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap10);
        java.security.Provider provider12 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration19.options = strMap22;
        kerberosUserConfiguration16.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.lang.String str28 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.options;
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str43 = kerberosUserConfiguration42.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration45.refresh();
        java.lang.String str47 = kerberosUserConfiguration45.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration48.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.options = strMap51;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap53);
        kerberosUserConfiguration45.options = strMap53;
        kerberosUserConfiguration42.setoptions(strMap53);
        kerberosUserConfiguration40.setoptions(strMap53);
        java.security.Provider provider58 = kerberosUserConfiguration40.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap59);
        kerberosUserConfiguration32.setoptions(strMap59);
        kerberosUserConfiguration16.setoptions(strMap59);
        kerberosUserConfiguration4.options = strMap59;
        kerberosUserConfiguration1.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test04154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04154");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration7.refresh();
        java.lang.String str11 = kerberosUserConfiguration7.getType();
        java.lang.String str12 = kerberosUserConfiguration7.getType();
        java.security.Provider provider13 = kerberosUserConfiguration7.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration7.getParameters();
        java.lang.String str15 = kerberosUserConfiguration7.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        java.security.Provider provider20 = kerberosUserConfiguration16.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration16.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration7.setoptions(strMap23);
        kerberosUserConfiguration0.options = strMap23;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test04155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04155");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration0.options = strMap11;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        java.lang.String str17 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration0.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test04156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04156");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider13 = kerberosUserConfiguration9.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        java.lang.String str15 = kerberosUserConfiguration9.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str18 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap23);
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration31.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.options = strMap35;
        kerberosUserConfiguration17.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration9.setoptions(strMap38);
        kerberosUserConfiguration0.options = strMap38;
        javax.security.auth.login.Configuration.Parameters parameters41 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str43 = kerberosUserConfiguration42.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration45.refresh();
        java.lang.String str47 = kerberosUserConfiguration45.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration48.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.options = strMap51;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap53);
        kerberosUserConfiguration45.options = strMap53;
        kerberosUserConfiguration42.setoptions(strMap53);
        kerberosUserConfiguration42.refresh();
        javax.security.auth.login.Configuration.Parameters parameters58 = kerberosUserConfiguration42.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration42.getParameters();
        kerberosUserConfiguration42.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray62 = kerberosUserConfiguration42.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.options = strMap64;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = null;
        kerberosUserConfiguration63.setoptions(strMap66);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str69 = kerberosUserConfiguration68.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration68.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = null;
        kerberosUserConfiguration71.options = strMap72;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap74);
        kerberosUserConfiguration63.options = strMap74;
        kerberosUserConfiguration42.setoptions(strMap74);
        kerberosUserConfiguration42.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration42.options;
        java.lang.String str81 = kerberosUserConfiguration42.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration42.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration83 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration83.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration83.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration83);
        kerberosUserConfiguration83.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration83.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration90 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration90.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration83.setoptions(strMap91);
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration83.options;
        kerberosUserConfiguration83.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration83.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.options = strMap95;
        kerberosUserConfiguration0.options = strMap95;
        java.security.Provider provider98 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(parameters41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(parameters58);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray62);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNull(strMap85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNull(provider98);
    }

    @Test
    public void test04157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04157");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration3.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration1.setoptions(strMap16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration18.setoptions(strMap20);
        java.security.Provider provider22 = kerberosUserConfiguration18.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration18.getAppConfigurationEntry("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap28;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider31 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider31);
    }

    @Test
    public void test04158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04158");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration1.options = strMap25;
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration1.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test04159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04159");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray63 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray63);
    }

    @Test
    public void test04160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04160");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        java.security.Provider provider17 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.lang.String str20 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test04161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04161");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        kerberosUserConfiguration0.setoptions(strMap6);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap14);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration19.setoptions(strMap21);
        java.security.Provider provider23 = kerberosUserConfiguration19.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration19.getParameters();
        kerberosUserConfiguration19.refresh();
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration19.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration19.getAppConfigurationEntry("hi!");
        java.security.Provider provider29 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration19.options = strMap30;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getoptions();
        java.lang.String str36 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration19.setoptions(strMap37);
        kerberosUserConfiguration0.setoptions(strMap37);
        java.lang.Class<?> wildcardClass40 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test04162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04162");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider18 = kerberosUserConfiguration17.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration19.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.options = strMap22;
        kerberosUserConfiguration6.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        kerberosUserConfiguration26.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration26.getAppConfigurationEntry("hi!");
        java.lang.String str34 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration6.options = strMap35;
        kerberosUserConfiguration0.options = strMap35;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test04163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04163");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap19);
        kerberosUserConfiguration11.options = strMap19;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration11.getAppConfigurationEntry("");
        java.lang.String str24 = kerberosUserConfiguration11.getType();
        java.security.Provider provider25 = kerberosUserConfiguration11.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration0.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass31 = strMap30.getClass();
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test04164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04164");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider53 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.lang.String str57 = kerberosUserConfiguration56.getType();
        kerberosUserConfiguration56.refresh();
        kerberosUserConfiguration56.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray61 = kerberosUserConfiguration56.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str63 = kerberosUserConfiguration62.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration65.refresh();
        java.lang.String str67 = kerberosUserConfiguration65.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration68.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = null;
        kerberosUserConfiguration70.options = strMap71;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap73);
        kerberosUserConfiguration65.options = strMap73;
        kerberosUserConfiguration62.setoptions(strMap73);
        kerberosUserConfiguration62.refresh();
        javax.security.auth.login.Configuration.Parameters parameters78 = kerberosUserConfiguration62.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters80 = kerberosUserConfiguration79.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration79.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration79.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap82);
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration62.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration85 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration85.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration85.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration85.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.options = strMap88;
        kerberosUserConfiguration56.setoptions(strMap88);
        kerberosUserConfiguration1.options = strMap88;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(parameters54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(parameters78);
        org.junit.Assert.assertNull(parameters80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(strMap86);
        org.junit.Assert.assertNull(strMap87);
        org.junit.Assert.assertNotNull(strMap88);
    }

    @Test
    public void test04165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04165");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.options = strMap9;
        java.lang.String str11 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.lang.String str15 = kerberosUserConfiguration6.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap18;
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test04166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04166");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test04167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04167");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration16.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider27 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getoptions();
        kerberosUserConfiguration16.setoptions(strMap28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.options = strMap35;
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration0.options = strMap38;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration40.refresh();
        java.lang.String str42 = kerberosUserConfiguration40.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration43.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.setoptions(strMap48);
        kerberosUserConfiguration40.options = strMap48;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray52 = kerberosUserConfiguration40.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray54 = kerberosUserConfiguration40.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration0.setoptions(strMap55);
        java.lang.Class<?> wildcardClass57 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test04168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04168");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration1.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration22.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration22.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration29);
        kerberosUserConfiguration29.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration29.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.options = strMap39;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration38.options = strMap41;
        kerberosUserConfiguration29.options = strMap41;
        kerberosUserConfiguration22.options = strMap41;
        kerberosUserConfiguration1.setoptions(strMap41);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider49 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNull(provider49);
    }

    @Test
    public void test04169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04169");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(parameters11);
    }

    @Test
    public void test04170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04170");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration14.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration21.refresh();
        java.lang.String str23 = kerberosUserConfiguration21.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap32);
        kerberosUserConfiguration21.setoptions(strMap32);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration21.getAppConfigurationEntry("");
        kerberosUserConfiguration21.refresh();
        java.lang.String str38 = kerberosUserConfiguration21.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray40 = kerberosUserConfiguration21.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap41;
        kerberosUserConfiguration0.setoptions(strMap41);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray40);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test04171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04171");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider17 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        kerberosUserConfiguration22.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str29 = kerberosUserConfiguration28.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap34);
        java.security.Provider provider36 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap37;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        java.security.Provider provider40 = kerberosUserConfiguration22.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str43 = kerberosUserConfiguration42.getType();
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.lang.String str48 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration51.refresh();
        java.lang.String str53 = kerberosUserConfiguration51.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration54.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration54);
        kerberosUserConfiguration54.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration61.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap62);
        kerberosUserConfiguration51.setoptions(strMap62);
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration51.options;
        kerberosUserConfiguration45.setoptions(strMap65);
        kerberosUserConfiguration42.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap68;
        kerberosUserConfiguration0.options = strMap68;
        javax.security.auth.login.Configuration.Parameters parameters71 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(parameters71);
    }

    @Test
    public void test04172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04172");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap19);
        java.lang.Class<?> wildcardClass21 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test04173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04173");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider14 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass19 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test04174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04174");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray47 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray47);
    }

    @Test
    public void test04175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04175");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.String str24 = kerberosUserConfiguration1.getType();
        java.security.Provider provider25 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.setoptions(strMap28);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration26.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider33 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration26.options;
        java.security.Provider provider35 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration26.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration40.setoptions(strMap44);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration46.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.options = strMap48;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration26.options = strMap50;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str53 = kerberosUserConfiguration52.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration52.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap58);
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration61.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration61.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration61);
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration66.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters69 = kerberosUserConfiguration66.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.options = strMap70;
        kerberosUserConfiguration52.options = strMap70;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration52.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration26.setoptions(strMap75);
        kerberosUserConfiguration1.setoptions(strMap75);
        java.security.Provider provider78 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters80 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(parameters69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNull(parameters80);
    }

    @Test
    public void test04176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04176");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration20.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getoptions();
        java.lang.String str32 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(parameters33);
    }

    @Test
    public void test04177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04177");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test04178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04178");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        java.lang.String str25 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider29 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNull(provider29);
    }

    @Test
    public void test04179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04179");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        java.security.Provider provider14 = kerberosUserConfiguration9.getProvider();
        java.security.Provider provider15 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test04180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04180");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.security.Provider provider15 = kerberosUserConfiguration10.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration16.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration24.refresh();
        java.lang.String str26 = kerberosUserConfiguration24.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap32);
        kerberosUserConfiguration24.options = strMap32;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration24.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration36.refresh();
        java.lang.String str38 = kerberosUserConfiguration36.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration39.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap44);
        kerberosUserConfiguration36.options = strMap44;
        kerberosUserConfiguration24.setoptions(strMap44);
        kerberosUserConfiguration10.setoptions(strMap44);
        kerberosUserConfiguration0.options = strMap44;
        java.lang.String str50 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test04181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04181");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test04182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04182");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.setoptions(strMap9);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider14 = kerberosUserConfiguration7.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration1.options = strMap18;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test04183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04183");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        kerberosUserConfiguration11.refresh();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration16.refresh();
        java.lang.String str18 = kerberosUserConfiguration16.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap24);
        kerberosUserConfiguration16.options = strMap24;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration16.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration11.setoptions(strMap29);
        kerberosUserConfiguration0.setoptions(strMap29);
        java.lang.String str32 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test04184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04184");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        java.lang.String str52 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass54 = strMap53.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(wildcardClass54);
    }

    @Test
    public void test04185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04185");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration24.options = strMap27;
        kerberosUserConfiguration21.options = strMap27;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.lang.String str33 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration37.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str48 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        java.lang.String str52 = kerberosUserConfiguration50.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration50.options = strMap58;
        kerberosUserConfiguration47.setoptions(strMap58);
        kerberosUserConfiguration45.setoptions(strMap58);
        java.security.Provider provider63 = kerberosUserConfiguration45.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap64);
        kerberosUserConfiguration37.setoptions(strMap64);
        kerberosUserConfiguration21.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration15.options = strMap69;
        java.security.Provider provider71 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap73;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray76 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration1.options;
        java.lang.Class<?> wildcardClass78 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(wildcardClass78);
    }

    @Test
    public void test04186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04186");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(parameters18);
    }

    @Test
    public void test04187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04187");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration15.getoptions();
        java.lang.String str22 = kerberosUserConfiguration15.getType();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration15.getParameters();
        java.lang.String str24 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration15.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration27);
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration32.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.options = strMap36;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str39 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap44);
        kerberosUserConfiguration27.options = strMap44;
        java.lang.String str47 = kerberosUserConfiguration27.getType();
        java.security.Provider provider48 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration15.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration15.getoptions();
        kerberosUserConfiguration0.options = strMap51;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test04188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04188");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration5.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.refresh();
        java.lang.String str30 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration37.options = strMap40;
        kerberosUserConfiguration34.options = strMap40;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.lang.String str46 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap48);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration58.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str61 = kerberosUserConfiguration60.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration63.refresh();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration66.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap71);
        kerberosUserConfiguration63.options = strMap71;
        kerberosUserConfiguration60.setoptions(strMap71);
        kerberosUserConfiguration58.setoptions(strMap71);
        java.security.Provider provider76 = kerberosUserConfiguration58.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap77);
        kerberosUserConfiguration50.setoptions(strMap77);
        kerberosUserConfiguration34.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration0.options = strMap84;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration86 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration86.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration86.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration86.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration86.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration86);
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration86.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration86.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap93;
        javax.security.auth.login.Configuration.Parameters parameters95 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider96 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray98 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(parameters87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNull(parameters95);
        org.junit.Assert.assertNull(provider96);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray98);
    }

    @Test
    public void test04189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04189");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test04190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04190");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str14 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration13.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration13.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider24 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration13.setoptions(strMap25);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.options = strMap32;
        kerberosUserConfiguration0.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass38 = appConfigurationEntryArray37.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test04191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04191");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider6);
    }

    @Test
    public void test04192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04192");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap18;
        kerberosUserConfiguration0.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getoptions();
        java.lang.String str26 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test04193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04193");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider15 = kerberosUserConfiguration11.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        java.lang.String str17 = kerberosUserConfiguration11.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap25);
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.options = strMap37;
        kerberosUserConfiguration19.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration11.setoptions(strMap40);
        kerberosUserConfiguration0.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration0.options;
        java.lang.String str44 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str44);
    }

    @Test
    public void test04194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04194");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration10.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration21.refresh();
        java.lang.String str23 = kerberosUserConfiguration21.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap32);
        kerberosUserConfiguration21.setoptions(strMap32);
        kerberosUserConfiguration10.setoptions(strMap32);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str40 = kerberosUserConfiguration39.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration42.refresh();
        java.lang.String str44 = kerberosUserConfiguration42.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.options = strMap48;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.setoptions(strMap50);
        kerberosUserConfiguration42.options = strMap50;
        kerberosUserConfiguration39.setoptions(strMap50);
        kerberosUserConfiguration37.setoptions(strMap50);
        kerberosUserConfiguration10.setoptions(strMap50);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        java.lang.String str60 = kerberosUserConfiguration57.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration10.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap63);
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test04195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04195");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
    }

    @Test
    public void test04196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04196");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.lang.String str7 = kerberosUserConfiguration4.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        kerberosUserConfiguration13.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap21);
        kerberosUserConfiguration10.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration4.setoptions(strMap24);
        kerberosUserConfiguration1.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.options;
        java.lang.String str29 = kerberosUserConfiguration1.getType();
        java.security.Provider provider30 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider31 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNull(provider31);
    }

    @Test
    public void test04197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04197");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(parameters14);
    }

    @Test
    public void test04198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04198");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration0.options = strMap9;
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(provider12);
    }

    @Test
    public void test04199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04199");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test04200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04200");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
    }

    @Test
    public void test04201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04201");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration6.setoptions(strMap12);
        java.lang.String str14 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration20);
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap28);
        kerberosUserConfiguration17.setoptions(strMap28);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        kerberosUserConfiguration17.refresh();
        java.lang.String str34 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration6.options = strMap35;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration37.setoptions(strMap40);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str43 = kerberosUserConfiguration42.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.setoptions(strMap48);
        kerberosUserConfiguration37.options = strMap48;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration6.setoptions(strMap51);
        kerberosUserConfiguration1.setoptions(strMap51);
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test04202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04202");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test04203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04203");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration1.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test04204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04204");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        java.lang.String str14 = kerberosUserConfiguration12.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration12.options = strMap20;
        kerberosUserConfiguration0.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str25 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration27.refresh();
        java.lang.String str29 = kerberosUserConfiguration27.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap35);
        kerberosUserConfiguration27.options = strMap35;
        kerberosUserConfiguration24.setoptions(strMap35);
        kerberosUserConfiguration24.refresh();
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration24.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap44);
        kerberosUserConfiguration0.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str51 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test04205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04205");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap16;
        kerberosUserConfiguration0.setoptions(strMap16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration20);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration20.getAppConfigurationEntry("hi!");
        java.lang.String str28 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration0.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test04206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04206");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test04207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04207");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap19);
        kerberosUserConfiguration11.options = strMap19;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration11.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str26 = kerberosUserConfiguration25.getType();
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        kerberosUserConfiguration25.refresh();
        java.security.Provider provider32 = kerberosUserConfiguration25.getProvider();
        java.lang.String str33 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration11.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration41.setoptions(strMap43);
        java.security.Provider provider45 = kerberosUserConfiguration41.getProvider();
        kerberosUserConfiguration41.refresh();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration41.getParameters();
        java.lang.String str48 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration49.options;
        kerberosUserConfiguration49.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration49.options = strMap52;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration49);
        java.lang.String str55 = kerberosUserConfiguration49.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str57 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration59.refresh();
        java.lang.String str61 = kerberosUserConfiguration59.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration62.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = null;
        kerberosUserConfiguration64.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap67);
        kerberosUserConfiguration59.options = strMap67;
        kerberosUserConfiguration56.setoptions(strMap67);
        kerberosUserConfiguration56.refresh();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration56.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters73 = kerberosUserConfiguration56.getParameters();
        kerberosUserConfiguration56.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray76 = kerberosUserConfiguration56.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = null;
        kerberosUserConfiguration77.options = strMap78;
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = null;
        kerberosUserConfiguration77.setoptions(strMap80);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str83 = kerberosUserConfiguration82.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration82.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration85 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = null;
        kerberosUserConfiguration85.options = strMap86;
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration85.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration82.setoptions(strMap88);
        kerberosUserConfiguration77.options = strMap88;
        kerberosUserConfiguration56.setoptions(strMap88);
        kerberosUserConfiguration56.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap93);
        kerberosUserConfiguration41.setoptions(strMap93);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray97 = kerberosUserConfiguration41.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap98 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap98;
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNull(parameters73);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray76);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray97);
        org.junit.Assert.assertNotNull(strMap98);
    }

    @Test
    public void test04208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04208");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration20.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        java.security.Provider provider27 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str31 = kerberosUserConfiguration1.getType();
        java.security.Provider provider32 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test04209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04209");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        kerberosUserConfiguration6.setoptions(strMap17);
        kerberosUserConfiguration0.options = strMap17;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration29.refresh();
        java.lang.String str31 = kerberosUserConfiguration29.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap37);
        kerberosUserConfiguration29.options = strMap37;
        kerberosUserConfiguration26.setoptions(strMap37);
        kerberosUserConfiguration26.refresh();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration26.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration26.getParameters();
        kerberosUserConfiguration26.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray46 = kerberosUserConfiguration26.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap47;
        kerberosUserConfiguration0.setoptions(strMap47);
        java.lang.String str50 = kerberosUserConfiguration0.getType();
        java.security.Provider provider51 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(provider51);
    }

    @Test
    public void test04210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04210");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        java.lang.String str34 = kerberosUserConfiguration32.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration32.options = strMap40;
        kerberosUserConfiguration29.setoptions(strMap40);
        kerberosUserConfiguration27.setoptions(strMap40);
        kerberosUserConfiguration0.setoptions(strMap40);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider47 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters50);
    }

    @Test
    public void test04211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04211");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str11 = kerberosUserConfiguration10.getType();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.lang.String str18 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration0.options = strMap19;
        java.security.Provider provider21 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test04212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04212");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass4 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test04213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04213");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass7 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test04214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04214");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test04215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04215");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test04216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04216");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str19 = kerberosUserConfiguration18.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration21.refresh();
        java.lang.String str23 = kerberosUserConfiguration21.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap29);
        kerberosUserConfiguration21.options = strMap29;
        kerberosUserConfiguration18.setoptions(strMap29);
        kerberosUserConfiguration16.setoptions(strMap29);
        java.security.Provider provider34 = kerberosUserConfiguration16.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration35.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.options = strMap40;
        java.security.Provider provider42 = kerberosUserConfiguration16.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration43.setoptions(strMap45);
        java.security.Provider provider47 = kerberosUserConfiguration43.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration43.getParameters();
        kerberosUserConfiguration43.refresh();
        java.security.Provider provider50 = kerberosUserConfiguration43.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration51.refresh();
        java.lang.String str53 = kerberosUserConfiguration51.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration54.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration54);
        kerberosUserConfiguration54.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration61.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap62);
        kerberosUserConfiguration51.setoptions(strMap62);
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration51.options;
        kerberosUserConfiguration51.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration51.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider70 = kerberosUserConfiguration69.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters71 = kerberosUserConfiguration69.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration69.getoptions();
        kerberosUserConfiguration51.setoptions(strMap72);
        kerberosUserConfiguration43.options = strMap72;
        kerberosUserConfiguration16.setoptions(strMap72);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration79.options;
        kerberosUserConfiguration79.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration79.options = strMap82;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration79.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration79.getoptions();
        kerberosUserConfiguration16.setoptions(strMap85);
        kerberosUserConfiguration0.setoptions(strMap85);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(parameters71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test04217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04217");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test04218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04218");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider17 = kerberosUserConfiguration16.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration6.setoptions(strMap23);
        kerberosUserConfiguration0.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
    }

    @Test
    public void test04219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04219");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap14;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider17 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test04220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04220");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration8.setoptions(strMap14);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration8.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration0.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test04221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04221");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        java.lang.String str14 = kerberosUserConfiguration12.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration12.options = strMap20;
        kerberosUserConfiguration9.setoptions(strMap20);
        kerberosUserConfiguration7.setoptions(strMap20);
        java.security.Provider provider25 = kerberosUserConfiguration7.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration26.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap31;
        kerberosUserConfiguration0.setoptions(strMap31);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray39 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray39);
    }

    @Test
    public void test04222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04222");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.setoptions(strMap11);
        java.security.Provider provider13 = kerberosUserConfiguration9.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration9.getParameters();
        kerberosUserConfiguration9.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.setoptions(strMap18);
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        java.lang.String str21 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str24 = kerberosUserConfiguration23.getType();
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.options = strMap29;
        kerberosUserConfiguration23.options = strMap29;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.lang.String str35 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration39.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str50 = kerberosUserConfiguration49.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        java.lang.String str54 = kerberosUserConfiguration52.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration55.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration55.setoptions(strMap60);
        kerberosUserConfiguration52.options = strMap60;
        kerberosUserConfiguration49.setoptions(strMap60);
        kerberosUserConfiguration47.setoptions(strMap60);
        java.security.Provider provider65 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.setoptions(strMap66);
        kerberosUserConfiguration39.setoptions(strMap66);
        kerberosUserConfiguration23.setoptions(strMap66);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray71 = kerberosUserConfiguration23.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration23.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray75 = kerberosUserConfiguration23.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration0.setoptions(strMap76);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass79 = strMap78.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray71);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test04223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04223");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        kerberosUserConfiguration7.refresh();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration7.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        java.security.Provider provider21 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.options;
        java.lang.String str23 = kerberosUserConfiguration17.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        java.lang.String str28 = kerberosUserConfiguration17.getType();
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration30.getParameters();
        kerberosUserConfiguration30.refresh();
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration30.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration35.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str40 = kerberosUserConfiguration39.getType();
        kerberosUserConfiguration39.refresh();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.options = strMap44;
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration47.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration51.setoptions(strMap53);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray56 = kerberosUserConfiguration51.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = null;
        kerberosUserConfiguration58.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration58.options = strMap61;
        kerberosUserConfiguration51.setoptions(strMap61);
        kerberosUserConfiguration47.options = strMap61;
        kerberosUserConfiguration35.options = strMap61;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration35.options;
        kerberosUserConfiguration30.options = strMap67;
        kerberosUserConfiguration17.setoptions(strMap67);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap70;
        java.lang.Class<?> wildcardClass72 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(wildcardClass72);
    }

    @Test
    public void test04224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04224");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration1.setoptions(strMap5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap9;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.setoptions(strMap17);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration15.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration22.options = strMap25;
        kerberosUserConfiguration15.setoptions(strMap25);
        kerberosUserConfiguration11.options = strMap25;
        kerberosUserConfiguration1.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getoptions();
        java.lang.String str32 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test04225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04225");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
    }

    @Test
    public void test04226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04226");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test04227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04227");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray57 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str62 = kerberosUserConfiguration61.getType();
        kerberosUserConfiguration61.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration61.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration61.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration61);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray68 = kerberosUserConfiguration61.getAppConfigurationEntry("hi!");
        java.lang.String str69 = kerberosUserConfiguration61.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration61.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration61.getoptions();
        kerberosUserConfiguration0.options = strMap71;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test04228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04228");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration1.options = strMap22;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider25 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test04229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04229");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        java.security.Provider provider20 = kerberosUserConfiguration16.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider25 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str29 = kerberosUserConfiguration28.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration31.refresh();
        java.lang.String str33 = kerberosUserConfiguration31.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap39);
        kerberosUserConfiguration31.options = strMap39;
        kerberosUserConfiguration28.setoptions(strMap39);
        kerberosUserConfiguration28.refresh();
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration28.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration28.getParameters();
        kerberosUserConfiguration28.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration28.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = null;
        kerberosUserConfiguration49.options = strMap50;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration49.setoptions(strMap52);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str55 = kerberosUserConfiguration54.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration54.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap60);
        kerberosUserConfiguration49.options = strMap60;
        kerberosUserConfiguration28.setoptions(strMap60);
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration28.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration67.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration67.setoptions(strMap69);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray72 = kerberosUserConfiguration67.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider74 = kerberosUserConfiguration67.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration67.options;
        java.security.Provider provider76 = kerberosUserConfiguration67.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration67.options;
        kerberosUserConfiguration67.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration67.getoptions();
        kerberosUserConfiguration28.options = strMap79;
        kerberosUserConfiguration16.setoptions(strMap79);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = null;
        kerberosUserConfiguration82.options = strMap83;
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = null;
        kerberosUserConfiguration82.setoptions(strMap85);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration82);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration88 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = null;
        kerberosUserConfiguration88.options = strMap89;
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration88.options = strMap91;
        java.lang.String str93 = kerberosUserConfiguration88.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap94 = kerberosUserConfiguration88.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration88.options;
        kerberosUserConfiguration82.setoptions(strMap95);
        kerberosUserConfiguration16.options = strMap95;
        kerberosUserConfiguration0.setoptions(strMap95);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(str93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test04230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04230");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap22);
        java.security.Provider provider24 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider25 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(provider25);
    }

    @Test
    public void test04231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04231");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider14 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass19 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test04232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04232");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider51 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str53 = kerberosUserConfiguration52.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration52.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap55);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider59 = kerberosUserConfiguration58.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration58.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str63 = kerberosUserConfiguration62.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = null;
        kerberosUserConfiguration65.options = strMap66;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap68);
        java.security.Provider provider70 = kerberosUserConfiguration62.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.refresh();
        java.security.Provider provider73 = kerberosUserConfiguration62.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration62.options;
        kerberosUserConfiguration58.options = strMap74;
        kerberosUserConfiguration1.setoptions(strMap74);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test04233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04233");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str60 = kerberosUserConfiguration59.getType();
        kerberosUserConfiguration59.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = null;
        kerberosUserConfiguration62.options = strMap63;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration62.options = strMap65;
        kerberosUserConfiguration59.options = strMap65;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.lang.String str71 = kerberosUserConfiguration68.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration68.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration59.setoptions(strMap73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration59.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration59.options;
        kerberosUserConfiguration0.setoptions(strMap76);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration0.getoptions();
        java.lang.String str79 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test04234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04234");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap19);
        kerberosUserConfiguration11.options = strMap19;
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration11.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration23.refresh();
        java.lang.String str25 = kerberosUserConfiguration23.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap31);
        kerberosUserConfiguration23.options = strMap31;
        kerberosUserConfiguration11.setoptions(strMap31);
        kerberosUserConfiguration7.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration7.options;
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.options;
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration39.getParameters();
        java.lang.String str43 = kerberosUserConfiguration39.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration39.getoptions();
        kerberosUserConfiguration7.options = strMap45;
        kerberosUserConfiguration0.options = strMap45;
        java.lang.String str48 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str48);
    }

    @Test
    public void test04235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04235");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration13.options = strMap16;
        kerberosUserConfiguration6.setoptions(strMap16);
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap20;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
    }

    @Test
    public void test04236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04236");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test04237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04237");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.lang.String str7 = kerberosUserConfiguration4.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        kerberosUserConfiguration13.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap21);
        kerberosUserConfiguration10.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration4.setoptions(strMap24);
        kerberosUserConfiguration1.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test04238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04238");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap31);
        kerberosUserConfiguration24.setoptions(strMap31);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration24.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration0.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass41 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test04239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04239");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration7.setoptions(strMap10);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap24);
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration19.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration16.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration30.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration30.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str37 = kerberosUserConfiguration36.getType();
        kerberosUserConfiguration36.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration39.options = strMap42;
        kerberosUserConfiguration36.options = strMap42;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.lang.String str48 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration36.setoptions(strMap50);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str63 = kerberosUserConfiguration62.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration65.refresh();
        java.lang.String str67 = kerberosUserConfiguration65.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration68.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = null;
        kerberosUserConfiguration70.options = strMap71;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap73);
        kerberosUserConfiguration65.options = strMap73;
        kerberosUserConfiguration62.setoptions(strMap73);
        kerberosUserConfiguration60.setoptions(strMap73);
        java.security.Provider provider78 = kerberosUserConfiguration60.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration55.setoptions(strMap79);
        kerberosUserConfiguration52.setoptions(strMap79);
        kerberosUserConfiguration36.setoptions(strMap79);
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration36.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration36.getoptions();
        kerberosUserConfiguration30.options = strMap84;
        java.security.Provider provider86 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.options = strMap88;
        kerberosUserConfiguration7.options = strMap88;
        kerberosUserConfiguration0.options = strMap88;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray93 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap94 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray96 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(provider86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray96);
    }

    @Test
    public void test04240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04240");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.options = strMap13;
        java.lang.String str15 = kerberosUserConfiguration10.getType();
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.lang.String str19 = kerberosUserConfiguration10.getType();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration10.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap27);
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration10.setoptions(strMap30);
        kerberosUserConfiguration0.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
    }

    @Test
    public void test04241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04241");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration11.setoptions(strMap17);
        java.lang.String str19 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration11.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass26 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test04242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04242");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str55 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str55);
    }

    @Test
    public void test04243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04243");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str57 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration59.refresh();
        java.lang.String str61 = kerberosUserConfiguration59.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration62.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = null;
        kerberosUserConfiguration64.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap67);
        kerberosUserConfiguration59.options = strMap67;
        kerberosUserConfiguration56.setoptions(strMap67);
        kerberosUserConfiguration56.refresh();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration56.getParameters();
        java.lang.String str73 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap74;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider81 = kerberosUserConfiguration80.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration80.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration83 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration83.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration85 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = null;
        kerberosUserConfiguration85.options = strMap86;
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration85.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration83.setoptions(strMap88);
        javax.security.auth.login.Configuration.Parameters parameters90 = kerberosUserConfiguration83.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration83.getoptions();
        kerberosUserConfiguration80.setoptions(strMap91);
        kerberosUserConfiguration0.setoptions(strMap91);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(parameters90);
        org.junit.Assert.assertNotNull(strMap91);
    }

    @Test
    public void test04244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04244");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(parameters9);
    }

    @Test
    public void test04245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04245");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass52 = appConfigurationEntryArray51.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test04246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04246");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.options = strMap19;
        kerberosUserConfiguration7.options = strMap19;
        kerberosUserConfiguration0.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass25 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test04247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04247");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test04248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04248");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration16.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider23 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration16.options;
        java.security.Provider provider25 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration30.setoptions(strMap34);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration36.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration16.options = strMap40;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str43 = kerberosUserConfiguration42.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.setoptions(strMap48);
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        kerberosUserConfiguration51.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration56.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.options = strMap60;
        kerberosUserConfiguration42.options = strMap60;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration42.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration16.setoptions(strMap65);
        kerberosUserConfiguration0.setoptions(strMap65);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
    }

    @Test
    public void test04249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04249");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.security.Provider provider16 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap23;
        kerberosUserConfiguration0.setoptions(strMap23);
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider29 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
    }

    @Test
    public void test04250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04250");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test04251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04251");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration17.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap22);
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.options;
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration26.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration34.setoptions(strMap36);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray39 = kerberosUserConfiguration34.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider41 = kerberosUserConfiguration34.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray43 = kerberosUserConfiguration34.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration26.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration1.setoptions(strMap46);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test04252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04252");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap28);
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration20.setoptions(strMap31);
        kerberosUserConfiguration0.options = strMap31;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
    }

    @Test
    public void test04253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04253");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration3.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration3.getAppConfigurationEntry("hi!");
        java.lang.String str13 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration3.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration3.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.options;
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test04254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04254");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str11 = kerberosUserConfiguration10.getType();
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.options = strMap15;
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap18;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test04255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04255");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider16 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
    }

    @Test
    public void test04256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04256");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration8.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.options = strMap20;
        java.lang.String str22 = kerberosUserConfiguration19.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.options;
        java.security.Provider provider24 = kerberosUserConfiguration19.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration25.setoptions(strMap27);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration25.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap31;
        kerberosUserConfiguration8.setoptions(strMap31);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        java.security.Provider provider35 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration1.options = strMap36;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test04257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04257");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration13.setoptions(strMap15);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration13.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration20.options = strMap23;
        kerberosUserConfiguration13.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str29 = kerberosUserConfiguration28.getType();
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration9.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration33.setoptions(strMap40);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration9.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test04258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04258");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str14 = kerberosUserConfiguration13.getType();
        kerberosUserConfiguration13.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
    }

    @Test
    public void test04259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04259");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        java.lang.String str21 = kerberosUserConfiguration19.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap27);
        kerberosUserConfiguration19.options = strMap27;
        kerberosUserConfiguration16.setoptions(strMap27);
        kerberosUserConfiguration14.setoptions(strMap27);
        java.security.Provider provider32 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap33);
        kerberosUserConfiguration6.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test04260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04260");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.options = strMap19;
        kerberosUserConfiguration7.options = strMap19;
        kerberosUserConfiguration0.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.options;
        java.lang.String str26 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test04261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04261");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test04262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04262");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration1.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.security.Provider provider24 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(provider24);
    }

    @Test
    public void test04263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04263");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
    }

    @Test
    public void test04264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04264");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration1.setoptions(strMap5);
        java.lang.Class<?> wildcardClass7 = strMap5.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test04265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04265");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.security.Provider provider14 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(parameters15);
    }

    @Test
    public void test04266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04266");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str57 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration59.refresh();
        java.lang.String str61 = kerberosUserConfiguration59.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration62.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = null;
        kerberosUserConfiguration64.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap67);
        kerberosUserConfiguration59.options = strMap67;
        kerberosUserConfiguration56.setoptions(strMap67);
        kerberosUserConfiguration56.refresh();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration56.getParameters();
        java.lang.String str73 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap74;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration76.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = null;
        kerberosUserConfiguration78.options = strMap79;
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration78.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration76.setoptions(strMap81);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray84 = kerberosUserConfiguration76.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters86 = kerberosUserConfiguration76.getParameters();
        java.security.Provider provider87 = kerberosUserConfiguration76.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration76.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray90 = kerberosUserConfiguration76.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters91 = kerberosUserConfiguration76.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration76.options;
        kerberosUserConfiguration0.options = strMap92;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(parameters86);
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray90);
        org.junit.Assert.assertNull(parameters91);
        org.junit.Assert.assertNotNull(strMap92);
    }

    @Test
    public void test04267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04267");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str41 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test04268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04268");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test04269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04269");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test04270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04270");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap17);
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration9.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        kerberosUserConfiguration29.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration32.options = strMap35;
        kerberosUserConfiguration29.options = strMap35;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.options = strMap39;
        java.lang.String str41 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap43);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str56 = kerberosUserConfiguration55.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration55.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration58.refresh();
        java.lang.String str60 = kerberosUserConfiguration58.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.options = strMap64;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.setoptions(strMap66);
        kerberosUserConfiguration58.options = strMap66;
        kerberosUserConfiguration55.setoptions(strMap66);
        kerberosUserConfiguration53.setoptions(strMap66);
        java.security.Provider provider71 = kerberosUserConfiguration53.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap72);
        kerberosUserConfiguration45.setoptions(strMap72);
        kerberosUserConfiguration29.setoptions(strMap72);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration29.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration29.getoptions();
        kerberosUserConfiguration23.options = strMap77;
        java.security.Provider provider79 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap81;
        kerberosUserConfiguration0.options = strMap81;
        java.lang.String str84 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass85 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(provider79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(wildcardClass85);
    }

    @Test
    public void test04271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04271");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str11 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration10.setoptions(strMap16);
        java.lang.String str18 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration10.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.options = strMap20;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        java.lang.String str24 = kerberosUserConfiguration22.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap33);
        kerberosUserConfiguration22.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration22.getoptions();
        java.lang.String str39 = kerberosUserConfiguration22.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str41 = kerberosUserConfiguration40.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration43.refresh();
        java.lang.String str45 = kerberosUserConfiguration43.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration46.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.setoptions(strMap51);
        kerberosUserConfiguration43.options = strMap51;
        kerberosUserConfiguration40.setoptions(strMap51);
        kerberosUserConfiguration40.refresh();
        javax.security.auth.login.Configuration.Parameters parameters56 = kerberosUserConfiguration40.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration40.getParameters();
        kerberosUserConfiguration40.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray60 = kerberosUserConfiguration40.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = null;
        kerberosUserConfiguration61.options = strMap62;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration61.setoptions(strMap64);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str67 = kerberosUserConfiguration66.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration66.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = null;
        kerberosUserConfiguration69.options = strMap70;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap72);
        kerberosUserConfiguration61.options = strMap72;
        kerberosUserConfiguration40.setoptions(strMap72);
        kerberosUserConfiguration40.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration22.options = strMap78;
        kerberosUserConfiguration22.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap81;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(parameters56);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray60);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test04272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04272");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.options = strMap26;
        java.lang.String str28 = kerberosUserConfiguration23.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration23.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration31.refresh();
        java.lang.String str33 = kerberosUserConfiguration31.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap39);
        kerberosUserConfiguration31.options = strMap39;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray43 = kerberosUserConfiguration31.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration23.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration23.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration1.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(parameters52);
    }

    @Test
    public void test04273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04273");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.security.Provider provider15 = kerberosUserConfiguration10.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration16.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration24.refresh();
        java.lang.String str26 = kerberosUserConfiguration24.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap32);
        kerberosUserConfiguration24.options = strMap32;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration24.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration36.refresh();
        java.lang.String str38 = kerberosUserConfiguration36.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration39.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap44);
        kerberosUserConfiguration36.options = strMap44;
        kerberosUserConfiguration24.setoptions(strMap44);
        kerberosUserConfiguration10.setoptions(strMap44);
        kerberosUserConfiguration0.options = strMap44;
        java.lang.String str50 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str52 = kerberosUserConfiguration0.getType();
        java.security.Provider provider53 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(provider53);
    }

    @Test
    public void test04274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04274");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test04275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04275");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test04276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04276");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider13 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap15);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters20);
    }

    @Test
    public void test04277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04277");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration0.setoptions(strMap11);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test04278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04278");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration16.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration20.setoptions(strMap22);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration20.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration27.options = strMap30;
        kerberosUserConfiguration20.setoptions(strMap30);
        kerberosUserConfiguration16.options = strMap30;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str36 = kerberosUserConfiguration35.getType();
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        kerberosUserConfiguration16.options = strMap38;
        kerberosUserConfiguration16.refresh();
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration0.setoptions(strMap42);
        java.security.Provider provider44 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider44);
    }

    @Test
    public void test04279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04279");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.options = strMap10;
        kerberosUserConfiguration0.setoptions(strMap10);
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration16.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration0.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str31 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        java.lang.String str35 = kerberosUserConfiguration33.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration36.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.options = strMap39;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration36.setoptions(strMap41);
        kerberosUserConfiguration33.options = strMap41;
        kerberosUserConfiguration30.setoptions(strMap41);
        kerberosUserConfiguration28.setoptions(strMap41);
        java.security.Provider provider46 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration28.options;
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration28.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray50 = kerberosUserConfiguration28.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration28.getParameters();
        java.lang.String str52 = kerberosUserConfiguration28.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray54 = kerberosUserConfiguration28.getAppConfigurationEntry("");
        kerberosUserConfiguration28.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray57 = kerberosUserConfiguration28.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration59.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration59.options;
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration59.getParameters();
        java.lang.String str63 = kerberosUserConfiguration59.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration59);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration59);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration66.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration68.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = null;
        kerberosUserConfiguration70.options = strMap71;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap73);
        kerberosUserConfiguration66.setoptions(strMap73);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str77 = kerberosUserConfiguration76.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration76.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = null;
        kerberosUserConfiguration79.options = strMap80;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration79.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration76.setoptions(strMap82);
        kerberosUserConfiguration66.options = strMap82;
        kerberosUserConfiguration59.options = strMap82;
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap86);
        kerberosUserConfiguration0.options = strMap86;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray50);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray54);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test04280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04280");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
    }

    @Test
    public void test04281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04281");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str57 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration59.refresh();
        java.lang.String str61 = kerberosUserConfiguration59.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration62.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = null;
        kerberosUserConfiguration64.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap67);
        kerberosUserConfiguration59.options = strMap67;
        kerberosUserConfiguration56.setoptions(strMap67);
        kerberosUserConfiguration56.refresh();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration56.getParameters();
        java.lang.String str73 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap74;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray78 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration0.options;
        java.lang.String str80 = kerberosUserConfiguration0.getType();
        java.lang.String str81 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration82.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration82.setoptions(strMap84);
        java.security.Provider provider86 = kerberosUserConfiguration82.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration82.options;
        java.lang.String str88 = kerberosUserConfiguration82.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray90 = kerberosUserConfiguration82.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray92 = kerberosUserConfiguration82.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration82.getoptions();
        kerberosUserConfiguration0.setoptions(strMap93);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(provider86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray90);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray92);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test04282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04282");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(str14);
    }

    @Test
    public void test04283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04283");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration0.options = strMap20;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
    }

    @Test
    public void test04284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04284");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        java.security.Provider provider16 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.options = strMap20;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        kerberosUserConfiguration26.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration37.refresh();
        java.lang.String str39 = kerberosUserConfiguration37.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration40);
        kerberosUserConfiguration40.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap48);
        kerberosUserConfiguration37.setoptions(strMap48);
        kerberosUserConfiguration26.setoptions(strMap48);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str56 = kerberosUserConfiguration55.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration55.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration58.refresh();
        java.lang.String str60 = kerberosUserConfiguration58.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.options = strMap64;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.setoptions(strMap66);
        kerberosUserConfiguration58.options = strMap66;
        kerberosUserConfiguration55.setoptions(strMap66);
        kerberosUserConfiguration53.setoptions(strMap66);
        kerberosUserConfiguration26.setoptions(strMap66);
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration73.options;
        java.lang.String str75 = kerberosUserConfiguration73.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration73);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters78 = kerberosUserConfiguration77.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration77.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration77.getoptions();
        kerberosUserConfiguration77.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration73.setoptions(strMap84);
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration73.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap86);
        kerberosUserConfiguration17.options = strMap86;
        kerberosUserConfiguration11.setoptions(strMap86);
        kerberosUserConfiguration0.setoptions(strMap86);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(parameters78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test04285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04285");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass14 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test04286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04286");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test04287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04287");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration12.setoptions(strMap14);
        java.security.Provider provider16 = kerberosUserConfiguration12.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration12.getParameters();
        kerberosUserConfiguration12.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration0.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test04288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04288");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration20.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration29.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration29.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider40 = kerberosUserConfiguration39.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        kerberosUserConfiguration29.setoptions(strMap41);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap43;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test04289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04289");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration1.getParameters();
        java.lang.String str21 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test04290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04290");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration9.getAppConfigurationEntry("hi!");
        java.lang.String str17 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration9.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap21);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test04291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04291");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test04292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04292");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        java.security.Provider provider20 = kerberosUserConfiguration16.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration16.getParameters();
        kerberosUserConfiguration16.refresh();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration16.getParameters();
        java.lang.String str24 = kerberosUserConfiguration16.getType();
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.options = strMap29;
        java.lang.String str31 = kerberosUserConfiguration26.getType();
        kerberosUserConfiguration26.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray34 = kerberosUserConfiguration26.getAppConfigurationEntry("hi!");
        java.lang.String str35 = kerberosUserConfiguration26.getType();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration26.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap43);
        kerberosUserConfiguration37.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration37.getoptions();
        kerberosUserConfiguration26.setoptions(strMap46);
        kerberosUserConfiguration16.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration16.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration16.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration0.setoptions(strMap52);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test04293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04293");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration6.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap16);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration14.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration21.options = strMap24;
        kerberosUserConfiguration14.setoptions(strMap24);
        java.lang.String str27 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str31 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration30.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration14.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration6.setoptions(strMap40);
        kerberosUserConfiguration0.setoptions(strMap40);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test04294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04294");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNull(parameters6);
    }

    @Test
    public void test04295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04295");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.options = strMap26;
        java.lang.String str28 = kerberosUserConfiguration23.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration23.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration31.refresh();
        java.lang.String str33 = kerberosUserConfiguration31.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.setoptions(strMap39);
        kerberosUserConfiguration31.options = strMap39;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray43 = kerberosUserConfiguration31.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration23.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration23.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration1.setoptions(strMap47);
        java.security.Provider provider49 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider49);
    }

    @Test
    public void test04296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04296");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        java.lang.String str3 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        kerberosUserConfiguration5.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration8.options = strMap11;
        kerberosUserConfiguration5.options = strMap11;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.lang.String str17 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration1.options = strMap21;
        java.lang.Class<?> wildcardClass23 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test04297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04297");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test04298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04298");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap27;
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str31 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration30.setoptions(strMap36);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray39 = kerberosUserConfiguration30.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str42 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration41.setoptions(strMap47);
        java.lang.String str49 = kerberosUserConfiguration41.getType();
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration30.options = strMap51;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test04299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04299");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(parameters13);
    }

    @Test
    public void test04300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04300");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str14 = kerberosUserConfiguration13.getType();
        kerberosUserConfiguration13.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNull(parameters22);
    }

    @Test
    public void test04301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04301");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str14 = kerberosUserConfiguration13.getType();
        kerberosUserConfiguration13.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap18;
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration21.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration25.setoptions(strMap27);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration25.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration32.options = strMap35;
        kerberosUserConfiguration25.setoptions(strMap35);
        kerberosUserConfiguration21.options = strMap35;
        kerberosUserConfiguration9.options = strMap35;
        kerberosUserConfiguration0.setoptions(strMap35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        java.lang.String str43 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration44.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap49);
        kerberosUserConfiguration41.options = strMap49;
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration41.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        java.lang.String str55 = kerberosUserConfiguration53.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration56.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = null;
        kerberosUserConfiguration58.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration56.setoptions(strMap61);
        kerberosUserConfiguration53.options = strMap61;
        kerberosUserConfiguration41.setoptions(strMap61);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str66 = kerberosUserConfiguration65.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration65.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration68.refresh();
        java.lang.String str70 = kerberosUserConfiguration68.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration71.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = null;
        kerberosUserConfiguration73.options = strMap74;
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration73.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration71.setoptions(strMap76);
        kerberosUserConfiguration68.options = strMap76;
        kerberosUserConfiguration65.setoptions(strMap76);
        kerberosUserConfiguration65.refresh();
        javax.security.auth.login.Configuration.Parameters parameters81 = kerberosUserConfiguration65.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters83 = kerberosUserConfiguration82.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration82.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration82.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration65.setoptions(strMap85);
        kerberosUserConfiguration41.options = strMap85;
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration0.setoptions(strMap88);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(parameters81);
        org.junit.Assert.assertNull(parameters83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap88);
    }

    @Test
    public void test04302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04302");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration16.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration16.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider21 = kerberosUserConfiguration16.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration22.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap31);
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters33);
    }

    @Test
    public void test04303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04303");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap13);
        java.security.Provider provider15 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration0.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        java.security.Provider provider19 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test04304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04304");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration1.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test04305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04305");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration15.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration24.options = strMap27;
        kerberosUserConfiguration21.options = strMap27;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.lang.String str33 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration37.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str48 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        java.lang.String str52 = kerberosUserConfiguration50.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration50.options = strMap58;
        kerberosUserConfiguration47.setoptions(strMap58);
        kerberosUserConfiguration45.setoptions(strMap58);
        java.security.Provider provider63 = kerberosUserConfiguration45.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap64);
        kerberosUserConfiguration37.setoptions(strMap64);
        kerberosUserConfiguration21.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration15.options = strMap69;
        java.security.Provider provider71 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap73;
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration76.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration76.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration76);
        kerberosUserConfiguration76.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration76.getoptions();
        java.security.Provider provider83 = kerberosUserConfiguration76.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration84 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration84.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration86 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration86.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration88 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = null;
        kerberosUserConfiguration88.options = strMap89;
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration88.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration86.setoptions(strMap91);
        kerberosUserConfiguration84.options = strMap91;
        kerberosUserConfiguration76.options = strMap91;
        kerberosUserConfiguration1.options = strMap91;
        java.security.Provider provider96 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(provider96);
    }

    @Test
    public void test04306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04306");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass18 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test04307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04307");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test04308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04308");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.setoptions(strMap12);
        java.security.Provider provider14 = kerberosUserConfiguration10.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration10.getParameters();
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.options = strMap18;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider26 = kerberosUserConfiguration0.getProvider();
        java.lang.String str27 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test04309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04309");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap16;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str19 = kerberosUserConfiguration18.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        kerberosUserConfiguration7.options = strMap24;
        java.lang.String str27 = kerberosUserConfiguration7.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.lang.String str33 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.options;
        java.security.Provider provider35 = kerberosUserConfiguration30.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration36.setoptions(strMap38);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration36.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.options = strMap42;
        java.lang.String str44 = kerberosUserConfiguration30.getType();
        java.security.Provider provider45 = kerberosUserConfiguration30.getProvider();
        kerberosUserConfiguration30.refresh();
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap48;
        kerberosUserConfiguration0.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration0.options = strMap51;
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray54 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test04310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04310");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test04311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04311");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap12);
        kerberosUserConfiguration4.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration4.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration16.refresh();
        java.lang.String str18 = kerberosUserConfiguration16.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap24);
        kerberosUserConfiguration16.options = strMap24;
        kerberosUserConfiguration4.setoptions(strMap24);
        kerberosUserConfiguration0.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
    }

    @Test
    public void test04312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04312");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(parameters12);
    }

    @Test
    public void test04313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04313");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration2.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration2.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration2);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration2.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        java.security.Provider provider14 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.options = strMap18;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration15.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration0.setoptions(strMap22);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test04314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04314");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str57 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration59.refresh();
        java.lang.String str61 = kerberosUserConfiguration59.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration62.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = null;
        kerberosUserConfiguration64.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap67);
        kerberosUserConfiguration59.options = strMap67;
        kerberosUserConfiguration56.setoptions(strMap67);
        kerberosUserConfiguration56.refresh();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration56.getParameters();
        java.lang.String str73 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap74;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters77 = kerberosUserConfiguration0.getParameters();
        java.lang.String str78 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(parameters77);
        org.junit.Assert.assertNull(str78);
    }

    @Test
    public void test04315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04315");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass5 = strMap4.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test04316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04316");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(parameters11);
    }

    @Test
    public void test04317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04317");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        java.security.Provider provider21 = kerberosUserConfiguration17.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str26 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.lang.String str30 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.options;
        java.security.Provider provider32 = kerberosUserConfiguration27.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration33.setoptions(strMap35);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.options = strMap39;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        java.lang.String str43 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration44.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap49);
        kerberosUserConfiguration41.options = strMap49;
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration41.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration53.refresh();
        java.lang.String str55 = kerberosUserConfiguration53.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration56.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = null;
        kerberosUserConfiguration58.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration56.setoptions(strMap61);
        kerberosUserConfiguration53.options = strMap61;
        kerberosUserConfiguration41.setoptions(strMap61);
        kerberosUserConfiguration27.setoptions(strMap61);
        kerberosUserConfiguration17.options = strMap61;
        kerberosUserConfiguration0.setoptions(strMap61);
        java.security.Provider provider68 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(provider68);
    }

    @Test
    public void test04318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04318");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
    }

    @Test
    public void test04319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04319");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration8.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration29.options = strMap32;
        kerberosUserConfiguration26.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.lang.String str38 = kerberosUserConfiguration35.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap40);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str53 = kerberosUserConfiguration52.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration52.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration55.refresh();
        java.lang.String str57 = kerberosUserConfiguration55.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration58.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration58.setoptions(strMap63);
        kerberosUserConfiguration55.options = strMap63;
        kerberosUserConfiguration52.setoptions(strMap63);
        kerberosUserConfiguration50.setoptions(strMap63);
        java.security.Provider provider68 = kerberosUserConfiguration50.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.setoptions(strMap69);
        kerberosUserConfiguration42.setoptions(strMap69);
        kerberosUserConfiguration26.setoptions(strMap69);
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration26.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration26.getoptions();
        kerberosUserConfiguration20.options = strMap74;
        java.security.Provider provider76 = kerberosUserConfiguration20.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters77 = kerberosUserConfiguration20.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray79 = kerberosUserConfiguration20.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration80.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration80.setoptions(strMap82);
        java.security.Provider provider84 = kerberosUserConfiguration80.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration80.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration80);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray88 = kerberosUserConfiguration80.getAppConfigurationEntry("");
        java.security.Provider provider89 = kerberosUserConfiguration80.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters90 = kerberosUserConfiguration80.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap91);
        kerberosUserConfiguration15.setoptions(strMap91);
        java.util.HashMap<java.lang.String, java.lang.String> strMap94 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.options = strMap95;
        kerberosUserConfiguration0.setoptions(strMap95);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNull(parameters77);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray79);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(provider84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray88);
        org.junit.Assert.assertNull(provider89);
        org.junit.Assert.assertNull(parameters90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test04320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04320");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
    }

    @Test
    public void test04321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04321");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration20.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters32);
    }

    @Test
    public void test04322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04322");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass62 = strMap61.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test04323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04323");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        kerberosUserConfiguration12.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration0.setoptions(strMap19);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test04324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04324");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider10 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test04325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04325");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider49 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str52 = kerberosUserConfiguration51.getType();
        kerberosUserConfiguration51.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration51.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str58 = kerberosUserConfiguration57.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.setoptions(strMap63);
        java.security.Provider provider65 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.options = strMap66;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        java.security.Provider provider69 = kerberosUserConfiguration51.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration51.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration51.getoptions();
        kerberosUserConfiguration1.options = strMap71;
        java.lang.Class<?> wildcardClass73 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test04326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04326");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider17 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.options;
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration21.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration40.refresh();
        java.lang.String str42 = kerberosUserConfiguration40.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration43.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.setoptions(strMap48);
        kerberosUserConfiguration40.options = strMap48;
        kerberosUserConfiguration37.setoptions(strMap48);
        kerberosUserConfiguration35.setoptions(strMap48);
        java.security.Provider provider53 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap54);
        kerberosUserConfiguration27.setoptions(strMap54);
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration21.options = strMap57;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration0.setoptions(strMap62);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration64.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration64.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration64);
        kerberosUserConfiguration64.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration69.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration69.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration69.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration64.options = strMap73;
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration64.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters77 = kerberosUserConfiguration76.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration76.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration80.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration80.setoptions(strMap82);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray85 = kerberosUserConfiguration80.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration87 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = null;
        kerberosUserConfiguration87.options = strMap88;
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration87.options = strMap90;
        kerberosUserConfiguration80.setoptions(strMap90);
        kerberosUserConfiguration76.options = strMap90;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration76);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration76);
        java.util.HashMap<java.lang.String, java.lang.String> strMap96 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration64.setoptions(strMap96);
        kerberosUserConfiguration0.options = strMap96;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(parameters77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap96);
    }

    @Test
    public void test04327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04327");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration26.refresh();
        java.lang.String str28 = kerberosUserConfiguration26.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration29.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap34);
        kerberosUserConfiguration26.options = strMap34;
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration26.getParameters();
        java.lang.String str38 = kerberosUserConfiguration26.getType();
        java.security.Provider provider39 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration8.options = strMap40;
        kerberosUserConfiguration0.options = strMap40;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration43.setoptions(strMap45);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration43.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider50 = kerberosUserConfiguration43.getProvider();
        java.security.Provider provider51 = kerberosUserConfiguration43.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration43.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration54);
        kerberosUserConfiguration54.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration54.options;
        kerberosUserConfiguration43.setoptions(strMap59);
        java.lang.String str61 = kerberosUserConfiguration43.getType();
        kerberosUserConfiguration43.refresh();
        javax.security.auth.login.Configuration.Parameters parameters63 = kerberosUserConfiguration43.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration0.setoptions(strMap65);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(parameters63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test04328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04328");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration0.options = strMap22;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNull(parameters29);
    }

    @Test
    public void test04329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04329");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.options = strMap10;
        kerberosUserConfiguration0.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test04330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04330");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test04331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04331");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str19 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration20.setoptions(strMap26);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration20.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str31 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.options = strMap34;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap36);
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration20.setoptions(strMap39);
        kerberosUserConfiguration0.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str46 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration48.refresh();
        java.lang.String str50 = kerberosUserConfiguration48.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration51.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.setoptions(strMap56);
        kerberosUserConfiguration48.options = strMap56;
        kerberosUserConfiguration45.setoptions(strMap56);
        kerberosUserConfiguration43.setoptions(strMap56);
        java.security.Provider provider61 = kerberosUserConfiguration43.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration43.options;
        javax.security.auth.login.Configuration.Parameters parameters63 = kerberosUserConfiguration43.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray65 = kerberosUserConfiguration43.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration43.getParameters();
        java.lang.String str67 = kerberosUserConfiguration43.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray69 = kerberosUserConfiguration43.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters70 = kerberosUserConfiguration43.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration43.getoptions();
        kerberosUserConfiguration0.setoptions(strMap72);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(parameters63);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray65);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray69);
        org.junit.Assert.assertNull(parameters70);
        org.junit.Assert.assertNotNull(strMap72);
    }

    @Test
    public void test04332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04332");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration51.setoptions(strMap53);
        java.security.Provider provider55 = kerberosUserConfiguration51.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration51.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider60 = kerberosUserConfiguration51.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration51.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters63 = kerberosUserConfiguration62.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider65 = kerberosUserConfiguration62.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration62.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.setoptions(strMap67);
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration51.options;
        kerberosUserConfiguration1.options = strMap70;
        java.security.Provider provider72 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters73 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(parameters63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNull(parameters73);
    }

    @Test
    public void test04333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04333");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str25 = kerberosUserConfiguration24.getType();
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration27.options = strMap30;
        kerberosUserConfiguration24.options = strMap30;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.options = strMap34;
        java.lang.String str36 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration1.setoptions(strMap40);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray43 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray43);
    }

    @Test
    public void test04334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04334");
        javax.security.auth.login.Configuration configuration0 = javax.security.auth.login.Configuration.getConfiguration();
        javax.security.auth.login.Configuration.setConfiguration(configuration0);
        javax.security.auth.login.Configuration.Parameters parameters2 = configuration0.getParameters();
        java.lang.String str3 = configuration0.getType();
        javax.security.auth.login.Configuration.setConfiguration(configuration0);
        configuration0.refresh();
        org.junit.Assert.assertNotNull(configuration0);
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test04335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04335");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.security.Provider provider16 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap23;
        kerberosUserConfiguration0.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
    }

    @Test
    public void test04336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04336");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.options = strMap19;
        kerberosUserConfiguration7.options = strMap19;
        kerberosUserConfiguration0.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        kerberosUserConfiguration26.refresh();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.getoptions();
        kerberosUserConfiguration26.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration26.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap34);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        java.lang.String str39 = kerberosUserConfiguration37.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration40.setoptions(strMap43);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap48;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test04337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04337");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.lang.String str7 = kerberosUserConfiguration4.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        kerberosUserConfiguration13.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap21);
        kerberosUserConfiguration10.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration4.setoptions(strMap24);
        kerberosUserConfiguration1.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider28 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
    }

    @Test
    public void test04338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04338");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
    }

    @Test
    public void test04339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04339");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test04340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04340");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str25 = kerberosUserConfiguration24.getType();
        kerberosUserConfiguration24.refresh();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration24.getParameters();
        java.lang.String str28 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration32);
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration37.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.options = strMap41;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str44 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration43.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.setoptions(strMap49);
        kerberosUserConfiguration32.options = strMap49;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray53 = kerberosUserConfiguration32.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration32);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap56;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray53);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test04341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04341");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test04342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04342");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.options;
        kerberosUserConfiguration9.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.refresh();
        java.lang.String str21 = kerberosUserConfiguration17.getType();
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration17.options = strMap25;
        kerberosUserConfiguration9.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.setoptions(strMap28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration30.getParameters();
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration35.setoptions(strMap37);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray40 = kerberosUserConfiguration35.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration42.options = strMap45;
        kerberosUserConfiguration35.setoptions(strMap45);
        java.lang.String str48 = kerberosUserConfiguration35.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.options = strMap50;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration52.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration52.setoptions(strMap54);
        java.security.Provider provider56 = kerberosUserConfiguration52.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration52.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider61 = kerberosUserConfiguration52.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray63 = kerberosUserConfiguration52.getAppConfigurationEntry("");
        kerberosUserConfiguration52.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration52.getoptions();
        kerberosUserConfiguration30.options = strMap65;
        kerberosUserConfiguration0.options = strMap65;
        kerberosUserConfiguration0.refresh();
        java.lang.String str69 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray63);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(str69);
    }

    @Test
    public void test04343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04343");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        java.lang.String str9 = kerberosUserConfiguration7.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap18);
        kerberosUserConfiguration7.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        kerberosUserConfiguration7.refresh();
        java.lang.String str24 = kerberosUserConfiguration7.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap27;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test04344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04344");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration8.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.lang.String str20 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str35 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration37.refresh();
        java.lang.String str39 = kerberosUserConfiguration37.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration40.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap45);
        kerberosUserConfiguration37.options = strMap45;
        kerberosUserConfiguration34.setoptions(strMap45);
        kerberosUserConfiguration32.setoptions(strMap45);
        java.security.Provider provider50 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap51);
        kerberosUserConfiguration24.setoptions(strMap51);
        kerberosUserConfiguration8.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider58 = kerberosUserConfiguration8.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str60 = kerberosUserConfiguration59.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration59.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap62);
        kerberosUserConfiguration0.options = strMap62;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test04345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04345");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.security.Provider provider16 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap23;
        kerberosUserConfiguration0.setoptions(strMap23);
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
    }

    @Test
    public void test04346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04346");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str5 = kerberosUserConfiguration4.getType();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap20);
        java.security.Provider provider22 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.options = strMap23;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration4.setoptions(strMap26);
        kerberosUserConfiguration0.setoptions(strMap26);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(provider30);
    }

    @Test
    public void test04347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04347");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration21.options = strMap24;
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration21.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration21);
        java.lang.String str28 = kerberosUserConfiguration21.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
    }

    @Test
    public void test04348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04348");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test04349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04349");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(parameters10);
    }

    @Test
    public void test04350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04350");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test04351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04351");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test04352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04352");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        kerberosUserConfiguration13.refresh();
        java.lang.String str17 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getoptions();
        kerberosUserConfiguration13.refresh();
        java.lang.String str20 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap21;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test04353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04353");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.lang.String str7 = kerberosUserConfiguration4.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        kerberosUserConfiguration13.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap21);
        kerberosUserConfiguration10.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration4.setoptions(strMap24);
        kerberosUserConfiguration1.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.options;
        java.lang.String str29 = kerberosUserConfiguration1.getType();
        java.security.Provider provider30 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration1.options;
        java.lang.String str33 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test04354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04354");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str57 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration59.refresh();
        java.lang.String str61 = kerberosUserConfiguration59.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration62.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = null;
        kerberosUserConfiguration64.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap67);
        kerberosUserConfiguration59.options = strMap67;
        kerberosUserConfiguration56.setoptions(strMap67);
        kerberosUserConfiguration56.refresh();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration56.getParameters();
        java.lang.String str73 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap74;
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str77 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(strMap78);
    }

    @Test
    public void test04355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04355");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        java.security.Provider provider10 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration6.getParameters();
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider13 = kerberosUserConfiguration6.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        java.lang.String str16 = kerberosUserConfiguration14.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap25);
        kerberosUserConfiguration14.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider33 = kerberosUserConfiguration32.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration32.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getoptions();
        kerberosUserConfiguration14.setoptions(strMap35);
        kerberosUserConfiguration6.options = strMap35;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.options = strMap39;
        java.lang.String str41 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration44.refresh();
        java.lang.String str46 = kerberosUserConfiguration44.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration47);
        kerberosUserConfiguration47.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap55);
        kerberosUserConfiguration44.setoptions(strMap55);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration44.options;
        kerberosUserConfiguration38.setoptions(strMap58);
        kerberosUserConfiguration6.setoptions(strMap58);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap61);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test04356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04356");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test04357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04357");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.setoptions(strMap11);
        java.security.Provider provider13 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration9.getAppConfigurationEntry("");
        kerberosUserConfiguration9.refresh();
        java.lang.String str19 = kerberosUserConfiguration9.getType();
        java.security.Provider provider20 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration26.setoptions(strMap29);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration32.options = strMap35;
        java.lang.String str37 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration32.options;
        kerberosUserConfiguration26.setoptions(strMap39);
        kerberosUserConfiguration9.setoptions(strMap39);
        kerberosUserConfiguration0.options = strMap39;
        java.lang.Class<?> wildcardClass43 = strMap39.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test04358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04358");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        java.security.Provider provider17 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.lang.String str20 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test04359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04359");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str19 = kerberosUserConfiguration18.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration21.refresh();
        java.lang.String str23 = kerberosUserConfiguration21.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap29);
        kerberosUserConfiguration21.options = strMap29;
        kerberosUserConfiguration18.setoptions(strMap29);
        kerberosUserConfiguration16.setoptions(strMap29);
        java.security.Provider provider34 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration16.options;
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration16.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration38);
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration38.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration49.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration49);
        kerberosUserConfiguration49.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration54.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration54.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.options = strMap58;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str61 = kerberosUserConfiguration60.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.options = strMap64;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap66);
        kerberosUserConfiguration49.options = strMap66;
        kerberosUserConfiguration38.options = strMap66;
        java.security.Provider provider70 = kerberosUserConfiguration38.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration38.options;
        java.security.Provider provider73 = kerberosUserConfiguration38.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration16.setoptions(strMap74);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration0.options = strMap76;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration78.options;
        java.lang.String str80 = kerberosUserConfiguration78.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = null;
        kerberosUserConfiguration78.options = strMap81;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration78.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration78.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration78.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap85;
        java.lang.String str87 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(str87);
    }

    @Test
    public void test04360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04360");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration1.setoptions(strMap4);
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str6);
    }

    @Test
    public void test04361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04361");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters17);
    }

    @Test
    public void test04362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04362");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap17);
        kerberosUserConfiguration0.options = strMap17;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        java.lang.Class<?> wildcardClass24 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test04363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04363");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test04364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04364");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test04365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04365");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration3.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap6;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration8.setoptions(strMap14);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration8.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration19.setoptions(strMap25);
        java.lang.String str27 = kerberosUserConfiguration19.getType();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration19.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration8.options = strMap29;
        kerberosUserConfiguration1.setoptions(strMap29);
        java.lang.Class<?> wildcardClass32 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test04366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04366");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.security.Provider provider16 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap23;
        kerberosUserConfiguration0.setoptions(strMap23);
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider29 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider30 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str33 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test04367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04367");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration22.refresh();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration22.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration22.getParameters();
        kerberosUserConfiguration22.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray42 = kerberosUserConfiguration22.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration43.setoptions(strMap46);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str49 = kerberosUserConfiguration48.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration48.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration51.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap54);
        kerberosUserConfiguration43.options = strMap54;
        kerberosUserConfiguration22.setoptions(strMap54);
        kerberosUserConfiguration22.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters60 = kerberosUserConfiguration22.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration61.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration61.setoptions(strMap63);
        java.security.Provider provider65 = kerberosUserConfiguration61.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration61.options;
        kerberosUserConfiguration22.options = strMap66;
        kerberosUserConfiguration1.options = strMap66;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.Class<?> wildcardClass70 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray42);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(parameters60);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test04368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04368");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        java.lang.String str14 = kerberosUserConfiguration12.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration12.options = strMap20;
        kerberosUserConfiguration9.setoptions(strMap20);
        kerberosUserConfiguration9.refresh();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration9.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration9.getParameters();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration1.setoptions(strMap28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration30.options = strMap33;
        java.lang.String str35 = kerberosUserConfiguration30.getType();
        kerberosUserConfiguration30.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration30.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass43 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test04369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04369");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration6.setoptions(strMap9);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getoptions();
        java.security.Provider provider13 = kerberosUserConfiguration6.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap16);
        java.security.Provider provider18 = kerberosUserConfiguration14.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration27.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str34 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap39);
        kerberosUserConfiguration22.options = strMap39;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration22.setoptions(strMap42);
        kerberosUserConfiguration14.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration6.options = strMap45;
        kerberosUserConfiguration0.setoptions(strMap45);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration48.options = strMap51;
        java.lang.String str53 = kerberosUserConfiguration48.getType();
        kerberosUserConfiguration48.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray56 = kerberosUserConfiguration48.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider63 = kerberosUserConfiguration62.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.getoptions();
        kerberosUserConfiguration57.setoptions(strMap64);
        kerberosUserConfiguration48.options = strMap64;
        kerberosUserConfiguration0.options = strMap64;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray56);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test04370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04370");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration9.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration16.setoptions(strMap19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap27);
        kerberosUserConfiguration16.options = strMap27;
        kerberosUserConfiguration9.setoptions(strMap27);
        kerberosUserConfiguration0.options = strMap27;
        java.lang.String str32 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test04371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04371");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str11 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap16);
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap19);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass22 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test04372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04372");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(parameters20);
    }

    @Test
    public void test04373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04373");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration0.options = strMap5;
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
    }

    @Test
    public void test04374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04374");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap31);
        kerberosUserConfiguration24.setoptions(strMap31);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration24.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration0.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters41 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider48 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        kerberosUserConfiguration42.setoptions(strMap49);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration51.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration51.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str59 = kerberosUserConfiguration58.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration58.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration61.refresh();
        java.lang.String str63 = kerberosUserConfiguration61.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration64.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = null;
        kerberosUserConfiguration66.options = strMap67;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration64.setoptions(strMap69);
        kerberosUserConfiguration61.options = strMap69;
        kerberosUserConfiguration58.setoptions(strMap69);
        kerberosUserConfiguration56.setoptions(strMap69);
        java.security.Provider provider74 = kerberosUserConfiguration56.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.setoptions(strMap75);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters78 = kerberosUserConfiguration77.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration77.refresh();
        java.lang.String str81 = kerberosUserConfiguration77.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.options = strMap82;
        kerberosUserConfiguration42.options = strMap82;
        kerberosUserConfiguration0.options = strMap82;
        java.security.Provider provider86 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters41);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(parameters78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(provider86);
    }

    @Test
    public void test04375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04375");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        kerberosUserConfiguration17.options = strMap25;
        kerberosUserConfiguration14.setoptions(strMap25);
        kerberosUserConfiguration12.setoptions(strMap25);
        java.security.Provider provider30 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.refresh();
        java.lang.String str37 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap38;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str42 = kerberosUserConfiguration41.getType();
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration44.options = strMap47;
        kerberosUserConfiguration41.options = strMap47;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.options = strMap51;
        java.lang.String str53 = kerberosUserConfiguration50.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap55);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration65.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str68 = kerberosUserConfiguration67.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration70.refresh();
        java.lang.String str72 = kerberosUserConfiguration70.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration73.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration73.setoptions(strMap78);
        kerberosUserConfiguration70.options = strMap78;
        kerberosUserConfiguration67.setoptions(strMap78);
        kerberosUserConfiguration65.setoptions(strMap78);
        java.security.Provider provider83 = kerberosUserConfiguration65.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap84);
        kerberosUserConfiguration57.setoptions(strMap84);
        kerberosUserConfiguration41.setoptions(strMap84);
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration7.options = strMap91;
        kerberosUserConfiguration0.setoptions(strMap91);
        java.lang.String str94 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters95 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap97 = kerberosUserConfiguration0.options;
        java.security.Provider provider98 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap99 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNull(parameters95);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNull(provider98);
        org.junit.Assert.assertNotNull(strMap99);
    }

    @Test
    public void test04376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04376");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test04377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04377");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.setoptions(strMap9);
        java.security.Provider provider11 = kerberosUserConfiguration7.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap13);
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test04378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04378");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap12);
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration7.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap22);
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.setoptions(strMap28);
        java.security.Provider provider30 = kerberosUserConfiguration26.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration26.getParameters();
        kerberosUserConfiguration26.refresh();
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration26.getoptions();
        kerberosUserConfiguration16.options = strMap34;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration36.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration36.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration36.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration36.getoptions();
        java.lang.String str43 = kerberosUserConfiguration36.getType();
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration36.getParameters();
        java.lang.String str45 = kerberosUserConfiguration36.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration7.options = strMap48;
        kerberosUserConfiguration0.options = strMap48;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test04379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04379");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        kerberosUserConfiguration15.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration26.refresh();
        java.lang.String str28 = kerberosUserConfiguration26.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration29);
        kerberosUserConfiguration29.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap37);
        kerberosUserConfiguration26.setoptions(strMap37);
        kerberosUserConfiguration15.setoptions(strMap37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration42.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str45 = kerberosUserConfiguration44.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration44.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration47.refresh();
        java.lang.String str49 = kerberosUserConfiguration47.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration50.setoptions(strMap55);
        kerberosUserConfiguration47.options = strMap55;
        kerberosUserConfiguration44.setoptions(strMap55);
        kerberosUserConfiguration42.setoptions(strMap55);
        kerberosUserConfiguration15.setoptions(strMap55);
        kerberosUserConfiguration15.refresh();
        java.security.Provider provider62 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration15.getoptions();
        kerberosUserConfiguration0.options = strMap63;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = null;
        kerberosUserConfiguration65.options = strMap66;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration65.options = strMap68;
        javax.security.auth.login.Configuration.Parameters parameters70 = kerberosUserConfiguration65.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration71.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration71.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration71);
        kerberosUserConfiguration71.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters77 = kerberosUserConfiguration71.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration71.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = null;
        kerberosUserConfiguration80.options = strMap81;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration80.options = strMap83;
        kerberosUserConfiguration71.options = strMap83;
        kerberosUserConfiguration65.setoptions(strMap83);
        kerberosUserConfiguration0.options = strMap83;
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(parameters70);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(parameters77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap88);
    }

    @Test
    public void test04380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04380");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration5.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap21);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test04381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04381");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str9 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap19);
        kerberosUserConfiguration11.options = strMap19;
        kerberosUserConfiguration8.setoptions(strMap19);
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration8.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration25.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration1.options = strMap30;
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test04382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04382");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider19 = kerberosUserConfiguration18.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration0.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass25 = strMap24.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test04383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04383");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration11.setoptions(strMap17);
        java.lang.String str19 = kerberosUserConfiguration11.getType();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration0.options = strMap21;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test04384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04384");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration3.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test04385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04385");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap22);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider27 = kerberosUserConfiguration26.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration28.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration16.setoptions(strMap33);
        kerberosUserConfiguration10.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration10.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration10.getAppConfigurationEntry("");
        java.lang.String str39 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration0.setoptions(strMap40);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test04386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04386");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider19 = kerberosUserConfiguration18.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration0.setoptions(strMap21);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.setoptions(strMap25);
        java.security.Provider provider27 = kerberosUserConfiguration23.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration23.getParameters();
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration0.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration33.setoptions(strMap35);
        java.security.Provider provider37 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration33);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration33.getAppConfigurationEntry("");
        kerberosUserConfiguration33.refresh();
        java.lang.String str43 = kerberosUserConfiguration33.getType();
        java.security.Provider provider44 = kerberosUserConfiguration33.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration45.refresh();
        java.lang.String str47 = kerberosUserConfiguration45.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration48.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration48);
        kerberosUserConfiguration48.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap56);
        kerberosUserConfiguration45.setoptions(strMap56);
        kerberosUserConfiguration33.options = strMap56;
        kerberosUserConfiguration0.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test04387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04387");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test04388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04388");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration10.refresh();
        java.lang.String str14 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str22 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap27);
        java.security.Provider provider29 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration20.setoptions(strMap30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap38);
        kerberosUserConfiguration32.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration32.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration32.getoptions();
        java.lang.String str43 = kerberosUserConfiguration32.getType();
        java.lang.String str44 = kerberosUserConfiguration32.getType();
        kerberosUserConfiguration32.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration32.getoptions();
        kerberosUserConfiguration20.options = strMap46;
        kerberosUserConfiguration0.options = strMap46;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray50 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray50);
    }

    @Test
    public void test04389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04389");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        java.lang.String str16 = kerberosUserConfiguration14.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap22);
        kerberosUserConfiguration14.options = strMap22;
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration9.setoptions(strMap22);
        java.security.Provider provider27 = kerberosUserConfiguration9.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration28.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap33;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration9.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.refresh();
        java.lang.String str43 = kerberosUserConfiguration39.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider51 = kerberosUserConfiguration50.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration50.getoptions();
        kerberosUserConfiguration45.setoptions(strMap52);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration59.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str62 = kerberosUserConfiguration61.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration61.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration64.refresh();
        java.lang.String str66 = kerberosUserConfiguration64.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration67.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = null;
        kerberosUserConfiguration69.options = strMap70;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration67.setoptions(strMap72);
        kerberosUserConfiguration64.options = strMap72;
        kerberosUserConfiguration61.setoptions(strMap72);
        kerberosUserConfiguration59.setoptions(strMap72);
        java.security.Provider provider77 = kerberosUserConfiguration59.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap78);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters81 = kerberosUserConfiguration80.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration80.refresh();
        java.lang.String str84 = kerberosUserConfiguration80.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.options = strMap85;
        kerberosUserConfiguration45.options = strMap85;
        kerberosUserConfiguration39.setoptions(strMap85);
        java.security.Provider provider89 = kerberosUserConfiguration39.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration39.getoptions();
        kerberosUserConfiguration9.setoptions(strMap90);
        kerberosUserConfiguration0.options = strMap90;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(provider77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(parameters81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(provider89);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test04390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04390");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        java.security.Provider provider10 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration6.getParameters();
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration6.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.security.Provider provider16 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap17;
        java.security.Provider provider19 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration0.options = strMap20;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider19);
    }

    @Test
    public void test04391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04391");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test04392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04392");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration4.setoptions(strMap7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.options = strMap13;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap15);
        kerberosUserConfiguration4.options = strMap15;
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration4.getParameters();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration20.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider31 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration20.setoptions(strMap32);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap39;
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration4.options = strMap42;
        kerberosUserConfiguration0.options = strMap42;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str46 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
    }

    @Test
    public void test04393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04393");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass8 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test04394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04394");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test04395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04395");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.options = strMap20;
        kerberosUserConfiguration14.options = strMap20;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.lang.String str26 = kerberosUserConfiguration23.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.options = strMap34;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str41 = kerberosUserConfiguration40.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration43.refresh();
        java.lang.String str45 = kerberosUserConfiguration43.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration46.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.setoptions(strMap51);
        kerberosUserConfiguration43.options = strMap51;
        kerberosUserConfiguration40.setoptions(strMap51);
        kerberosUserConfiguration38.setoptions(strMap51);
        java.security.Provider provider56 = kerberosUserConfiguration38.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap57);
        kerberosUserConfiguration30.setoptions(strMap57);
        kerberosUserConfiguration14.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration8.options = strMap62;
        java.security.Provider provider64 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str68 = kerberosUserConfiguration67.getType();
        kerberosUserConfiguration67.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = null;
        kerberosUserConfiguration70.options = strMap71;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration70.options = strMap73;
        kerberosUserConfiguration67.options = strMap73;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = null;
        kerberosUserConfiguration76.options = strMap77;
        java.lang.String str79 = kerberosUserConfiguration76.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration76.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration67.setoptions(strMap81);
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration67.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration67.options;
        kerberosUserConfiguration8.setoptions(strMap84);
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap87;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
    }

    @Test
    public void test04396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04396");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap19);
        kerberosUserConfiguration11.options = strMap19;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration11.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str26 = kerberosUserConfiguration25.getType();
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        kerberosUserConfiguration25.refresh();
        java.security.Provider provider32 = kerberosUserConfiguration25.getProvider();
        java.lang.String str33 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration11.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters41 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters41);
    }

    @Test
    public void test04397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04397");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration20);
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap28);
        kerberosUserConfiguration17.setoptions(strMap28);
        kerberosUserConfiguration6.setoptions(strMap28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str36 = kerberosUserConfiguration35.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        java.lang.String str40 = kerberosUserConfiguration38.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap46);
        kerberosUserConfiguration38.options = strMap46;
        kerberosUserConfiguration35.setoptions(strMap46);
        kerberosUserConfiguration33.setoptions(strMap46);
        kerberosUserConfiguration6.setoptions(strMap46);
        kerberosUserConfiguration0.setoptions(strMap46);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test04398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04398");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap54;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration57.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration57.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration57.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration1.setoptions(strMap65);
        java.security.Provider provider67 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters68 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNull(parameters68);
    }

    @Test
    public void test04399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04399");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test04400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04400");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        kerberosUserConfiguration22.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration22.getProvider();
        java.lang.String str30 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap31);
        kerberosUserConfiguration0.options = strMap31;
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test04401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04401");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration0.options = strMap22;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider29 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider29);
    }

    @Test
    public void test04402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04402");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str12 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap17);
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration20);
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration25.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap29;
        kerberosUserConfiguration11.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration0.setoptions(strMap34);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test04403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04403");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test04404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04404");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.lang.String str8 = kerberosUserConfiguration5.getType();
        kerberosUserConfiguration5.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        java.lang.String str24 = kerberosUserConfiguration22.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap33);
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration11.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str41 = kerberosUserConfiguration40.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration43.refresh();
        java.lang.String str45 = kerberosUserConfiguration43.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration46.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.setoptions(strMap51);
        kerberosUserConfiguration43.options = strMap51;
        kerberosUserConfiguration40.setoptions(strMap51);
        kerberosUserConfiguration38.setoptions(strMap51);
        kerberosUserConfiguration11.setoptions(strMap51);
        kerberosUserConfiguration11.refresh();
        java.security.Provider provider58 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration11.getoptions();
        java.lang.String str60 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration5.setoptions(strMap61);
        kerberosUserConfiguration0.options = strMap61;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray65 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray65);
    }

    @Test
    public void test04405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04405");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.options = strMap18;
        kerberosUserConfiguration6.options = strMap18;
        kerberosUserConfiguration0.setoptions(strMap18);
        java.lang.String str22 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass23 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test04406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04406");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str13 = kerberosUserConfiguration12.getType();
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration15.options = strMap18;
        kerberosUserConfiguration12.options = strMap18;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.lang.String str24 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap26);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration36.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str39 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration41.refresh();
        java.lang.String str43 = kerberosUserConfiguration41.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration44.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap49);
        kerberosUserConfiguration41.options = strMap49;
        kerberosUserConfiguration38.setoptions(strMap49);
        kerberosUserConfiguration36.setoptions(strMap49);
        java.security.Provider provider54 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.setoptions(strMap55);
        kerberosUserConfiguration28.setoptions(strMap55);
        kerberosUserConfiguration12.setoptions(strMap55);
        kerberosUserConfiguration0.options = strMap55;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray63 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass64 = appConfigurationEntryArray63.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray63);
        org.junit.Assert.assertNotNull(wildcardClass64);
    }

    @Test
    public void test04407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04407");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration11.setoptions(strMap22);
        kerberosUserConfiguration0.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration32.refresh();
        java.lang.String str34 = kerberosUserConfiguration32.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap40);
        kerberosUserConfiguration32.options = strMap40;
        kerberosUserConfiguration29.setoptions(strMap40);
        kerberosUserConfiguration27.setoptions(strMap40);
        kerberosUserConfiguration0.setoptions(strMap40);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray52 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray52);
    }

    @Test
    public void test04408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04408");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        java.lang.Class<?> wildcardClass14 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test04409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04409");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        java.security.Provider provider17 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.Class<?> wildcardClass21 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test04410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04410");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test04411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04411");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.refresh();
        java.lang.String str9 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider17 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration11.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration46.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.refresh();
        java.lang.String str50 = kerberosUserConfiguration46.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap51;
        kerberosUserConfiguration11.options = strMap51;
        kerberosUserConfiguration5.setoptions(strMap51);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration55.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration55.setoptions(strMap60);
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration55.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration55.getoptions();
        kerberosUserConfiguration5.options = strMap63;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration5.getoptions();
        kerberosUserConfiguration0.setoptions(strMap65);
        java.security.Provider provider67 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider69 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray71 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray71);
    }

    @Test
    public void test04412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04412");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration0.options = strMap24;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration40.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.options = strMap44;
        kerberosUserConfiguration26.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration26.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration0.setoptions(strMap49);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        java.lang.String str54 = kerberosUserConfiguration52.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration55.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration55.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration55);
        kerberosUserConfiguration55.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration55.setoptions(strMap63);
        kerberosUserConfiguration52.setoptions(strMap63);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration52.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration52.getoptions();
        java.lang.String str69 = kerberosUserConfiguration52.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray71 = kerberosUserConfiguration52.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap73;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test04413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04413");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration6.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap11;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider18);
    }

    @Test
    public void test04414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04414");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        java.lang.String str9 = kerberosUserConfiguration7.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.options = strMap13;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap15);
        kerberosUserConfiguration7.options = strMap15;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        java.lang.String str20 = kerberosUserConfiguration7.getType();
        java.security.Provider provider21 = kerberosUserConfiguration7.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap24;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration26.setoptions(strMap32);
        java.security.Provider provider34 = kerberosUserConfiguration26.getProvider();
        java.security.Provider provider35 = kerberosUserConfiguration26.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.lang.String str39 = kerberosUserConfiguration36.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration36.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap42);
        kerberosUserConfiguration0.setoptions(strMap42);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test04415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04415");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test04416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04416");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration20.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getoptions();
        java.lang.String str32 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test04417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04417");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration13.setoptions(strMap15);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration13.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider20 = kerberosUserConfiguration13.getProvider();
        java.security.Provider provider21 = kerberosUserConfiguration13.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str31 = kerberosUserConfiguration30.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.options = strMap34;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap36);
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration40.setoptions(strMap42);
        java.security.Provider provider44 = kerberosUserConfiguration40.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration40.getParameters();
        kerberosUserConfiguration40.refresh();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration40.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration40.getoptions();
        kerberosUserConfiguration30.options = strMap48;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration50.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration50.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration50.getoptions();
        java.lang.String str57 = kerberosUserConfiguration50.getType();
        javax.security.auth.login.Configuration.Parameters parameters58 = kerberosUserConfiguration50.getParameters();
        java.lang.String str59 = kerberosUserConfiguration50.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.options = strMap60;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration30.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap63);
        kerberosUserConfiguration0.options = strMap63;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(parameters58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap63);
    }

    @Test
    public void test04418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04418");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.String str24 = kerberosUserConfiguration1.getType();
        java.security.Provider provider25 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.setoptions(strMap28);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration26.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider33 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration26.options;
        java.security.Provider provider35 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration26.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration40.setoptions(strMap44);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration46.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.options = strMap48;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration26.options = strMap50;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str53 = kerberosUserConfiguration52.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration52.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap58);
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration61.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration61.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration61);
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration66.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters69 = kerberosUserConfiguration66.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.options = strMap70;
        kerberosUserConfiguration52.options = strMap70;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration52.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration26.setoptions(strMap75);
        kerberosUserConfiguration1.setoptions(strMap75);
        java.security.Provider provider78 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(parameters69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(strMap80);
    }

    @Test
    public void test04419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04419");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.String str11 = kerberosUserConfiguration1.getType();
        java.lang.Class<?> wildcardClass12 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test04420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04420");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap13);
        java.security.Provider provider15 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap16;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        java.lang.String str23 = kerberosUserConfiguration21.getType();
        java.security.Provider provider24 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.refresh();
        java.lang.String str30 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider38 = kerberosUserConfiguration37.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.getoptions();
        kerberosUserConfiguration32.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration46.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str49 = kerberosUserConfiguration48.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration48.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration51.refresh();
        java.lang.String str53 = kerberosUserConfiguration51.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration54.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.options = strMap57;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap59);
        kerberosUserConfiguration51.options = strMap59;
        kerberosUserConfiguration48.setoptions(strMap59);
        kerberosUserConfiguration46.setoptions(strMap59);
        java.security.Provider provider64 = kerberosUserConfiguration46.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap65);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters68 = kerberosUserConfiguration67.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration67.refresh();
        java.lang.String str71 = kerberosUserConfiguration67.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.options = strMap72;
        kerberosUserConfiguration32.options = strMap72;
        kerberosUserConfiguration26.setoptions(strMap72);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration76.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = null;
        kerberosUserConfiguration78.options = strMap79;
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration78.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration76.setoptions(strMap81);
        javax.security.auth.login.Configuration.Parameters parameters83 = kerberosUserConfiguration76.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration76.getoptions();
        kerberosUserConfiguration26.options = strMap84;
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration26.getoptions();
        kerberosUserConfiguration21.setoptions(strMap86);
        java.security.Provider provider88 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration1.setoptions(strMap89);
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(parameters68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(parameters83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNull(provider88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap91);
    }

    @Test
    public void test04421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04421");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap32);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration41.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str44 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration43.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration46.refresh();
        java.lang.String str48 = kerberosUserConfiguration46.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration49.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration51.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap54);
        kerberosUserConfiguration46.options = strMap54;
        kerberosUserConfiguration43.setoptions(strMap54);
        kerberosUserConfiguration41.setoptions(strMap54);
        java.security.Provider provider59 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration36.setoptions(strMap60);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = null;
        kerberosUserConfiguration62.options = strMap63;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration62.options = strMap65;
        java.lang.String str67 = kerberosUserConfiguration62.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration62.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray71 = kerberosUserConfiguration62.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str73 = kerberosUserConfiguration72.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration72.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration76.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration76.options;
        kerberosUserConfiguration72.setoptions(strMap78);
        java.lang.String str80 = kerberosUserConfiguration72.getType();
        java.lang.String str81 = kerberosUserConfiguration72.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration72.options;
        kerberosUserConfiguration62.options = strMap82;
        kerberosUserConfiguration36.options = strMap82;
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration36.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration36.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap88;
        java.lang.Class<?> wildcardClass90 = strMap88.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray71);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test04422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04422");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration1.options = strMap22;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider25 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration27.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration27.refresh();
        kerberosUserConfiguration27.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap36;
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test04423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04423");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration52.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration52.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap55);
        java.security.Provider provider57 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test04424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04424");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.lang.String str7 = kerberosUserConfiguration4.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        kerberosUserConfiguration13.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap21);
        kerberosUserConfiguration10.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration4.setoptions(strMap24);
        kerberosUserConfiguration1.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str28 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test04425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04425");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        javax.security.auth.login.Configuration.Parameters parameters56 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters61 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(parameters56);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(parameters61);
    }

    @Test
    public void test04426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04426");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str18 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap23);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider28 = kerberosUserConfiguration27.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration29.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration17.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap36);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray39 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray39);
    }

    @Test
    public void test04427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04427");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray62 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray62);
    }

    @Test
    public void test04428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04428");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        java.lang.String str39 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration0.options = strMap42;
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray50 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray50);
    }

    @Test
    public void test04429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04429");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration0.options = strMap11;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.lang.String str16 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.options;
        java.security.Provider provider18 = kerberosUserConfiguration13.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration13.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.options = strMap23;
        kerberosUserConfiguration0.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
    }

    @Test
    public void test04430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04430");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        kerberosUserConfiguration7.refresh();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap33;
        kerberosUserConfiguration1.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration36.refresh();
        java.lang.String str38 = kerberosUserConfiguration36.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration39);
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap47);
        kerberosUserConfiguration36.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration36.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration53.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters56 = kerberosUserConfiguration53.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider58 = kerberosUserConfiguration53.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = null;
        kerberosUserConfiguration59.options = strMap60;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = null;
        kerberosUserConfiguration59.setoptions(strMap62);
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration59.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration36.setoptions(strMap68);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration36.options;
        kerberosUserConfiguration1.setoptions(strMap71);
        java.lang.Class<?> wildcardClass73 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(parameters54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(parameters56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(wildcardClass73);
    }

    @Test
    public void test04431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04431");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test04432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04432");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getoptions();
        java.lang.String str16 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str19 = kerberosUserConfiguration18.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        kerberosUserConfiguration13.setoptions(strMap24);
        kerberosUserConfiguration0.options = strMap24;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration28.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration32.setoptions(strMap34);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration32.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration39.options = strMap42;
        kerberosUserConfiguration32.setoptions(strMap42);
        kerberosUserConfiguration28.options = strMap42;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str48 = kerberosUserConfiguration47.getType();
        kerberosUserConfiguration47.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration28.options = strMap50;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration52.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration54.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.options = strMap57;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap59);
        kerberosUserConfiguration52.setoptions(strMap59);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray63 = kerberosUserConfiguration52.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration52.getoptions();
        kerberosUserConfiguration28.setoptions(strMap64);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        java.lang.String str67 = kerberosUserConfiguration28.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration0.options = strMap68;
        java.lang.String str70 = kerberosUserConfiguration0.getType();
        java.security.Provider provider71 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(str70);
        org.junit.Assert.assertNull(provider71);
    }

    @Test
    public void test04433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04433");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap32);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
    }

    @Test
    public void test04434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04434");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test04435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04435");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration18.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration18.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration27.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap32);
        kerberosUserConfiguration0.options = strMap32;
        java.security.Provider provider35 = kerberosUserConfiguration0.getProvider();
        java.lang.String str36 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test04436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04436");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
    }

    @Test
    public void test04437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04437");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.lang.String str23 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.options;
        java.security.Provider provider25 = kerberosUserConfiguration20.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.setoptions(strMap28);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration26.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap32;
        java.lang.String str34 = kerberosUserConfiguration20.getType();
        java.security.Provider provider35 = kerberosUserConfiguration20.getProvider();
        kerberosUserConfiguration20.refresh();
        java.lang.String str37 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration39.options = strMap42;
        java.lang.String str44 = kerberosUserConfiguration39.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration39.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration39.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str50 = kerberosUserConfiguration49.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration53.options;
        kerberosUserConfiguration49.setoptions(strMap55);
        java.lang.String str57 = kerberosUserConfiguration49.getType();
        java.lang.String str58 = kerberosUserConfiguration49.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration49.options;
        kerberosUserConfiguration39.options = strMap59;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = null;
        kerberosUserConfiguration61.options = strMap62;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration61.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap64);
        kerberosUserConfiguration20.setoptions(strMap64);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration0.setoptions(strMap68);
        java.lang.Class<?> wildcardClass70 = strMap68.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test04438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04438");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str6 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration8.options = strMap16;
        kerberosUserConfiguration5.setoptions(strMap16);
        kerberosUserConfiguration5.refresh();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration5.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration5.getParameters();
        kerberosUserConfiguration5.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration5.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap26;
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration29.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getoptions();
        kerberosUserConfiguration29.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration29.getoptions();
        java.security.Provider provider38 = kerberosUserConfiguration29.getProvider();
        java.security.Provider provider39 = kerberosUserConfiguration29.getProvider();
        kerberosUserConfiguration29.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str44 = kerberosUserConfiguration43.getType();
        kerberosUserConfiguration43.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration48.setoptions(strMap50);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray53 = kerberosUserConfiguration48.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider55 = kerberosUserConfiguration48.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration48.options;
        java.security.Provider provider57 = kerberosUserConfiguration48.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration48.options;
        kerberosUserConfiguration48.refresh();
        java.security.Provider provider60 = kerberosUserConfiguration48.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.setoptions(strMap61);
        kerberosUserConfiguration29.setoptions(strMap61);
        kerberosUserConfiguration1.options = strMap61;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray66 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray66);
    }

    @Test
    public void test04439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04439");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        kerberosUserConfiguration0.setoptions(strMap6);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap14);
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.Class<?> wildcardClass17 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test04440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04440");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.refresh();
        java.lang.String str14 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider22 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration16.setoptions(strMap23);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration51.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.refresh();
        java.lang.String str55 = kerberosUserConfiguration51.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.options = strMap56;
        kerberosUserConfiguration16.options = strMap56;
        kerberosUserConfiguration10.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration10.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap61);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration63.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration63.getoptions();
        kerberosUserConfiguration63.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration63.getoptions();
        java.security.Provider provider72 = kerberosUserConfiguration63.getProvider();
        java.security.Provider provider73 = kerberosUserConfiguration63.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = null;
        kerberosUserConfiguration76.options = strMap77;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration75.options = strMap79;
        kerberosUserConfiguration63.setoptions(strMap79);
        kerberosUserConfiguration0.options = strMap79;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(parameters64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test04441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04441");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str15 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        kerberosUserConfiguration17.options = strMap25;
        kerberosUserConfiguration14.setoptions(strMap25);
        kerberosUserConfiguration12.setoptions(strMap25);
        java.security.Provider provider30 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.refresh();
        java.lang.String str37 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap38;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str42 = kerberosUserConfiguration41.getType();
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration44.options = strMap47;
        kerberosUserConfiguration41.options = strMap47;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.options = strMap51;
        java.lang.String str53 = kerberosUserConfiguration50.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap55);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration65.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str68 = kerberosUserConfiguration67.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration70.refresh();
        java.lang.String str72 = kerberosUserConfiguration70.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration73.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration73.setoptions(strMap78);
        kerberosUserConfiguration70.options = strMap78;
        kerberosUserConfiguration67.setoptions(strMap78);
        kerberosUserConfiguration65.setoptions(strMap78);
        java.security.Provider provider83 = kerberosUserConfiguration65.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap84);
        kerberosUserConfiguration57.setoptions(strMap84);
        kerberosUserConfiguration41.setoptions(strMap84);
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration7.options = strMap91;
        kerberosUserConfiguration0.setoptions(strMap91);
        java.lang.String str94 = kerberosUserConfiguration0.getType();
        java.lang.String str95 = kerberosUserConfiguration0.getType();
        java.lang.String str96 = kerberosUserConfiguration0.getType();
        java.security.Provider provider97 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap99 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(str94);
        org.junit.Assert.assertNull(str95);
        org.junit.Assert.assertNull(str96);
        org.junit.Assert.assertNull(provider97);
        org.junit.Assert.assertNotNull(strMap99);
    }

    @Test
    public void test04442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04442");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test04443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04443");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration1.options = strMap22;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider25 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
    }

    @Test
    public void test04444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04444");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str3 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.options = strMap9;
        java.lang.String str11 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.security.Provider provider14 = kerberosUserConfiguration6.getProvider();
        java.security.Provider provider15 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap20;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test04445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04445");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap13);
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration8.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.setoptions(strMap19);
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass23 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test04446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04446");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.lang.String str14 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.security.Provider provider16 = kerberosUserConfiguration11.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration17.setoptions(strMap19);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap23;
        kerberosUserConfiguration0.setoptions(strMap23);
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.options;
        java.security.Provider provider28 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str30 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration29.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap35);
        kerberosUserConfiguration29.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration38);
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration43.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration43.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap47;
        kerberosUserConfiguration29.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration29.options;
        kerberosUserConfiguration29.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration29.options;
        kerberosUserConfiguration0.setoptions(strMap52);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test04447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04447");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration7.options = strMap10;
        kerberosUserConfiguration0.setoptions(strMap10);
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration17.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.options = strMap30;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
    }

    @Test
    public void test04448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04448");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test04449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04449");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        java.lang.String str14 = kerberosUserConfiguration12.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.options = strMap18;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration12.options = strMap20;
        kerberosUserConfiguration0.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str25 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration27.refresh();
        java.lang.String str29 = kerberosUserConfiguration27.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap35);
        kerberosUserConfiguration27.options = strMap35;
        kerberosUserConfiguration24.setoptions(strMap35);
        kerberosUserConfiguration24.refresh();
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration24.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap44);
        kerberosUserConfiguration0.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters49 = kerberosUserConfiguration48.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.refresh();
        java.lang.String str52 = kerberosUserConfiguration48.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap54);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider57 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(parameters49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test04450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04450");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration11.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration26.options = strMap29;
        kerberosUserConfiguration17.options = strMap29;
        kerberosUserConfiguration11.setoptions(strMap29);
        kerberosUserConfiguration0.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider35 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
    }

    @Test
    public void test04451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04451");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str10 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.options = strMap13;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap15);
        java.security.Provider provider17 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration21.options = strMap24;
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration21.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration21.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.getoptions();
        java.lang.String str34 = kerberosUserConfiguration29.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration35.setoptions(strMap38);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration35.getoptions();
        java.security.Provider provider42 = kerberosUserConfiguration35.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration43.setoptions(strMap45);
        java.security.Provider provider47 = kerberosUserConfiguration43.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        kerberosUserConfiguration51.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration56.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.options = strMap60;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str63 = kerberosUserConfiguration62.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = null;
        kerberosUserConfiguration65.options = strMap66;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap68);
        kerberosUserConfiguration51.options = strMap68;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration51.setoptions(strMap71);
        kerberosUserConfiguration43.options = strMap71;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration35.options = strMap74;
        kerberosUserConfiguration29.setoptions(strMap74);
        kerberosUserConfiguration21.options = strMap74;
        kerberosUserConfiguration9.setoptions(strMap74);
        kerberosUserConfiguration1.options = strMap74;
        java.security.Provider provider80 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(provider80);
    }

    @Test
    public void test04452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04452");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap19);
        kerberosUserConfiguration11.options = strMap19;
        java.lang.String str22 = kerberosUserConfiguration11.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration0.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test04453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04453");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test04454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04454");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        java.lang.String str19 = kerberosUserConfiguration16.getType();
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test04455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04455");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test04456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04456");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(parameters12);
    }

    @Test
    public void test04457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04457");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str21 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap26);
        kerberosUserConfiguration0.options = strMap26;
        java.lang.String str29 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration0.options = strMap30;
        java.lang.String str32 = kerberosUserConfiguration0.getType();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray34 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(str32);
    }

    @Test
    public void test04458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04458");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test04459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04459");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str4 = kerberosUserConfiguration3.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap14);
        kerberosUserConfiguration6.options = strMap14;
        kerberosUserConfiguration3.setoptions(strMap14);
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration20.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.String str31 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration32.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration38.setoptions(strMap40);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray43 = kerberosUserConfiguration38.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider45 = kerberosUserConfiguration38.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration38.options;
        java.security.Provider provider47 = kerberosUserConfiguration38.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration38.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap50);
        kerberosUserConfiguration1.options = strMap50;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test04460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04460");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration18.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap23);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration18.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration18.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider30 = kerberosUserConfiguration29.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration31.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.options = strMap34;
        kerberosUserConfiguration18.setoptions(strMap34);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration40.refresh();
        java.lang.String str42 = kerberosUserConfiguration40.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration43.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.setoptions(strMap48);
        kerberosUserConfiguration40.options = strMap48;
        kerberosUserConfiguration37.setoptions(strMap48);
        kerberosUserConfiguration37.refresh();
        javax.security.auth.login.Configuration.Parameters parameters53 = kerberosUserConfiguration37.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration54.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap57);
        kerberosUserConfiguration18.options = strMap57;
        kerberosUserConfiguration0.options = strMap57;
        javax.security.auth.login.Configuration.Parameters parameters61 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray64 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters65 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters53);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(parameters61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray64);
        org.junit.Assert.assertNull(parameters65);
    }

    @Test
    public void test04461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04461");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test04462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04462");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        kerberosUserConfiguration6.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str25 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration27.refresh();
        java.lang.String str29 = kerberosUserConfiguration27.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap35);
        kerberosUserConfiguration27.options = strMap35;
        kerberosUserConfiguration24.setoptions(strMap35);
        kerberosUserConfiguration24.refresh();
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration24.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration0.options = strMap46;
        java.lang.Class<?> wildcardClass48 = strMap46.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(wildcardClass48);
    }

    @Test
    public void test04463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04463");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test04464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04464");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration54.setoptions(strMap56);
        java.security.Provider provider58 = kerberosUserConfiguration54.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration54.getParameters();
        kerberosUserConfiguration54.refresh();
        java.security.Provider provider61 = kerberosUserConfiguration54.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration54.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration54.options;
        kerberosUserConfiguration0.setoptions(strMap63);
        javax.security.auth.login.Configuration.Parameters parameters65 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider66 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(parameters65);
        org.junit.Assert.assertNull(provider66);
    }

    @Test
    public void test04465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04465");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.setoptions(strMap7);
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test04466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04466");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass10 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test04467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04467");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str5 = kerberosUserConfiguration4.getType();
        kerberosUserConfiguration4.refresh();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration12.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration16.setoptions(strMap18);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration16.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.options = strMap26;
        kerberosUserConfiguration16.setoptions(strMap26);
        kerberosUserConfiguration12.options = strMap26;
        kerberosUserConfiguration0.options = strMap26;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.options;
        java.lang.String str34 = kerberosUserConfiguration0.getType();
        java.lang.String str35 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test04468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04468");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str3 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test04469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04469");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test04470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04470");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str20 = kerberosUserConfiguration19.getType();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration22.options = strMap25;
        kerberosUserConfiguration19.options = strMap25;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.lang.String str31 = kerberosUserConfiguration28.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.options;
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.options = strMap39;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str46 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration48.refresh();
        java.lang.String str50 = kerberosUserConfiguration48.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration51.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.options = strMap54;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.setoptions(strMap56);
        kerberosUserConfiguration48.options = strMap56;
        kerberosUserConfiguration45.setoptions(strMap56);
        kerberosUserConfiguration43.setoptions(strMap56);
        java.security.Provider provider61 = kerberosUserConfiguration43.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap62);
        kerberosUserConfiguration35.setoptions(strMap62);
        kerberosUserConfiguration19.setoptions(strMap62);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration13.options = strMap67;
        javax.security.auth.login.Configuration.Parameters parameters69 = kerberosUserConfiguration13.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters70 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration13.options;
        kerberosUserConfiguration0.options = strMap71;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray74 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray76 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(parameters69);
        org.junit.Assert.assertNull(parameters70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray74);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray76);
    }

    @Test
    public void test04471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04471");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str16 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration15.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration18.refresh();
        java.lang.String str20 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap26);
        kerberosUserConfiguration18.options = strMap26;
        kerberosUserConfiguration15.setoptions(strMap26);
        kerberosUserConfiguration13.setoptions(strMap26);
        java.security.Provider provider31 = kerberosUserConfiguration13.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration32.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.options = strMap37;
        kerberosUserConfiguration13.refresh();
        java.security.Provider provider40 = kerberosUserConfiguration13.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str42 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration45.getoptions();
        kerberosUserConfiguration41.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration41.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider52 = kerberosUserConfiguration51.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getoptions();
        kerberosUserConfiguration41.setoptions(strMap53);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.options = strMap55;
        kerberosUserConfiguration0.options = strMap55;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
    }

    @Test
    public void test04472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04472");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getoptions();
        java.security.Provider provider23 = kerberosUserConfiguration16.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str26 = kerberosUserConfiguration25.getType();
        kerberosUserConfiguration25.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration28.options = strMap31;
        kerberosUserConfiguration25.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.options = strMap35;
        java.lang.String str37 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration42.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider45 = kerberosUserConfiguration42.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration42.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap49);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.security.Provider provider52 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration0.setoptions(strMap53);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray56 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray56);
    }

    @Test
    public void test04473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04473");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test04474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04474");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getoptions();
        java.lang.Class<?> wildcardClass11 = strMap10.getClass();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test04475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04475");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider11 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration0.setoptions(strMap12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap19;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration24.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration24.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str38 = kerberosUserConfiguration37.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration40.refresh();
        java.lang.String str42 = kerberosUserConfiguration40.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration43.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.options = strMap46;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.setoptions(strMap48);
        kerberosUserConfiguration40.options = strMap48;
        kerberosUserConfiguration37.setoptions(strMap48);
        kerberosUserConfiguration37.refresh();
        javax.security.auth.login.Configuration.Parameters parameters53 = kerberosUserConfiguration37.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration37.getParameters();
        kerberosUserConfiguration37.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray57 = kerberosUserConfiguration37.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters60 = kerberosUserConfiguration59.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration59.getoptions();
        kerberosUserConfiguration59.refresh();
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration59.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration68.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration68.setoptions(strMap70);
        java.security.Provider provider72 = kerberosUserConfiguration68.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters73 = kerberosUserConfiguration68.getParameters();
        kerberosUserConfiguration68.refresh();
        javax.security.auth.login.Configuration.Parameters parameters75 = kerberosUserConfiguration68.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration68.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration68.options;
        kerberosUserConfiguration59.setoptions(strMap77);
        kerberosUserConfiguration37.options = strMap77;
        kerberosUserConfiguration24.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters82 = kerberosUserConfiguration24.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration0.setoptions(strMap84);
        java.lang.Class<?> wildcardClass86 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters53);
        org.junit.Assert.assertNull(parameters54);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(parameters60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNull(parameters73);
        org.junit.Assert.assertNull(parameters75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(parameters82);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(wildcardClass86);
    }

    @Test
    public void test04476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04476");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.options = strMap3;
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str11 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        java.lang.String str15 = kerberosUserConfiguration13.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap21);
        kerberosUserConfiguration13.options = strMap21;
        kerberosUserConfiguration10.setoptions(strMap21);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration10.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration28.setoptions(strMap30);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration28.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider35 = kerberosUserConfiguration28.getProvider();
        java.security.Provider provider36 = kerberosUserConfiguration28.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration28.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration28.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.options = strMap40;
        kerberosUserConfiguration0.options = strMap40;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test04477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04477");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.options = strMap6;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap8);
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.security.Provider provider14 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test04478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04478");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration6.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str17 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration16.setoptions(strMap22);
        java.lang.String str24 = kerberosUserConfiguration16.getType();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration16.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getoptions();
        kerberosUserConfiguration27.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration27.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider38 = kerberosUserConfiguration37.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.getoptions();
        kerberosUserConfiguration27.setoptions(strMap39);
        kerberosUserConfiguration16.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration42.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration42.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration51.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration51.setoptions(strMap54);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.setoptions(strMap56);
        javax.security.auth.login.Configuration.Parameters parameters58 = kerberosUserConfiguration42.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration42.getoptions();
        kerberosUserConfiguration16.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration0.options = strMap61;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(parameters58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test04479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04479");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration0.setoptions(strMap2);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration14.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration0.options = strMap24;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass31 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test04480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04480");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass39 = strMap38.getClass();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test04481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04481");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.lang.Class<?> wildcardClass6 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test04482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04482");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.options = strMap1;
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        kerberosUserConfiguration6.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap27);
        kerberosUserConfiguration0.options = strMap27;
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider32 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str34 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration36.refresh();
        java.lang.String str38 = kerberosUserConfiguration36.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration39.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap44);
        kerberosUserConfiguration36.options = strMap44;
        kerberosUserConfiguration33.setoptions(strMap44);
        kerberosUserConfiguration33.refresh();
        javax.security.auth.login.Configuration.Parameters parameters49 = kerberosUserConfiguration33.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration33.getParameters();
        kerberosUserConfiguration33.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray53 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration54.setoptions(strMap57);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str60 = kerberosUserConfiguration59.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration59.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = null;
        kerberosUserConfiguration62.options = strMap63;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration59.setoptions(strMap65);
        kerberosUserConfiguration54.options = strMap65;
        kerberosUserConfiguration33.setoptions(strMap65);
        kerberosUserConfiguration33.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration33.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration33);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray74 = kerberosUserConfiguration33.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters75 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration33.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration0.options = strMap77;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters49);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray53);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray74);
        org.junit.Assert.assertNull(parameters75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test04483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04483");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.options = strMap12;
        kerberosUserConfiguration1.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider18 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap27);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration19.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration1.options = strMap31;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
    }

    @Test
    public void test04484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04484");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(provider12);
    }

    @Test
    public void test04485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04485");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration0.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test04486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04486");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration1.getParameters();
        java.lang.String str52 = kerberosUserConfiguration1.getType();
        java.security.Provider provider53 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(provider53);
    }

    @Test
    public void test04487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04487");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test04488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04488");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str52 = kerberosUserConfiguration51.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration55.getoptions();
        kerberosUserConfiguration51.setoptions(strMap56);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str60 = kerberosUserConfiguration59.getType();
        kerberosUserConfiguration59.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = null;
        kerberosUserConfiguration62.options = strMap63;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration62.options = strMap65;
        kerberosUserConfiguration59.options = strMap65;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.lang.String str71 = kerberosUserConfiguration68.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration68.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration59.setoptions(strMap73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration59.options;
        kerberosUserConfiguration51.setoptions(strMap75);
        kerberosUserConfiguration1.setoptions(strMap75);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration1.getoptions();
        java.lang.Class<?> wildcardClass79 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test04489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04489");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str2 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.options = strMap5;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.options = strMap7;
        kerberosUserConfiguration1.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str28 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration30.refresh();
        java.lang.String str32 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap38);
        kerberosUserConfiguration30.options = strMap38;
        kerberosUserConfiguration27.setoptions(strMap38);
        kerberosUserConfiguration25.setoptions(strMap38);
        java.security.Provider provider43 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap44);
        kerberosUserConfiguration17.setoptions(strMap44);
        kerberosUserConfiguration1.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str52 = kerberosUserConfiguration51.getType();
        kerberosUserConfiguration51.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration51.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str58 = kerberosUserConfiguration57.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.setoptions(strMap63);
        java.security.Provider provider65 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.options = strMap66;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.options = strMap69;
        java.lang.String str71 = kerberosUserConfiguration68.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration68.options;
        java.security.Provider provider73 = kerberosUserConfiguration68.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration74 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration74.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration74.setoptions(strMap76);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray79 = kerberosUserConfiguration74.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration74.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.options = strMap80;
        java.lang.String str82 = kerberosUserConfiguration68.getType();
        java.security.Provider provider83 = kerberosUserConfiguration68.getProvider();
        kerberosUserConfiguration68.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration68.getoptions();
        kerberosUserConfiguration51.setoptions(strMap85);
        kerberosUserConfiguration1.options = strMap85;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray89 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(provider83);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray89);
    }

    @Test
    public void test04490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04490");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.options = strMap7;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider12 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.setoptions(strMap13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        java.security.Provider provider38 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.refresh();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap46;
        kerberosUserConfiguration6.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        java.security.Provider provider50 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray56 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str57 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
    }

    @Test
    public void test04491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04491");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration16.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.lang.String str22 = kerberosUserConfiguration16.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap25;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters28);
    }

    @Test
    public void test04492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04492");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test04493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04493");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
    }

    @Test
    public void test04494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04494");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration4.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration11.options = strMap14;
        kerberosUserConfiguration4.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str23 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.options = strMap31;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration25.options = strMap33;
        kerberosUserConfiguration22.setoptions(strMap33);
        kerberosUserConfiguration20.setoptions(strMap33);
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap39);
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test04495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04495");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.options = strMap3;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        kerberosUserConfiguration0.refresh();
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str13 = kerberosUserConfiguration12.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap18);
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration21);
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration26.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.options = strMap30;
        kerberosUserConfiguration12.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap33;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider36 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test04496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04496");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.options = strMap4;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration10.options = strMap13;
        kerberosUserConfiguration0.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(provider18);
    }

    @Test
    public void test04497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04497");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        java.lang.String str5 = kerberosUserConfiguration3.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.options = strMap9;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration3.options = strMap11;
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration21.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str27 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration26.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        kerberosUserConfiguration21.options = strMap32;
        kerberosUserConfiguration0.setoptions(strMap32);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration38.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test04498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04498");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration3.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration3);
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration3.setoptions(strMap11);
        kerberosUserConfiguration0.setoptions(strMap11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap28;
        kerberosUserConfiguration17.setoptions(strMap28);
        kerberosUserConfiguration0.options = strMap28;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNull(parameters34);
    }

    @Test
    public void test04499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04499");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        javax.security.auth.login.Configuration.Parameters parameters1 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.lang.String str7 = kerberosUserConfiguration6.getType();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration9.options = strMap12;
        kerberosUserConfiguration6.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap20);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str33 = kerberosUserConfiguration32.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration35.options = strMap43;
        kerberosUserConfiguration32.setoptions(strMap43);
        kerberosUserConfiguration30.setoptions(strMap43);
        java.security.Provider provider48 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap49);
        kerberosUserConfiguration22.setoptions(strMap49);
        kerberosUserConfiguration6.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration0.options = strMap54;
        java.security.Provider provider56 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration60.setoptions(strMap62);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray65 = kerberosUserConfiguration60.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider67 = kerberosUserConfiguration60.getProvider();
        java.security.Provider provider68 = kerberosUserConfiguration60.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = null;
        kerberosUserConfiguration69.options = strMap70;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration69.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration69.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap74);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap76;
        org.junit.Assert.assertNull(parameters1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test04500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest8.test04500");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str8 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        kerberosUserConfiguration10.options = strMap18;
        kerberosUserConfiguration7.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration1.options = strMap22;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider25 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getoptions();
        java.lang.Class<?> wildcardClass28 = strMap27.getClass();
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }
}

