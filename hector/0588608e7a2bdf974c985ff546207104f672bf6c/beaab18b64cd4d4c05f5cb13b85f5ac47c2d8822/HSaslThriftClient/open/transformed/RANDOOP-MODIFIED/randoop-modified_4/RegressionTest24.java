import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest24 {

    public static boolean debug = false;

    @Test
    public void test12001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12001");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12002");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray26, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray26, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters43 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters44 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters45 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters46 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters47 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters49 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray26, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters50 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters51 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters53 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray26, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters55 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray26, true);
        org.junit.Assert.assertNotNull(strArray26);
    }

    @Test
    public void test12003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12003");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        java.lang.Class<?> wildcardClass38 = tSSLTransportParameters37.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test12004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12004");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
    }

    @Test
    public void test12005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12005");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.lang.String str10 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str13 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration1.options = strMap16;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
    }

    @Test
    public void test12006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12006");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        tSSLTransportParameters29.setKeyStore("", "");
        java.lang.Class<?> wildcardClass33 = tSSLTransportParameters29.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test12007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12007");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        tSSLTransportParameters39.setKeyStore("hi!", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12008");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        kerberosUserConfiguration7.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap27);
        java.lang.String str29 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider31 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.options;
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration37.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.options = strMap42;
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration32.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray46 = kerberosUserConfiguration32.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str48 = kerberosUserConfiguration32.getType();
        java.lang.String str49 = kerberosUserConfiguration32.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration32.getAppConfigurationEntry("hi!");
        java.security.Provider provider52 = kerberosUserConfiguration32.getProvider();
        kerberosUserConfiguration32.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration32.options;
        kerberosUserConfiguration0.options = strMap54;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test12009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12009");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        tSSLTransportParameters20.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12010");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration18.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration23.refresh();
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str29 = kerberosUserConfiguration27.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration27);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap35);
        kerberosUserConfiguration27.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration23.options = strMap38;
        kerberosUserConfiguration18.setoptions(strMap38);
        kerberosUserConfiguration0.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test12011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12011");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap17);
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration21.refresh();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration28.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration41.refresh();
        java.security.Provider provider43 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap44);
        kerberosUserConfiguration30.options = strMap44;
        kerberosUserConfiguration28.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration28.getoptions();
        kerberosUserConfiguration21.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.options = strMap50;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap53);
        java.lang.String str55 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test12012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12012");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration4.refresh();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration4.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration4.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider23 = kerberosUserConfiguration22.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration24.refresh();
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration28.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap36);
        kerberosUserConfiguration24.options = strMap36;
        kerberosUserConfiguration22.setoptions(strMap36);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.setoptions(strMap41);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration40.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration45.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.options = strMap50;
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration40.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray54 = kerberosUserConfiguration40.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration62.refresh();
        java.security.Provider provider64 = kerberosUserConfiguration62.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration67.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration67.getoptions();
        kerberosUserConfiguration62.options = strMap69;
        kerberosUserConfiguration57.options = strMap69;
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration57.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration40.setoptions(strMap73);
        kerberosUserConfiguration22.setoptions(strMap73);
        kerberosUserConfiguration4.setoptions(strMap73);
        kerberosUserConfiguration0.options = strMap73;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray79 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider80 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray79);
        org.junit.Assert.assertNull(provider80);
    }

    @Test
    public void test12013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12013");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration1.setoptions(strMap28);
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider32 = kerberosUserConfiguration1.getProvider();
        java.lang.String str33 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test12014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12014");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray4 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.options;
        java.lang.String str10 = kerberosUserConfiguration7.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration27.options = strMap29;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap32);
        kerberosUserConfiguration22.setoptions(strMap32);
        kerberosUserConfiguration15.options = strMap32;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration15.getoptions();
        kerberosUserConfiguration12.setoptions(strMap36);
        kerberosUserConfiguration7.setoptions(strMap36);
        kerberosUserConfiguration1.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters41 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration45.refresh();
        kerberosUserConfiguration45.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str51 = kerberosUserConfiguration49.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration49);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration54.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap57);
        kerberosUserConfiguration49.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration49.getoptions();
        kerberosUserConfiguration45.options = strMap60;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration63.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration63.getoptions();
        java.security.Provider provider66 = kerberosUserConfiguration63.getProvider();
        java.lang.String str67 = kerberosUserConfiguration63.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration71.refresh();
        java.security.Provider provider73 = kerberosUserConfiguration71.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap74);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration68.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration68);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration68.options;
        kerberosUserConfiguration63.options = strMap78;
        kerberosUserConfiguration45.options = strMap78;
        java.lang.String str81 = kerberosUserConfiguration45.getType();
        javax.security.auth.login.Configuration.Parameters parameters82 = kerberosUserConfiguration45.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration1.options = strMap83;
        org.junit.Assert.assertNotNull(appConfigurationEntryArray4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNull(parameters82);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test12015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12015");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration11.options = strMap13;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration6.setoptions(strMap16);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap21;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration25.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration25.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration0.setoptions(strMap31);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test12016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12016");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12017");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12018");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap17);
        kerberosUserConfiguration3.options = strMap17;
        kerberosUserConfiguration1.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap48;
        kerberosUserConfiguration35.setoptions(strMap48);
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap52;
        kerberosUserConfiguration1.setoptions(strMap52);
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.options;
        java.lang.String str60 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration62);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration66.refresh();
        java.security.Provider provider68 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap69);
        kerberosUserConfiguration56.options = strMap69;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray75 = kerberosUserConfiguration73.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration73);
        java.lang.String str77 = kerberosUserConfiguration73.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration79.refresh();
        java.security.Provider provider81 = kerberosUserConfiguration79.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration79.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration79.getoptions();
        kerberosUserConfiguration73.options = strMap83;
        kerberosUserConfiguration56.setoptions(strMap83);
        kerberosUserConfiguration1.options = strMap83;
        java.security.Provider provider87 = kerberosUserConfiguration1.getProvider();
        java.lang.String str88 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.lang.String str90 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(str90);
    }

    @Test
    public void test12019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12019");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        java.security.Provider provider9 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.options = strMap22;
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration12.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration12.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.security.Provider provider36 = kerberosUserConfiguration34.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        kerberosUserConfiguration34.options = strMap41;
        kerberosUserConfiguration29.options = strMap41;
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration29.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration29.options;
        kerberosUserConfiguration12.setoptions(strMap45);
        kerberosUserConfiguration6.setoptions(strMap45);
        kerberosUserConfiguration0.options = strMap45;
        java.security.Provider provider49 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider51 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNull(provider51);
    }

    @Test
    public void test12020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12020");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        java.security.Provider provider18 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration13.options;
        kerberosUserConfiguration0.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test12021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12021");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        tSSLTransportParameters26.setKeyStore("", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12022");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(parameters10);
    }

    @Test
    public void test12023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12023");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12024");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12025");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12026");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration4.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(provider18);
    }

    @Test
    public void test12027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12027");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test12028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12028");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray4 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(appConfigurationEntryArray4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test12029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12029");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap7;
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider14 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
    }

    @Test
    public void test12030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12030");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        tSSLTransportParameters38.setTrustStore("", "");
        tSSLTransportParameters38.setTrustStore("", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12031");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12032");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12033");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12034");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        tSSLTransportParameters25.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12035");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray8, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray8);
        tSSLTransportParameters11.setTrustStore("", "hi!");
        tSSLTransportParameters11.setKeyStore("hi!", "");
        tSSLTransportParameters11.setTrustStore("", "", "", "");
        java.lang.Class<?> wildcardClass23 = tSSLTransportParameters11.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test12036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12036");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        tSSLTransportParameters22.requireClientAuth(false);
        tSSLTransportParameters22.requireClientAuth(false);
        tSSLTransportParameters22.setKeyStore("", "", "hi!", "hi!");
        tSSLTransportParameters22.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12037");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test12038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12038");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12039");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, true);
        tSSLTransportParameters18.setTrustStore("hi!", "");
        tSSLTransportParameters18.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12040");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = null;
        kerberosUserConfiguration0.setoptions(strMap2);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap17);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration23.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration31.refresh();
        java.security.Provider provider33 = kerberosUserConfiguration31.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap34);
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration45.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration47.refresh();
        kerberosUserConfiguration47.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration47.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration54);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration58.refresh();
        java.security.Provider provider60 = kerberosUserConfiguration58.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap61);
        kerberosUserConfiguration47.options = strMap61;
        kerberosUserConfiguration45.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration45.getoptions();
        kerberosUserConfiguration38.setoptions(strMap65);
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.options = strMap67;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration23.getoptions();
        java.security.Provider provider70 = kerberosUserConfiguration23.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = null;
        kerberosUserConfiguration71.setoptions(strMap72);
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration71.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration71.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration71.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration78.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = null;
        kerberosUserConfiguration78.options = strMap80;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration82.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration78.setoptions(strMap83);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration85 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration85.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration88 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration88.refresh();
        java.security.Provider provider90 = kerberosUserConfiguration88.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration88.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration85.setoptions(strMap91);
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration85.getoptions();
        kerberosUserConfiguration78.setoptions(strMap93);
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration78.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration71.setoptions(strMap95);
        kerberosUserConfiguration23.options = strMap95;
        java.util.HashMap<java.lang.String, java.lang.String> strMap98 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap98;
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNull(provider90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(strMap98);
    }

    @Test
    public void test12041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12041");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        tSSLTransportParameters32.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12042");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
    }

    @Test
    public void test12043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12043");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration0.options = strMap4;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration21.options = strMap23;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap26);
        kerberosUserConfiguration16.setoptions(strMap26);
        kerberosUserConfiguration9.options = strMap26;
        kerberosUserConfiguration6.options = strMap26;
        kerberosUserConfiguration0.options = strMap26;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.options = strMap44;
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration34.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration34.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration51.refresh();
        java.security.Provider provider53 = kerberosUserConfiguration51.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration56.refresh();
        java.security.Provider provider58 = kerberosUserConfiguration56.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration61.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration61.getoptions();
        kerberosUserConfiguration56.options = strMap63;
        kerberosUserConfiguration51.options = strMap63;
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration51.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration51.options;
        kerberosUserConfiguration34.setoptions(strMap67);
        java.security.Provider provider69 = kerberosUserConfiguration34.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters70 = kerberosUserConfiguration34.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray72 = kerberosUserConfiguration34.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray74 = kerberosUserConfiguration34.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration34.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration78.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration78.setoptions(strMap81);
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration78.options;
        kerberosUserConfiguration34.options = strMap83;
        kerberosUserConfiguration0.setoptions(strMap83);
        java.security.Provider provider86 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(parameters70);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray72);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(provider86);
    }

    @Test
    public void test12044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12044");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        tSSLTransportParameters25.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12045");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider17 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap24);
        kerberosUserConfiguration0.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test12046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12046");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        java.lang.String str12 = kerberosUserConfiguration7.getType();
        java.lang.String str13 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap15;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.options;
        java.lang.String str22 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test12047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12047");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test12048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12048");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration15.refresh();
        java.security.Provider provider17 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration25.getoptions();
        kerberosUserConfiguration20.options = strMap27;
        kerberosUserConfiguration15.options = strMap27;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration15.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration15.getoptions();
        kerberosUserConfiguration0.options = strMap33;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test12049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12049");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        tSSLTransportParameters28.setKeyStore("", "", "", "hi!");
        tSSLTransportParameters28.setTrustStore("", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12050");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration1.options = strMap16;
        java.security.Provider provider18 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration22.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider32 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getoptions();
        java.security.Provider provider38 = kerberosUserConfiguration35.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration35.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration46.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.options = strMap51;
        javax.security.auth.login.Configuration.Parameters parameters53 = kerberosUserConfiguration41.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray55 = kerberosUserConfiguration41.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration58.refresh();
        java.security.Provider provider60 = kerberosUserConfiguration58.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration63.refresh();
        java.security.Provider provider65 = kerberosUserConfiguration63.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration68.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration68.getoptions();
        kerberosUserConfiguration63.options = strMap70;
        kerberosUserConfiguration58.options = strMap70;
        javax.security.auth.login.Configuration.Parameters parameters73 = kerberosUserConfiguration58.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration58.options;
        kerberosUserConfiguration41.setoptions(strMap74);
        kerberosUserConfiguration35.setoptions(strMap74);
        kerberosUserConfiguration22.options = strMap74;
        kerberosUserConfiguration1.options = strMap74;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray80 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration1.options;
        java.lang.String str82 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(parameters53);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(parameters73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(str82);
    }

    @Test
    public void test12051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12051");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters9 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8, true);
        tSSLTransportParameters11.setKeyStore("hi!", "", "hi!", "hi!");
        tSSLTransportParameters11.setKeyStore("hi!", "", "", "");
        tSSLTransportParameters11.requireClientAuth(true);
        tSSLTransportParameters11.setTrustStore("", "hi!");
        tSSLTransportParameters11.setTrustStore("hi!", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test12052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12052");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.security.Provider provider13 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration20.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        kerberosUserConfiguration22.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration22.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration29);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap36);
        kerberosUserConfiguration22.options = strMap36;
        kerberosUserConfiguration20.options = strMap36;
        kerberosUserConfiguration0.setoptions(strMap36);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test12053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12053");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test12054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12054");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        tSSLTransportParameters29.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12055");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider17 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration1.options;
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration1.options = strMap20;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
    }

    @Test
    public void test12056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12056");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test12057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12057");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        tSSLTransportParameters26.setKeyStore("hi!", "");
        tSSLTransportParameters26.setKeyStore("", "hi!", "", "");
        tSSLTransportParameters26.setTrustStore("", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12058");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12059");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.options = strMap16;
        kerberosUserConfiguration0.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider25 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration28.options = strMap35;
        kerberosUserConfiguration23.options = strMap35;
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration23.getParameters();
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray42 = kerberosUserConfiguration23.getAppConfigurationEntry("");
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration0.setoptions(strMap44);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray42);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test12060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12060");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters22.setTrustStore("", "");
        tSSLTransportParameters22.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12061");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration12.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap17);
        kerberosUserConfiguration7.setoptions(strMap17);
        kerberosUserConfiguration0.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.options;
        java.lang.String str25 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters29);
    }

    @Test
    public void test12062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12062");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration24.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration29);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration34.refresh();
        kerberosUserConfiguration34.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        javax.security.auth.login.Configuration.Parameters parameters41 = kerberosUserConfiguration38.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration43.refresh();
        java.security.Provider provider45 = kerberosUserConfiguration43.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap46);
        kerberosUserConfiguration34.options = strMap46;
        kerberosUserConfiguration29.options = strMap46;
        kerberosUserConfiguration24.options = strMap46;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration62.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.getoptions();
        kerberosUserConfiguration57.options = strMap64;
        kerberosUserConfiguration52.options = strMap64;
        kerberosUserConfiguration24.setoptions(strMap64);
        java.lang.String str68 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration21.options = strMap69;
        kerberosUserConfiguration15.setoptions(strMap69);
        kerberosUserConfiguration0.setoptions(strMap69);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider74 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(parameters41);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider74);
    }

    @Test
    public void test12063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12063");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider14 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration16.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration16.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration0.options = strMap22;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test12064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12064");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration3.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration10.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration15.options = strMap17;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration10.setoptions(strMap20);
        kerberosUserConfiguration3.options = strMap20;
        kerberosUserConfiguration0.options = strMap20;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.security.Provider provider36 = kerberosUserConfiguration34.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap37);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration30);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration30.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration0.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test12065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12065");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration1.setoptions(strMap12);
        java.security.Provider provider14 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider16 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters18);
    }

    @Test
    public void test12066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12066");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12067");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        tSSLTransportParameters35.requireClientAuth(true);
        java.lang.Class<?> wildcardClass38 = tSSLTransportParameters35.getClass();
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test12068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12068");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        tSSLTransportParameters19.setTrustStore("hi!", "");
        tSSLTransportParameters19.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12069");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        kerberosUserConfiguration27.options = strMap34;
        kerberosUserConfiguration22.options = strMap34;
        java.security.Provider provider37 = kerberosUserConfiguration22.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration47.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.options = strMap52;
        kerberosUserConfiguration39.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration56.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.options = strMap62;
        kerberosUserConfiguration22.options = strMap62;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration66.refresh();
        java.security.Provider provider68 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider70 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration66.getoptions();
        kerberosUserConfiguration22.setoptions(strMap71);
        kerberosUserConfiguration0.setoptions(strMap71);
        java.lang.String str74 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider76 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray78 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray78);
    }

    @Test
    public void test12070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12070");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration4.options = strMap6;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
    }

    @Test
    public void test12071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12071");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration10.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.options = strMap20;
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration1.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test12072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12072");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        tSSLTransportParameters18.setKeyStore("hi!", "", "", "");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12073");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12074");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        kerberosUserConfiguration4.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test12075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12075");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        tSSLTransportParameters22.setTrustStore("hi!", "hi!");
        tSSLTransportParameters22.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12076");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str4 = kerberosUserConfiguration2.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap14);
        kerberosUserConfiguration6.setoptions(strMap14);
        kerberosUserConfiguration2.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration2.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration2.getoptions();
        kerberosUserConfiguration0.setoptions(strMap19);
        java.lang.String str21 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test12077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12077");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test12078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12078");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
    }

    @Test
    public void test12079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12079");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        tSSLTransportParameters29.setKeyStore("hi!", "");
        tSSLTransportParameters29.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12080");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12081");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration5.refresh();
        kerberosUserConfiguration5.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration9.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        kerberosUserConfiguration5.options = strMap17;
        kerberosUserConfiguration0.options = strMap17;
        kerberosUserConfiguration0.refresh();
        java.lang.String str22 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.options = strMap34;
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration24.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration24.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration24.getoptions();
        java.security.Provider provider40 = kerberosUserConfiguration24.getProvider();
        java.lang.String str41 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration24.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration0.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test12082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12082");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap24;
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration14.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration14.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str30 = kerberosUserConfiguration14.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration14.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration34.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap37;
        kerberosUserConfiguration0.setoptions(strMap37);
        java.lang.String str40 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration42.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration42);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.options = strMap55;
        kerberosUserConfiguration42.setoptions(strMap55);
        kerberosUserConfiguration42.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration60.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters67 = kerberosUserConfiguration60.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration69.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration69);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = null;
        kerberosUserConfiguration72.setoptions(strMap73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration72.options;
        kerberosUserConfiguration72.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = null;
        kerberosUserConfiguration77.setoptions(strMap78);
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration77.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration77.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration72.options = strMap82;
        kerberosUserConfiguration69.setoptions(strMap82);
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration86 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = null;
        kerberosUserConfiguration86.setoptions(strMap87);
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration86.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration86.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration86.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration86.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration69.options = strMap92;
        kerberosUserConfiguration60.setoptions(strMap92);
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.options = strMap95;
        kerberosUserConfiguration0.setoptions(strMap95);
        javax.security.auth.login.Configuration.Parameters parameters98 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap99 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(parameters67);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(strMap89);
        org.junit.Assert.assertNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNull(parameters98);
        org.junit.Assert.assertNotNull(strMap99);
    }

    @Test
    public void test12083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12083");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        tSSLTransportParameters28.setKeyStore("", "hi!");
        tSSLTransportParameters28.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12084");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        tSSLTransportParameters35.setKeyStore("", "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12085");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        tSSLTransportParameters29.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12086");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        tSSLTransportParameters18.setKeyStore("hi!", "", "", "");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12087");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test12088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12088");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        tSSLTransportParameters34.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12089");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12090");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12091");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        tSSLTransportParameters26.setTrustStore("", "");
        tSSLTransportParameters26.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12092");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = null;
        kerberosUserConfiguration0.options = strMap2;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test12093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12093");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        java.lang.String str8 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test12094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12094");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test12095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12095");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        tSSLTransportParameters25.setTrustStore("hi!", "");
        tSSLTransportParameters25.setKeyStore("", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12096");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(parameters9);
    }

    @Test
    public void test12097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12097");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test12098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12098");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration22.options = strMap29;
        kerberosUserConfiguration17.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap33);
        java.security.Provider provider35 = kerberosUserConfiguration0.getProvider();
        java.lang.String str36 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str40 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str44 = kerberosUserConfiguration42.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration42);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap50);
        kerberosUserConfiguration42.setoptions(strMap50);
        kerberosUserConfiguration38.options = strMap50;
        kerberosUserConfiguration0.setoptions(strMap50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str56 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(strMap57);
    }

    @Test
    public void test12099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12099");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test12100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12100");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12101");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        tSSLTransportParameters33.setKeyStore("", "");
        tSSLTransportParameters33.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12102");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12103");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        tSSLTransportParameters24.setKeyStore("", "hi!");
        tSSLTransportParameters24.setTrustStore("hi!", "hi!");
        tSSLTransportParameters24.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12104");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap17);
        kerberosUserConfiguration3.options = strMap17;
        kerberosUserConfiguration1.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration25.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration1.options = strMap30;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str35 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration1.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
    }

    @Test
    public void test12105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12105");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12106");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        tSSLTransportParameters34.setTrustStore("hi!", "hi!");
        tSSLTransportParameters34.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12107");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap17);
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration21.refresh();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration28.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration41.refresh();
        java.security.Provider provider43 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap44);
        kerberosUserConfiguration30.options = strMap44;
        kerberosUserConfiguration28.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration28.getoptions();
        kerberosUserConfiguration21.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.options = strMap50;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap53);
        java.lang.String str55 = kerberosUserConfiguration1.getType();
        java.lang.String str56 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
    }

    @Test
    public void test12108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12108");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test12109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12109");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        tSSLTransportParameters26.setKeyStore("hi!", "");
        tSSLTransportParameters26.requireClientAuth(true);
        tSSLTransportParameters26.setTrustStore("", "hi!", "hi!", "");
        tSSLTransportParameters26.setKeyStore("hi!", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12110");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7);
        tSSLTransportParameters8.requireClientAuth(true);
        tSSLTransportParameters8.setTrustStore("hi!", "", "", "");
        tSSLTransportParameters8.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters8.requireClientAuth(false);
        tSSLTransportParameters8.setKeyStore("", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test12111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12111");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration15.refresh();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration22.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.setoptions(strMap38);
        kerberosUserConfiguration24.options = strMap38;
        kerberosUserConfiguration22.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration22.getoptions();
        kerberosUserConfiguration15.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap44;
        java.lang.String str46 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.setoptions(strMap53);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.setoptions(strMap58);
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration57.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.options = strMap62;
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration52.getParameters();
        java.security.Provider provider65 = kerberosUserConfiguration52.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = null;
        kerberosUserConfiguration66.setoptions(strMap67);
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.options;
        java.lang.String str72 = kerberosUserConfiguration70.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration70.options;
        kerberosUserConfiguration70.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.options = strMap75;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration78.refresh();
        java.security.Provider provider80 = kerberosUserConfiguration78.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration78.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider82 = kerberosUserConfiguration78.getProvider();
        java.lang.String str83 = kerberosUserConfiguration78.getType();
        javax.security.auth.login.Configuration.Parameters parameters84 = kerberosUserConfiguration78.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration86 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration86.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration86.getoptions();
        java.security.Provider provider89 = kerberosUserConfiguration86.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters90 = kerberosUserConfiguration86.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration86.options;
        kerberosUserConfiguration78.options = strMap91;
        kerberosUserConfiguration66.setoptions(strMap91);
        kerberosUserConfiguration52.options = strMap91;
        kerberosUserConfiguration0.options = strMap91;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(parameters64);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(provider80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(provider82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNull(parameters84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(provider89);
        org.junit.Assert.assertNull(parameters90);
        org.junit.Assert.assertNotNull(strMap91);
    }

    @Test
    public void test12112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12112");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test12113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12113");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        tSSLTransportParameters32.setKeyStore("", "");
        tSSLTransportParameters32.setTrustStore("", "", "hi!", "hi!");
        tSSLTransportParameters32.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12114");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        tSSLTransportParameters31.setTrustStore("hi!", "", "", "");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12115");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12116");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        java.security.Provider provider12 = kerberosUserConfiguration9.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap25;
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration15.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration15.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        java.security.Provider provider34 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration37.refresh();
        java.security.Provider provider39 = kerberosUserConfiguration37.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration42.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.getoptions();
        kerberosUserConfiguration37.options = strMap44;
        kerberosUserConfiguration32.options = strMap44;
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration32.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration32.options;
        kerberosUserConfiguration15.setoptions(strMap48);
        kerberosUserConfiguration9.setoptions(strMap48);
        kerberosUserConfiguration1.options = strMap48;
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters53 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test12117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12117");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        tSSLTransportParameters32.setTrustStore("", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12118");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        java.lang.String str7 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration8.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap30;
        kerberosUserConfiguration17.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.options = strMap40;
        kerberosUserConfiguration8.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap43);
        java.lang.Class<?> wildcardClass45 = strMap43.getClass();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test12119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12119");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        tSSLTransportParameters25.requireClientAuth(false);
        tSSLTransportParameters25.setKeyStore("", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12120");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.lang.String str7 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap21);
        kerberosUserConfiguration9.setoptions(strMap21);
        kerberosUserConfiguration5.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration0.setoptions(strMap25);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider31 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray34 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str35 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray34);
        org.junit.Assert.assertNull(str35);
    }

    @Test
    public void test12121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12121");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12122");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
    }

    @Test
    public void test12123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12123");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        tSSLTransportParameters31.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12124");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration11.options = strMap13;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap16);
        kerberosUserConfiguration6.setoptions(strMap16);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap21;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(parameters27);
    }

    @Test
    public void test12125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12125");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12126");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration10.options = strMap22;
        kerberosUserConfiguration5.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNull(parameters31);
    }

    @Test
    public void test12127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12127");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters21.setTrustStore("", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12128");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration4.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap17;
        kerberosUserConfiguration4.setoptions(strMap17);
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration21.refresh();
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str27 = kerberosUserConfiguration25.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap33);
        kerberosUserConfiguration25.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration25.getoptions();
        kerberosUserConfiguration21.options = strMap36;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        java.security.Provider provider42 = kerberosUserConfiguration39.getProvider();
        java.lang.String str43 = kerberosUserConfiguration39.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration44.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration44.options;
        kerberosUserConfiguration39.options = strMap54;
        kerberosUserConfiguration21.options = strMap54;
        java.lang.String str57 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration21.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration21.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration4.setoptions(strMap60);
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap62);
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(parameters64);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test12129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12129");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
    }

    @Test
    public void test12130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12130");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration12.refresh();
        java.security.Provider provider14 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getoptions();
        kerberosUserConfiguration17.options = strMap24;
        kerberosUserConfiguration12.options = strMap24;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration0.options = strMap27;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test12131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12131");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        tSSLTransportParameters22.setTrustStore("hi!", "");
        tSSLTransportParameters22.setKeyStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters22.setKeyStore("hi!", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12132");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration1.setoptions(strMap12);
        java.security.Provider provider14 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider17 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider17);
    }

    @Test
    public void test12133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12133");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration16.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.options = strMap38;
        kerberosUserConfiguration25.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration42.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.options = strMap48;
        kerberosUserConfiguration16.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap51;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray54 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray54);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test12134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12134");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        tSSLTransportParameters28.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12135");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        tSSLTransportParameters42.setTrustStore("", "", "", "");
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12136");
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters44 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21, false);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test12137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12137");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration14.setoptions(strMap16);
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        java.lang.String str30 = kerberosUserConfiguration26.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap31);
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap34);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.options;
        kerberosUserConfiguration36.refresh();
        java.lang.String str41 = kerberosUserConfiguration36.getType();
        java.lang.String str42 = kerberosUserConfiguration36.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration36.refresh();
        kerberosUserConfiguration36.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration47.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.setoptions(strMap53);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration52.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.options = strMap57;
        java.lang.String str59 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration36.setoptions(strMap60);
        kerberosUserConfiguration14.setoptions(strMap60);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray64 = kerberosUserConfiguration14.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap66;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test12138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12138");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        tSSLTransportParameters37.setTrustStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12139");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12140");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12141");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test12142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12142");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider12 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration14.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        java.lang.String str18 = kerberosUserConfiguration14.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration14.options = strMap24;
        kerberosUserConfiguration1.setoptions(strMap24);
        java.lang.String str27 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration1.getoptions();
        java.lang.String str30 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
        org.junit.Assert.assertNull(parameters33);
    }

    @Test
    public void test12143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12143");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        java.security.Provider provider27 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration25.options = strMap32;
        kerberosUserConfiguration20.options = strMap32;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration20.getParameters();
        java.lang.String str36 = kerberosUserConfiguration20.getType();
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration20.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str41 = kerberosUserConfiguration20.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration47.options = strMap49;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap52);
        kerberosUserConfiguration42.setoptions(strMap52);
        kerberosUserConfiguration20.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap56;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test12144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12144");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration1.setoptions(strMap28);
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.options;
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration32.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration32.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        java.lang.String str44 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.options = strMap45;
        kerberosUserConfiguration1.options = strMap45;
        java.lang.String str48 = kerberosUserConfiguration1.getType();
        java.security.Provider provider49 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(provider49);
    }

    @Test
    public void test12145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12145");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration12.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration12.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.options;
        java.security.Provider provider17 = kerberosUserConfiguration12.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration18.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.lang.String str29 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap30);
        kerberosUserConfiguration12.setoptions(strMap30);
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration12.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.options = strMap44;
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration34.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration34.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration34.getoptions();
        java.security.Provider provider50 = kerberosUserConfiguration34.getProvider();
        java.lang.String str51 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration12.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration0.setoptions(strMap54);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass57 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test12146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12146");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters19.setTrustStore("", "");
        tSSLTransportParameters19.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12147");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray8, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8, false);
        tSSLTransportParameters12.requireClientAuth(true);
        tSSLTransportParameters12.setTrustStore("", "", "", "");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test12148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12148");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12149");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.security.Provider provider17 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(parameters18);
    }

    @Test
    public void test12150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12150");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        tSSLTransportParameters19.setKeyStore("", "", "hi!", "");
        tSSLTransportParameters19.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12151");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration16.options = strMap18;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap21);
        kerberosUserConfiguration11.setoptions(strMap21);
        kerberosUserConfiguration4.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration1.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration29);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap36);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        java.lang.String str49 = kerberosUserConfiguration45.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap50);
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration29.setoptions(strMap53);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str58 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.options;
        kerberosUserConfiguration63.refresh();
        java.lang.String str68 = kerberosUserConfiguration63.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = null;
        kerberosUserConfiguration69.setoptions(strMap70);
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration69.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration69.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = null;
        kerberosUserConfiguration76.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration76.options;
        kerberosUserConfiguration76.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration81 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration81.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = null;
        kerberosUserConfiguration81.options = strMap83;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration85 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration85.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration81.setoptions(strMap86);
        kerberosUserConfiguration76.setoptions(strMap86);
        kerberosUserConfiguration69.options = strMap86;
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration63.setoptions(strMap90);
        kerberosUserConfiguration29.setoptions(strMap90);
        kerberosUserConfiguration1.options = strMap90;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test12152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12152");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration19.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration1.setoptions(strMap22);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test12153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12153");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap17);
        kerberosUserConfiguration3.options = strMap17;
        kerberosUserConfiguration1.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap48;
        kerberosUserConfiguration35.setoptions(strMap48);
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap52;
        kerberosUserConfiguration1.setoptions(strMap52);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass57 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(wildcardClass57);
    }

    @Test
    public void test12154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12154");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(str5);
    }

    @Test
    public void test12155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12155");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration13.refresh();
        java.security.Provider provider15 = kerberosUserConfiguration13.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider17 = kerberosUserConfiguration13.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider20 = kerberosUserConfiguration13.getProvider();
        java.lang.String str21 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters30);
    }

    @Test
    public void test12156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12156");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
    }

    @Test
    public void test12157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12157");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters9 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8, true);
        tSSLTransportParameters11.setKeyStore("hi!", "", "hi!", "hi!");
        tSSLTransportParameters11.setKeyStore("", "");
        tSSLTransportParameters11.setTrustStore("hi!", "", "hi!", "");
        tSSLTransportParameters11.setTrustStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters11.setKeyStore("", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test12158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12158");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration20.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        kerberosUserConfiguration15.setoptions(strMap25);
        kerberosUserConfiguration8.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration8.getoptions();
        java.security.Provider provider31 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration1.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test12159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12159");
        java.lang.String[] strArray1 = null;
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters3 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray1, false);
        tSSLTransportParameters3.setTrustStore("hi!", "", "", "");
        tSSLTransportParameters3.setTrustStore("", "", "hi!", "");
    }

    @Test
    public void test12160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12160");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(parameters7);
    }

    @Test
    public void test12161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12161");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test12162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12162");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration3.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration10.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration15.options = strMap17;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration10.setoptions(strMap20);
        kerberosUserConfiguration3.options = strMap20;
        kerberosUserConfiguration0.options = strMap20;
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.Class<?> wildcardClass30 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test12163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12163");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test12164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12164");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        tSSLTransportParameters38.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12165");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        tSSLTransportParameters31.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12166");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap20;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration22.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap28;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test12167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12167");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12168");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.options = strMap31;
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration21.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration21.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap36);
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration39.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration44.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.options = strMap49;
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration39.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray53 = kerberosUserConfiguration39.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration19.options = strMap56;
        kerberosUserConfiguration0.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str60 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test12169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12169");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        tSSLTransportParameters28.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12170");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12171");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        tSSLTransportParameters34.setKeyStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12172");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str23 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration27);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.options = strMap40;
        kerberosUserConfiguration27.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration44.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration44.options;
        kerberosUserConfiguration27.setoptions(strMap54);
        javax.security.auth.login.Configuration.Parameters parameters56 = kerberosUserConfiguration27.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider58 = kerberosUserConfiguration27.getProvider();
        java.lang.String str59 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap60;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(parameters56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test12173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12173");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration19.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration1.setoptions(strMap22);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test12174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12174");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        java.security.Provider provider20 = kerberosUserConfiguration17.getProvider();
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration0.options = strMap23;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test12175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12175");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration1.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap32;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration35.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration40.refresh();
        java.security.Provider provider42 = kerberosUserConfiguration40.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration45.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.getoptions();
        kerberosUserConfiguration40.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration35.options;
        kerberosUserConfiguration1.options = strMap52;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.setoptions(strMap55);
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.options;
        kerberosUserConfiguration54.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration54);
        javax.security.auth.login.Configuration.Parameters parameters60 = kerberosUserConfiguration54.getParameters();
        kerberosUserConfiguration54.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration63.refresh();
        java.security.Provider provider65 = kerberosUserConfiguration63.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider67 = kerberosUserConfiguration63.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider70 = kerberosUserConfiguration63.getProvider();
        java.lang.String str71 = kerberosUserConfiguration63.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray73 = kerberosUserConfiguration63.getAppConfigurationEntry("");
        java.security.Provider provider74 = kerberosUserConfiguration63.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray78 = kerberosUserConfiguration76.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration76);
        java.lang.String str80 = kerberosUserConfiguration76.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration82.refresh();
        java.security.Provider provider84 = kerberosUserConfiguration82.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration82.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration82.getoptions();
        kerberosUserConfiguration76.options = strMap86;
        kerberosUserConfiguration63.setoptions(strMap86);
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration63.options;
        kerberosUserConfiguration54.options = strMap89;
        kerberosUserConfiguration1.setoptions(strMap89);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(parameters60);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray73);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray78);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNull(provider84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strMap89);
    }

    @Test
    public void test12176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12176");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration21.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration31.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.getoptions();
        kerberosUserConfiguration26.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap35);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap39);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test12177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12177");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test12178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12178");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        java.security.Provider provider14 = kerberosUserConfiguration11.getProvider();
        java.lang.String str15 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration16.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration11.options = strMap26;
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration11.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap29;
        java.security.Provider provider31 = kerberosUserConfiguration1.getProvider();
        java.lang.Class<?> wildcardClass32 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(wildcardClass32);
    }

    @Test
    public void test12179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12179");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9);
        tSSLTransportParameters14.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters14.setKeyStore("", "", "hi!", "");
        tSSLTransportParameters14.setTrustStore("", "hi!");
        tSSLTransportParameters14.setTrustStore("hi!", "", "hi!", "");
        tSSLTransportParameters14.setKeyStore("hi!", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test12180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12180");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration3.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration10.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration15.options = strMap17;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration10.setoptions(strMap20);
        kerberosUserConfiguration3.options = strMap20;
        kerberosUserConfiguration0.options = strMap20;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration31.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration36.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.options = strMap41;
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration31.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray45 = kerberosUserConfiguration31.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration31.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration31.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = null;
        kerberosUserConfiguration49.setoptions(strMap50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.options;
        kerberosUserConfiguration49.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration49);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.options;
        kerberosUserConfiguration55.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = null;
        kerberosUserConfiguration60.options = strMap62;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap65);
        kerberosUserConfiguration55.setoptions(strMap65);
        kerberosUserConfiguration49.options = strMap65;
        kerberosUserConfiguration31.setoptions(strMap65);
        kerberosUserConfiguration31.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap71);
        kerberosUserConfiguration0.options = strMap71;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test12181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12181");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        tSSLTransportParameters17.requireClientAuth(true);
        tSSLTransportParameters17.setTrustStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12182");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration11.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        java.lang.String str15 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration11.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration11.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str26 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str30 = kerberosUserConfiguration28.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap36);
        kerberosUserConfiguration28.setoptions(strMap36);
        kerberosUserConfiguration24.options = strMap36;
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap41;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration48.options;
        java.lang.String str50 = kerberosUserConfiguration48.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        kerberosUserConfiguration48.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.options = strMap53;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration56.refresh();
        java.security.Provider provider58 = kerberosUserConfiguration56.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider60 = kerberosUserConfiguration56.getProvider();
        java.lang.String str61 = kerberosUserConfiguration56.getType();
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration56.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration64.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration64.getoptions();
        java.security.Provider provider67 = kerberosUserConfiguration64.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters68 = kerberosUserConfiguration64.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration64.options;
        kerberosUserConfiguration56.options = strMap69;
        kerberosUserConfiguration44.setoptions(strMap69);
        kerberosUserConfiguration11.setoptions(strMap69);
        kerberosUserConfiguration0.setoptions(strMap69);
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray76 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray78 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNull(parameters68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray76);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray78);
        org.junit.Assert.assertNotNull(strMap79);
    }

    @Test
    public void test12183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12183");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12184");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        java.lang.String str13 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.options;
        java.lang.String str18 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration16.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration43.refresh();
        java.security.Provider provider45 = kerberosUserConfiguration43.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap49);
        kerberosUserConfiguration16.options = strMap49;
        kerberosUserConfiguration1.options = strMap49;
        java.security.Provider provider53 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(parameters54);
    }

    @Test
    public void test12185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12185");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration18.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration18.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration0.options = strMap26;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test12186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12186");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12187");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        java.lang.Class<?> wildcardClass28 = tSSLTransportParameters27.getClass();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test12188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12188");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration7.refresh();
        java.security.Provider provider9 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider11 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider14 = kerberosUserConfiguration7.getProvider();
        java.lang.String str15 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap16);
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.lang.String str23 = kerberosUserConfiguration19.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration25.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        java.lang.String str29 = kerberosUserConfiguration25.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration31.refresh();
        java.security.Provider provider33 = kerberosUserConfiguration31.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration31.getoptions();
        kerberosUserConfiguration25.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration25.getoptions();
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration25.getoptions();
        kerberosUserConfiguration19.setoptions(strMap39);
        kerberosUserConfiguration0.options = strMap39;
        java.lang.String str42 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test12189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12189");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider22 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider22);
    }

    @Test
    public void test12190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12190");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        tSSLTransportParameters21.setTrustStore("hi!", "hi!", "", "");
        tSSLTransportParameters21.setTrustStore("", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12191");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12192");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test12193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12193");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider12 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration14.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        java.lang.String str18 = kerberosUserConfiguration14.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration14.options = strMap24;
        kerberosUserConfiguration1.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.options;
        java.lang.String str28 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration30.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration30);
        java.lang.String str34 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        java.security.Provider provider38 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration36.getoptions();
        kerberosUserConfiguration30.options = strMap40;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str45 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str49 = kerberosUserConfiguration47.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration47);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap55);
        kerberosUserConfiguration47.setoptions(strMap55);
        kerberosUserConfiguration43.options = strMap55;
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration43.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.options = strMap60;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration30);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray64 = kerberosUserConfiguration30.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration30.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration1.setoptions(strMap66);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray69 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray69);
    }

    @Test
    public void test12194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12194");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12195");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9, false);
        tSSLTransportParameters13.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test12196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12196");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str11 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap24;
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration14.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration14.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration14.getoptions();
        java.security.Provider provider30 = kerberosUserConfiguration14.getProvider();
        java.lang.String str31 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration14.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration14.getParameters();
        java.lang.String str34 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration1.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration1.options;
        java.lang.String str38 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test12197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12197");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        tSSLTransportParameters16.setTrustStore("hi!", "", "", "");
        tSSLTransportParameters16.setKeyStore("hi!", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12198");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.options = strMap31;
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration21.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration21.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap36);
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration39.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration44.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.options = strMap49;
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration39.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray53 = kerberosUserConfiguration39.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration19.options = strMap56;
        kerberosUserConfiguration0.setoptions(strMap56);
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray61 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray61);
        org.junit.Assert.assertNotNull(strMap62);
    }

    @Test
    public void test12199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12199");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap9);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration1.getoptions();
        java.lang.String str14 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test12200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12200");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.String str11 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test12201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12201");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration0.setoptions(strMap12);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass17 = strMap16.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(strMap16);
    }

    @Test
    public void test12202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12202");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        tSSLTransportParameters35.setTrustStore("", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12203");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.lang.String str22 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration18.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray40 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray40);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test12204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12204");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        java.lang.Class<?> wildcardClass28 = tSSLTransportParameters27.getClass();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test12205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12205");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test12206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12206");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration10.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration15.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.options = strMap20;
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration10.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str26 = kerberosUserConfiguration10.getType();
        java.lang.String str27 = kerberosUserConfiguration10.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        java.security.Provider provider34 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration37.refresh();
        java.security.Provider provider39 = kerberosUserConfiguration37.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration42.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.getoptions();
        kerberosUserConfiguration37.options = strMap44;
        kerberosUserConfiguration32.options = strMap44;
        java.security.Provider provider47 = kerberosUserConfiguration32.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration49.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration49);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.setoptions(strMap53);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.setoptions(strMap58);
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration57.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.options = strMap62;
        kerberosUserConfiguration49.setoptions(strMap62);
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = null;
        kerberosUserConfiguration66.setoptions(strMap67);
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration66.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.options = strMap72;
        kerberosUserConfiguration32.options = strMap72;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration76.refresh();
        java.security.Provider provider78 = kerberosUserConfiguration76.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider80 = kerberosUserConfiguration76.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration76.getoptions();
        kerberosUserConfiguration32.setoptions(strMap81);
        kerberosUserConfiguration10.setoptions(strMap81);
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        javax.security.auth.login.Configuration.Parameters parameters86 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration1.setoptions(strMap87);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(provider80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(parameters86);
        org.junit.Assert.assertNotNull(strMap87);
    }

    @Test
    public void test12207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12207");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        tSSLTransportParameters26.setTrustStore("hi!", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12208");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        tSSLTransportParameters35.requireClientAuth(false);
        tSSLTransportParameters35.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12209");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration5.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap8);
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test12210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12210");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test12211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12211");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray8);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8);
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test12212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12212");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        tSSLTransportParameters21.setTrustStore("", "hi!");
        tSSLTransportParameters21.setKeyStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters21.setKeyStore("", "", "", "");
        tSSLTransportParameters21.requireClientAuth(false);
        tSSLTransportParameters21.requireClientAuth(false);
        tSSLTransportParameters21.setTrustStore("hi!", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12213");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7);
        tSSLTransportParameters8.setKeyStore("", "hi!", "hi!", "");
        tSSLTransportParameters8.setTrustStore("", "", "", "");
        tSSLTransportParameters8.setKeyStore("hi!", "", "hi!", "");
        tSSLTransportParameters8.setKeyStore("", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test12214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12214");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        tSSLTransportParameters17.setKeyStore("", "", "hi!", "hi!");
        tSSLTransportParameters17.setTrustStore("", "");
        tSSLTransportParameters17.setTrustStore("", "");
        tSSLTransportParameters17.setTrustStore("hi!", "hi!");
        tSSLTransportParameters17.setTrustStore("", "hi!");
        tSSLTransportParameters17.setKeyStore("", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12215");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration6.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration16.refresh();
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.setoptions(strMap21);
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration20.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        java.security.Provider provider27 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap28);
        kerberosUserConfiguration16.options = strMap28;
        kerberosUserConfiguration11.options = strMap28;
        kerberosUserConfiguration6.options = strMap28;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.security.Provider provider36 = kerberosUserConfiguration34.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        java.security.Provider provider41 = kerberosUserConfiguration39.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration44.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration44.getoptions();
        kerberosUserConfiguration39.options = strMap46;
        kerberosUserConfiguration34.options = strMap46;
        kerberosUserConfiguration6.setoptions(strMap46);
        java.lang.String str50 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration53.refresh();
        java.security.Provider provider55 = kerberosUserConfiguration53.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider57 = kerberosUserConfiguration53.getProvider();
        java.lang.String str58 = kerberosUserConfiguration53.getType();
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration53.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration61.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration61.getoptions();
        java.security.Provider provider64 = kerberosUserConfiguration61.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters65 = kerberosUserConfiguration61.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration61.options;
        kerberosUserConfiguration53.options = strMap66;
        kerberosUserConfiguration6.options = strMap66;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.setoptions(strMap69);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray72 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters73 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNull(parameters65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray72);
        org.junit.Assert.assertNull(parameters73);
        org.junit.Assert.assertNotNull(strMap74);
    }

    @Test
    public void test12216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12216");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration17.getoptions();
        java.security.Provider provider20 = kerberosUserConfiguration17.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration28.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.options = strMap33;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration23.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration23.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration40.refresh();
        java.security.Provider provider42 = kerberosUserConfiguration40.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration45.refresh();
        java.security.Provider provider47 = kerberosUserConfiguration45.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration50.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration50.getoptions();
        kerberosUserConfiguration45.options = strMap52;
        kerberosUserConfiguration40.options = strMap52;
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration40.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration23.setoptions(strMap56);
        kerberosUserConfiguration17.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap62);
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap64);
    }

    @Test
    public void test12217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12217");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.lang.String str7 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap21);
        kerberosUserConfiguration9.setoptions(strMap21);
        kerberosUserConfiguration5.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration0.setoptions(strMap25);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test12218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12218");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.options;
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration7.options = strMap9;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap12);
        kerberosUserConfiguration2.setoptions(strMap12);
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration2.setoptions(strMap21);
        kerberosUserConfiguration0.options = strMap21;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass31 = appConfigurationEntryArray30.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test12219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12219");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        java.security.Provider provider11 = kerberosUserConfiguration8.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration8.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap24;
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration14.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration14.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration31.refresh();
        java.security.Provider provider33 = kerberosUserConfiguration31.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        java.security.Provider provider38 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration41.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration36.options = strMap43;
        kerberosUserConfiguration31.options = strMap43;
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration31.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration14.setoptions(strMap47);
        kerberosUserConfiguration8.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap52);
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration55);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration55.getParameters();
        kerberosUserConfiguration55.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap61;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test12220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12220");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        kerberosUserConfiguration7.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.security.Provider provider36 = kerberosUserConfiguration34.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider38 = kerberosUserConfiguration34.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray40 = kerberosUserConfiguration34.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap41;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters44);
    }

    @Test
    public void test12221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12221");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration1.setoptions(strMap12);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration29.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap34);
        kerberosUserConfiguration24.setoptions(strMap34);
        kerberosUserConfiguration17.options = strMap34;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration17.getoptions();
        java.security.Provider provider40 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration1.setoptions(strMap41);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test12222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12222");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        tSSLTransportParameters22.setKeyStore("hi!", "", "hi!", "hi!");
        java.lang.Class<?> wildcardClass28 = tSSLTransportParameters22.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test12223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12223");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test12224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12224");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters17);
    }

    @Test
    public void test12225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12225");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test12226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12226");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12227");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        tSSLTransportParameters24.setKeyStore("hi!", "hi!");
        tSSLTransportParameters24.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12228");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration1.options = strMap16;
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(parameters23);
    }

    @Test
    public void test12229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12229");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(parameters21);
    }

    @Test
    public void test12230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12230");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration12.refresh();
        java.security.Provider provider14 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap15);
        java.security.Provider provider17 = kerberosUserConfiguration9.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        java.lang.String str19 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration1.options = strMap20;
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test12231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12231");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration10.options = strMap22;
        kerberosUserConfiguration5.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration33.options = strMap40;
        kerberosUserConfiguration28.options = strMap40;
        kerberosUserConfiguration0.setoptions(strMap40);
        java.lang.String str44 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration52.options = strMap59;
        kerberosUserConfiguration47.options = strMap59;
        kerberosUserConfiguration0.setoptions(strMap59);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration63);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration68.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap71);
        kerberosUserConfiguration63.setoptions(strMap71);
        kerberosUserConfiguration0.setoptions(strMap71);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test12232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12232");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters17);
    }

    @Test
    public void test12233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12233");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.setoptions(strMap12);
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters17);
    }

    @Test
    public void test12234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12234");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration4.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
    }

    @Test
    public void test12235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12235");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test12236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12236");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12237");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12238");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12239");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
    }

    @Test
    public void test12240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12240");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12241");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        tSSLTransportParameters22.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12242");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration5.refresh();
        kerberosUserConfiguration5.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration9.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        kerberosUserConfiguration5.options = strMap17;
        kerberosUserConfiguration0.options = strMap17;
        kerberosUserConfiguration0.refresh();
        java.lang.String str22 = kerberosUserConfiguration0.getType();
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.options;
        kerberosUserConfiguration29.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.options = strMap39;
        kerberosUserConfiguration26.setoptions(strMap39);
        java.security.Provider provider42 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration26.options;
        java.security.Provider provider44 = kerberosUserConfiguration26.getProvider();
        java.lang.String str45 = kerberosUserConfiguration26.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str48 = kerberosUserConfiguration46.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration46);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration55.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration50.options = strMap60;
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration50.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray64 = kerberosUserConfiguration50.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration46.options = strMap66;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.options = strMap68;
        kerberosUserConfiguration0.setoptions(strMap68);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration72.refresh();
        java.security.Provider provider74 = kerberosUserConfiguration72.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration72.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration77.refresh();
        java.security.Provider provider79 = kerberosUserConfiguration77.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration82.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration82.getoptions();
        kerberosUserConfiguration77.options = strMap84;
        kerberosUserConfiguration72.options = strMap84;
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration72.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration72.options;
        java.lang.String str89 = kerberosUserConfiguration72.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration72.options;
        kerberosUserConfiguration0.options = strMap90;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(provider79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(parameters87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test12243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12243");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration15.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration15.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration19.refresh();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration26.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration28.refresh();
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration28.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        java.security.Provider provider41 = kerberosUserConfiguration39.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap42);
        kerberosUserConfiguration28.options = strMap42;
        kerberosUserConfiguration26.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration26.getoptions();
        kerberosUserConfiguration19.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration19.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration15.getoptions();
        kerberosUserConfiguration1.options = strMap55;
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test12244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12244");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        tSSLTransportParameters32.setTrustStore("", "", "", "hi!");
        tSSLTransportParameters32.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12245");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        tSSLTransportParameters25.setTrustStore("hi!", "hi!");
        tSSLTransportParameters25.setTrustStore("hi!", "hi!", "hi!", "hi!");
        tSSLTransportParameters25.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12246");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12247");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12248");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getoptions();
        java.lang.String str10 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test12249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12249");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider20 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration0.getParameters();
        java.lang.String str25 = kerberosUserConfiguration0.getType();
        java.lang.String str26 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration32.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.options = strMap37;
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration27.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration27.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration44.refresh();
        java.security.Provider provider46 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration49.refresh();
        java.security.Provider provider51 = kerberosUserConfiguration49.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration54.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration54.getoptions();
        kerberosUserConfiguration49.options = strMap56;
        kerberosUserConfiguration44.options = strMap56;
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration44.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration44.options;
        kerberosUserConfiguration27.setoptions(strMap60);
        java.security.Provider provider62 = kerberosUserConfiguration27.getProvider();
        java.lang.String str63 = kerberosUserConfiguration27.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration27);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration0.options = strMap67;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test12250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12250");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration13.refresh();
        java.security.Provider provider15 = kerberosUserConfiguration13.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap33);
        kerberosUserConfiguration0.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider37 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap48;
        kerberosUserConfiguration38.refresh();
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration38.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration38.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray54 = kerberosUserConfiguration38.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration0.setoptions(strMap55);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray54);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test12251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12251");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10);
        tSSLTransportParameters16.setKeyStore("hi!", "");
        tSSLTransportParameters16.setKeyStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12252");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration14.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap22);
        kerberosUserConfiguration14.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration10.options = strMap25;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getoptions();
        java.security.Provider provider31 = kerberosUserConfiguration28.getProvider();
        java.lang.String str32 = kerberosUserConfiguration28.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        java.security.Provider provider38 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration33.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration28.options = strMap43;
        kerberosUserConfiguration10.options = strMap43;
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration10.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration10.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration10.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration10.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration1.options = strMap52;
        java.security.Provider provider54 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = null;
        kerberosUserConfiguration59.setoptions(strMap60);
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration59.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration67.refresh();
        java.security.Provider provider69 = kerberosUserConfiguration67.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration59.setoptions(strMap70);
        kerberosUserConfiguration59.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider74 = kerberosUserConfiguration59.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters75 = kerberosUserConfiguration59.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration59);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str79 = kerberosUserConfiguration77.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration77);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration82.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration84 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration84.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration82.setoptions(strMap85);
        kerberosUserConfiguration77.setoptions(strMap85);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray89 = kerberosUserConfiguration77.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration77.getoptions();
        kerberosUserConfiguration59.options = strMap90;
        kerberosUserConfiguration56.setoptions(strMap90);
        kerberosUserConfiguration1.options = strMap90;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNull(parameters75);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray89);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test12253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12253");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str3 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider10 = kerberosUserConfiguration6.getProvider();
        java.lang.String str11 = kerberosUserConfiguration6.getType();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration6.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        java.security.Provider provider17 = kerberosUserConfiguration14.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration14.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration6.options = strMap19;
        kerberosUserConfiguration1.setoptions(strMap19);
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration1.getParameters();
        java.lang.String str23 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str28 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str28);
    }

    @Test
    public void test12254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12254");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration16.refresh();
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap30);
        kerberosUserConfiguration16.options = strMap30;
        kerberosUserConfiguration14.options = strMap30;
        kerberosUserConfiguration0.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider38 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
        org.junit.Assert.assertNull(provider38);
    }

    @Test
    public void test12255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12255");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        tSSLTransportParameters26.setKeyStore("hi!", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12256");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
    }

    @Test
    public void test12257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12257");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test12258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12258");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.security.Provider provider36 = kerberosUserConfiguration34.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap37);
        kerberosUserConfiguration26.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        java.lang.String str41 = kerberosUserConfiguration26.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap43;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMap43);
    }

    @Test
    public void test12259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12259");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12260");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12261");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        tSSLTransportParameters31.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12262");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12263");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration7.refresh();
        java.security.Provider provider9 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider25 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration28.getoptions();
        kerberosUserConfiguration23.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap32);
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration1.setoptions(strMap35);
        java.security.Provider provider37 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider37);
    }

    @Test
    public void test12264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12264");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test12265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12265");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, true);
        tSSLTransportParameters16.setKeyStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test12266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12266");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12267");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12268");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.options;
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration2.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration2.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap17);
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        java.security.Provider provider34 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration37.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration37.getoptions();
        kerberosUserConfiguration32.options = strMap39;
        kerberosUserConfiguration27.options = strMap39;
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration27.getParameters();
        java.lang.String str43 = kerberosUserConfiguration27.getType();
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration27.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration22.setoptions(strMap45);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.setoptions(strMap48);
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration47.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration52.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration47.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration66.refresh();
        java.security.Provider provider68 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration71.refresh();
        java.security.Provider provider73 = kerberosUserConfiguration71.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration76.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration76.getoptions();
        kerberosUserConfiguration71.options = strMap78;
        kerberosUserConfiguration66.options = strMap78;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray82 = kerberosUserConfiguration66.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray84 = kerberosUserConfiguration66.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap86);
        kerberosUserConfiguration22.options = strMap86;
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap90);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray82);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray84);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test12269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12269");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test12270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12270");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider11 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration19.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration25.refresh();
        java.lang.String str30 = kerberosUserConfiguration25.getType();
        java.lang.String str31 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap33;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration1.options = strMap37;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration42.refresh();
        java.security.Provider provider44 = kerberosUserConfiguration42.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap45);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration39.getAppConfigurationEntry("");
        java.lang.String str49 = kerberosUserConfiguration39.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration39.getoptions();
        kerberosUserConfiguration1.setoptions(strMap50);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.setoptions(strMap53);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration52.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.setoptions(strMap58);
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration57.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.options = strMap62;
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration52.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray66 = kerberosUserConfiguration52.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str68 = kerberosUserConfiguration52.getType();
        java.lang.String str69 = kerberosUserConfiguration52.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray71 = kerberosUserConfiguration52.getAppConfigurationEntry("hi!");
        java.security.Provider provider72 = kerberosUserConfiguration52.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration52);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray77 = kerberosUserConfiguration75.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray79 = kerberosUserConfiguration75.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.options = strMap81;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration52.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray85 = kerberosUserConfiguration52.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration52.getoptions();
        kerberosUserConfiguration1.options = strMap86;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(parameters64);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray71);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray77);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray85);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test12271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12271");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12272");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        tSSLTransportParameters20.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12273");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.lang.String str16 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test12274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12274");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration1.setoptions(strMap28);
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider34 = kerberosUserConfiguration33.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration39.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration44.refresh();
        java.security.Provider provider46 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap47);
        kerberosUserConfiguration35.options = strMap47;
        kerberosUserConfiguration33.setoptions(strMap47);
        java.security.Provider provider51 = kerberosUserConfiguration33.getProvider();
        java.lang.String str52 = kerberosUserConfiguration33.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray54 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration56.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        java.security.Provider provider59 = kerberosUserConfiguration56.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters60 = kerberosUserConfiguration56.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration56.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration56.options;
        kerberosUserConfiguration33.options = strMap62;
        kerberosUserConfiguration1.setoptions(strMap62);
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNull(parameters60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test12275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12275");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration13.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap20);
        kerberosUserConfiguration1.setoptions(strMap20);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test12276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12276");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        tSSLTransportParameters39.setKeyStore("", "", "hi!", "");
        tSSLTransportParameters39.requireClientAuth(false);
        tSSLTransportParameters39.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12277");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = null;
        kerberosUserConfiguration0.options = strMap2;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test12278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12278");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider10 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test12279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12279");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        java.security.Provider provider26 = kerberosUserConfiguration18.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration32);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        java.security.Provider provider38 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap39);
        kerberosUserConfiguration27.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration47.options = strMap49;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap52);
        kerberosUserConfiguration42.setoptions(strMap52);
        kerberosUserConfiguration27.setoptions(strMap52);
        kerberosUserConfiguration18.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration1.options = strMap57;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray61 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray61);
        org.junit.Assert.assertNull(parameters62);
    }

    @Test
    public void test12280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12280");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters23.setKeyStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters23.setTrustStore("hi!", "");
        tSSLTransportParameters23.setTrustStore("", "", "", "");
        tSSLTransportParameters23.setTrustStore("hi!", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12281");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration13.refresh();
        kerberosUserConfiguration13.refresh();
        kerberosUserConfiguration13.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.options = strMap20;
        java.lang.String str22 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration1.options = strMap25;
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test12282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12282");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration12.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap17);
        kerberosUserConfiguration7.setoptions(strMap17);
        kerberosUserConfiguration0.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration31.refresh();
        java.security.Provider provider33 = kerberosUserConfiguration31.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration36.getoptions();
        kerberosUserConfiguration31.options = strMap38;
        kerberosUserConfiguration26.options = strMap38;
        java.security.Provider provider41 = kerberosUserConfiguration26.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration42.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration45.refresh();
        java.security.Provider provider47 = kerberosUserConfiguration45.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap50);
        kerberosUserConfiguration0.options = strMap50;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
    }

    @Test
    public void test12283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12283");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        tSSLTransportParameters40.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12284");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider10 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test12285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12285");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        tSSLTransportParameters23.setKeyStore("hi!", "", "hi!", "hi!");
        tSSLTransportParameters23.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12286");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12287");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        tSSLTransportParameters25.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters25.setTrustStore("hi!", "hi!", "", "");
        tSSLTransportParameters25.setTrustStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters25.setKeyStore("hi!", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12288");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        tSSLTransportParameters30.setTrustStore("", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12289");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration1.options = strMap16;
        java.security.Provider provider18 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration22.refresh();
        kerberosUserConfiguration22.refresh();
        kerberosUserConfiguration22.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap29;
        java.lang.String str31 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str34 = kerberosUserConfiguration22.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.options;
        java.lang.String str37 = kerberosUserConfiguration35.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration35.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.setoptions(strMap41);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration40.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration48.refresh();
        java.security.Provider provider50 = kerberosUserConfiguration48.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.setoptions(strMap55);
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration54.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration62.refresh();
        java.security.Provider provider64 = kerberosUserConfiguration62.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap65);
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap68);
        kerberosUserConfiguration35.options = strMap68;
        kerberosUserConfiguration22.options = strMap68;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration73.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration73.getoptions();
        kerberosUserConfiguration22.options = strMap76;
        java.security.Provider provider78 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration1.options = strMap79;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
    }

    @Test
    public void test12290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12290");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        tSSLTransportParameters34.setKeyStore("", "");
        tSSLTransportParameters34.requireClientAuth(false);
        tSSLTransportParameters34.setKeyStore("", "");
        tSSLTransportParameters34.setTrustStore("hi!", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12291");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12292");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.Class<?> wildcardClass8 = appConfigurationEntryArray7.getClass();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test12293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12293");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration7.refresh();
        java.security.Provider provider9 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.options = strMap11;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        java.security.Provider provider18 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap19);
        kerberosUserConfiguration1.options = strMap19;
        java.lang.String str22 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
    }

    @Test
    public void test12294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12294");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters9 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8, true);
        tSSLTransportParameters11.setKeyStore("hi!", "", "hi!", "hi!");
        tSSLTransportParameters11.setKeyStore("", "");
        tSSLTransportParameters11.setTrustStore("hi!", "", "hi!", "");
        tSSLTransportParameters11.setKeyStore("hi!", "hi!", "hi!", "");
        tSSLTransportParameters11.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test12295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12295");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7);
        tSSLTransportParameters8.setTrustStore("", "", "hi!", "hi!");
        tSSLTransportParameters8.setTrustStore("", "", "hi!", "");
        tSSLTransportParameters8.setTrustStore("", "", "", "hi!");
        tSSLTransportParameters8.requireClientAuth(false);
        tSSLTransportParameters8.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test12296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12296");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters21.requireClientAuth(false);
        tSSLTransportParameters21.requireClientAuth(true);
        tSSLTransportParameters21.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12297");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        kerberosUserConfiguration7.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration0.getParameters();
        java.lang.String str31 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNull(str31);
    }

    @Test
    public void test12298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12298");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration19.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration19.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        java.security.Provider provider38 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration41.refresh();
        java.security.Provider provider43 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration46.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getoptions();
        kerberosUserConfiguration41.options = strMap48;
        kerberosUserConfiguration36.options = strMap48;
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration36.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration36.options;
        kerberosUserConfiguration19.setoptions(strMap52);
        kerberosUserConfiguration0.options = strMap52;
        java.lang.String str55 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str58 = kerberosUserConfiguration56.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration56);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.setoptions(strMap64);
        kerberosUserConfiguration56.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration56.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration56.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray70 = kerberosUserConfiguration56.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration56.options;
        kerberosUserConfiguration0.options = strMap71;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray70);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test12299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12299");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        tSSLTransportParameters29.setKeyStore("", "hi!");
        tSSLTransportParameters29.requireClientAuth(false);
        tSSLTransportParameters29.setTrustStore("hi!", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12300");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        tSSLTransportParameters23.setTrustStore("hi!", "hi!", "hi!", "");
        tSSLTransportParameters23.requireClientAuth(false);
        tSSLTransportParameters23.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12301");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap9;
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider17 = kerberosUserConfiguration16.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration18.refresh();
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration22.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.setoptions(strMap30);
        kerberosUserConfiguration18.options = strMap30;
        kerberosUserConfiguration16.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration0.options = strMap36;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider39 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.setoptions(strMap41);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration40.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration45.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.options = strMap50;
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration40.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray54 = kerberosUserConfiguration40.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str56 = kerberosUserConfiguration40.getType();
        java.lang.String str57 = kerberosUserConfiguration40.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration40.getAppConfigurationEntry("hi!");
        java.security.Provider provider60 = kerberosUserConfiguration40.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration40);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration62.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration62);
        java.security.Provider provider66 = kerberosUserConfiguration62.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = null;
        kerberosUserConfiguration67.setoptions(strMap68);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration67.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration67.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration74 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = null;
        kerberosUserConfiguration74.setoptions(strMap75);
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration74.options;
        java.lang.String str78 = kerberosUserConfiguration74.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration74.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration67.setoptions(strMap79);
        kerberosUserConfiguration67.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration67.getoptions();
        kerberosUserConfiguration62.options = strMap82;
        kerberosUserConfiguration40.setoptions(strMap82);
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration0.options = strMap85;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray88 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray88);
    }

    @Test
    public void test12302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12302");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration10.options = strMap22;
        kerberosUserConfiguration5.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration33.options = strMap40;
        kerberosUserConfiguration28.options = strMap40;
        kerberosUserConfiguration0.setoptions(strMap40);
        java.lang.String str44 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration52.options = strMap59;
        kerberosUserConfiguration47.options = strMap59;
        kerberosUserConfiguration0.setoptions(strMap59);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration63);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration68.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap71);
        kerberosUserConfiguration63.setoptions(strMap71);
        kerberosUserConfiguration0.setoptions(strMap71);
        java.lang.String str75 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray77 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider78 = kerberosUserConfiguration0.getProvider();
        java.lang.String str79 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray77);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNull(str79);
    }

    @Test
    public void test12303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12303");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12304");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12305");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        tSSLTransportParameters29.setTrustStore("", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12306");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        tSSLTransportParameters30.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12307");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNull(parameters23);
    }

    @Test
    public void test12308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12308");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = null;
        kerberosUserConfiguration0.options = strMap2;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap13);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        java.security.Provider provider17 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test12309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12309");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration18.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration29.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap34);
        kerberosUserConfiguration24.setoptions(strMap34);
        kerberosUserConfiguration18.options = strMap34;
        kerberosUserConfiguration0.setoptions(strMap34);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider44 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider46 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration47.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.setoptions(strMap53);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration52.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.options = strMap57;
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration47.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray61 = kerberosUserConfiguration47.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration47.getoptions();
        java.security.Provider provider63 = kerberosUserConfiguration47.getProvider();
        java.lang.String str64 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration47.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration47.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters67 = kerberosUserConfiguration47.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.setoptions(strMap69);
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration68.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.setoptions(strMap76);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration75.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters82 = kerberosUserConfiguration75.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration75.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap84);
        kerberosUserConfiguration47.options = strMap84;
        kerberosUserConfiguration0.options = strMap84;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNull(parameters67);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(parameters82);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
    }

    @Test
    public void test12310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12310");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12311");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration1.setoptions(strMap7);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider10 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str12 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(parameters14);
    }

    @Test
    public void test12312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12312");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(provider11);
    }

    @Test
    public void test12313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12313");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        tSSLTransportParameters30.requireClientAuth(true);
        tSSLTransportParameters30.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12314");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
    }

    @Test
    public void test12315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12315");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider18 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration7.setoptions(strMap19);
        kerberosUserConfiguration0.options = strMap19;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test12316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12316");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12317");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12318");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters24.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12319");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        tSSLTransportParameters25.setTrustStore("", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12320");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        java.lang.String str8 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str10 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test12321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12321");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration1.options;
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test12322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12322");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        tSSLTransportParameters29.setTrustStore("hi!", "hi!", "hi!", "hi!");
        tSSLTransportParameters29.setKeyStore("hi!", "", "hi!", "");
        tSSLTransportParameters29.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12323");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12324");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        tSSLTransportParameters39.setTrustStore("hi!", "");
        tSSLTransportParameters39.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12325");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration10.options = strMap22;
        kerberosUserConfiguration5.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration33.options = strMap40;
        kerberosUserConfiguration28.options = strMap40;
        kerberosUserConfiguration0.setoptions(strMap40);
        java.lang.String str44 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration52.options = strMap59;
        kerberosUserConfiguration47.options = strMap59;
        kerberosUserConfiguration0.setoptions(strMap59);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration63);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration68.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap71);
        kerberosUserConfiguration63.setoptions(strMap71);
        kerberosUserConfiguration0.setoptions(strMap71);
        java.lang.String str75 = kerberosUserConfiguration0.getType();
        java.lang.String str76 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = null;
        kerberosUserConfiguration0.setoptions(strMap78);
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters81 = kerberosUserConfiguration0.getParameters();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass82 = parameters81.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(parameters81);
    }

    @Test
    public void test12326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12326");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12327");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        java.lang.Class<?> wildcardClass31 = strArray15.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test12328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12328");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration28.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.options = strMap33;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration23.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration39.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration39);
        kerberosUserConfiguration39.refresh();
        java.lang.String str43 = kerberosUserConfiguration39.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.options = strMap44;
        kerberosUserConfiguration0.setoptions(strMap44);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test12329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12329");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12330");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration19.refresh();
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration23.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap31);
        kerberosUserConfiguration19.options = strMap31;
        kerberosUserConfiguration14.options = strMap31;
        kerberosUserConfiguration14.refresh();
        java.lang.String str36 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration14.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap48;
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration38.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray52 = kerberosUserConfiguration38.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration38.getoptions();
        java.security.Provider provider54 = kerberosUserConfiguration38.getProvider();
        java.lang.String str55 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration38.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration14.options = strMap57;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray60 = kerberosUserConfiguration14.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray65 = kerberosUserConfiguration63.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration63);
        java.lang.String str67 = kerberosUserConfiguration63.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration69.refresh();
        java.security.Provider provider71 = kerberosUserConfiguration69.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration69.getoptions();
        kerberosUserConfiguration63.options = strMap73;
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration63.getoptions();
        kerberosUserConfiguration63.refresh();
        javax.security.auth.login.Configuration.Parameters parameters77 = kerberosUserConfiguration63.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap78);
        kerberosUserConfiguration0.options = strMap78;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray65);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(parameters77);
        org.junit.Assert.assertNotNull(strMap78);
    }

    @Test
    public void test12331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12331");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12332");
        java.lang.String[] strArray22 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters41 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters43 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters44 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters45 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters47 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters48 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test12333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12333");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.lang.String str22 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration18.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        java.lang.String str36 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration41.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getoptions();
        java.security.Provider provider44 = kerberosUserConfiguration41.getProvider();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.lang.String str46 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration0.setoptions(strMap47);
        javax.security.auth.login.Configuration.Parameters parameters49 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider53 = kerberosUserConfiguration51.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray55 = kerberosUserConfiguration51.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration51.getoptions();
        kerberosUserConfiguration0.options = strMap57;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider60 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(parameters49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider60);
    }

    @Test
    public void test12334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12334");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        tSSLTransportParameters20.setKeyStore("", "hi!", "", "");
        tSSLTransportParameters20.setKeyStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12335");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test12336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12336");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        tSSLTransportParameters27.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12337");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str20 = kerberosUserConfiguration18.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider25 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider27 = kerberosUserConfiguration23.getProvider();
        java.lang.String str28 = kerberosUserConfiguration23.getType();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration23.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration31.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.getoptions();
        java.security.Provider provider34 = kerberosUserConfiguration31.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration31.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration23.options = strMap36;
        kerberosUserConfiguration18.setoptions(strMap36);
        kerberosUserConfiguration0.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
    }

    @Test
    public void test12338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12338");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.security.Provider provider13 = kerberosUserConfiguration11.getProvider();
        java.security.Provider provider14 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration11.getoptions();
        java.lang.String str19 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap30;
        kerberosUserConfiguration20.refresh();
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration20.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration20.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration20.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration39.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap48;
        kerberosUserConfiguration11.options = strMap48;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap51);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap51);
    }

    @Test
    public void test12339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12339");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.lang.String str10 = kerberosUserConfiguration1.getType();
        java.lang.String str11 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test12340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12340");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider11 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap16;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass21 = appConfigurationEntryArray20.getClass();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test12341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12341");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12342");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration19.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration1.setoptions(strMap22);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.options;
        java.security.Provider provider28 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider28);
    }

    @Test
    public void test12343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12343");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        tSSLTransportParameters17.setKeyStore("hi!", "");
        tSSLTransportParameters17.setTrustStore("", "", "hi!", "");
        tSSLTransportParameters17.setTrustStore("", "");
        tSSLTransportParameters17.requireClientAuth(true);
        tSSLTransportParameters17.setKeyStore("hi!", "hi!", "hi!", "");
        tSSLTransportParameters17.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12344");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        tSSLTransportParameters23.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12345");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration4.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap7);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test12346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12346");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(parameters19);
    }

    @Test
    public void test12347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12347");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        tSSLTransportParameters24.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12348");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test12349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12349");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        tSSLTransportParameters25.setTrustStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12350");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration8.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration8.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        kerberosUserConfiguration14.refresh();
        kerberosUserConfiguration14.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap21;
        java.lang.String str23 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration8.setoptions(strMap25);
        kerberosUserConfiguration0.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test12351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12351");
        java.lang.String[] strArray22 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters41 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters43 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters44 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters45 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters47 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters48 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test12352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12352");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        tSSLTransportParameters19.requireClientAuth(false);
        tSSLTransportParameters19.setKeyStore("hi!", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12353");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test12354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12354");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12355");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration6.options = strMap8;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(parameters16);
    }

    @Test
    public void test12356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12356");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test12357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12357");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12358");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap17);
        kerberosUserConfiguration3.options = strMap17;
        kerberosUserConfiguration1.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap48;
        kerberosUserConfiguration35.setoptions(strMap48);
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap52;
        kerberosUserConfiguration1.setoptions(strMap52);
        java.security.Provider provider55 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters56 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNull(parameters56);
    }

    @Test
    public void test12359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12359");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration6.options = strMap8;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration0.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider25 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.lang.String str27 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test12360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12360");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12361");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7);
        tSSLTransportParameters8.setTrustStore("hi!", "");
        tSSLTransportParameters8.setKeyStore("hi!", "");
        tSSLTransportParameters8.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test12362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12362");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters21.setKeyStore("hi!", "hi!", "hi!", "");
        tSSLTransportParameters21.setKeyStore("", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12363");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        tSSLTransportParameters26.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12364");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration5.refresh();
        kerberosUserConfiguration5.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration12.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration14.refresh();
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration21);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        java.security.Provider provider27 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap28);
        kerberosUserConfiguration14.options = strMap28;
        kerberosUserConfiguration12.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration5.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration5.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap38;
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration46.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.options = strMap51;
        javax.security.auth.login.Configuration.Parameters parameters53 = kerberosUserConfiguration41.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration41);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray56 = kerberosUserConfiguration41.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = null;
        kerberosUserConfiguration57.setoptions(strMap58);
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.options;
        kerberosUserConfiguration57.refresh();
        kerberosUserConfiguration57.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = null;
        kerberosUserConfiguration63.options = strMap65;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration63.setoptions(strMap68);
        kerberosUserConfiguration57.options = strMap68;
        kerberosUserConfiguration41.setoptions(strMap68);
        kerberosUserConfiguration41.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration1.options = strMap73;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(parameters53);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray56);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test12365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12365");
        java.lang.String[] strArray1 = null;
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters2 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray1);
        tSSLTransportParameters2.setKeyStore("", "");
        tSSLTransportParameters2.requireClientAuth(false);
    }

    @Test
    public void test12366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12366");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.options = strMap22;
        kerberosUserConfiguration9.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration26.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration9.setoptions(strMap36);
        kerberosUserConfiguration0.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration46.refresh();
        java.security.Provider provider48 = kerberosUserConfiguration46.getProvider();
        java.lang.String str49 = kerberosUserConfiguration46.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration46);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration52);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.options;
        kerberosUserConfiguration55.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration60.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration55.options = strMap65;
        kerberosUserConfiguration52.setoptions(strMap65);
        kerberosUserConfiguration52.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration52);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = null;
        kerberosUserConfiguration70.setoptions(strMap71);
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration70.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration70.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = null;
        kerberosUserConfiguration77.setoptions(strMap78);
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration77.options;
        java.lang.String str81 = kerberosUserConfiguration77.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration70.setoptions(strMap82);
        kerberosUserConfiguration70.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration70.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap87);
        kerberosUserConfiguration46.setoptions(strMap87);
        kerberosUserConfiguration0.options = strMap87;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
    }

    @Test
    public void test12367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12367");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap17);
        kerberosUserConfiguration3.options = strMap17;
        kerberosUserConfiguration1.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap48;
        kerberosUserConfiguration35.setoptions(strMap48);
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap52;
        kerberosUserConfiguration1.setoptions(strMap52);
        java.security.Provider provider55 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test12368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12368");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        tSSLTransportParameters28.setKeyStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12369");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test12370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12370");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration0.options = strMap8;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test12371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12371");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration30.refresh();
        java.security.Provider provider32 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap33);
        kerberosUserConfiguration21.setoptions(strMap33);
        kerberosUserConfiguration17.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        kerberosUserConfiguration38.refresh();
        java.security.Provider provider44 = kerberosUserConfiguration38.getProvider();
        java.lang.String str45 = kerberosUserConfiguration38.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration47);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration50.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration55.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration50.options = strMap60;
        kerberosUserConfiguration47.setoptions(strMap60);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration67.refresh();
        java.security.Provider provider69 = kerberosUserConfiguration67.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration64.setoptions(strMap70);
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration64.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration64.options;
        kerberosUserConfiguration47.setoptions(strMap74);
        kerberosUserConfiguration38.setoptions(strMap74);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration0.setoptions(strMap81);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test12372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12372");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.lang.String str10 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration13.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration13.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider24 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration13.setoptions(strMap25);
        java.security.Provider provider27 = kerberosUserConfiguration13.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration28.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.options = strMap43;
        java.lang.String str45 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration28.options = strMap46;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        kerberosUserConfiguration48.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.setoptions(strMap54);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration53.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.options = strMap58;
        javax.security.auth.login.Configuration.Parameters parameters60 = kerberosUserConfiguration48.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray62 = kerberosUserConfiguration48.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider64 = kerberosUserConfiguration48.getProvider();
        java.security.Provider provider65 = kerberosUserConfiguration48.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration67.refresh();
        java.security.Provider provider69 = kerberosUserConfiguration67.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration67);
        javax.security.auth.login.Configuration.Parameters parameters71 = kerberosUserConfiguration67.getParameters();
        kerberosUserConfiguration67.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap73);
        kerberosUserConfiguration28.options = strMap73;
        kerberosUserConfiguration13.setoptions(strMap73);
        kerberosUserConfiguration1.options = strMap73;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray79 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(parameters60);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNull(parameters71);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray79);
    }

    @Test
    public void test12373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12373");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters23.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters23.setKeyStore("hi!", "hi!");
        tSSLTransportParameters23.setTrustStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12374");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        tSSLTransportParameters19.setTrustStore("", "");
        tSSLTransportParameters19.setKeyStore("", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12375");
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test12376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12376");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        tSSLTransportParameters31.setKeyStore("", "");
        java.lang.Class<?> wildcardClass35 = tSSLTransportParameters31.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test12377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12377");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str11 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
    }

    @Test
    public void test12378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12378");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(provider13);
    }

    @Test
    public void test12379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12379");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration8.getParameters();
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider21 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider24 = kerberosUserConfiguration17.getProvider();
        java.lang.String str25 = kerberosUserConfiguration17.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        java.security.Provider provider28 = kerberosUserConfiguration17.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration30.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration30);
        java.lang.String str34 = kerberosUserConfiguration30.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        java.security.Provider provider38 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration36.getoptions();
        kerberosUserConfiguration30.options = strMap40;
        kerberosUserConfiguration17.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration8.options = strMap43;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.options = strMap55;
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration45.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration45.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider61 = kerberosUserConfiguration45.getProvider();
        java.security.Provider provider62 = kerberosUserConfiguration45.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration64.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray67 = kerberosUserConfiguration64.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration64.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.options = strMap69;
        kerberosUserConfiguration8.setoptions(strMap69);
        kerberosUserConfiguration0.setoptions(strMap69);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
    }

    @Test
    public void test12380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12380");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getoptions();
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        java.lang.String str19 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration22.getParameters();
        java.lang.String str27 = kerberosUserConfiguration22.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap28;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test12381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12381");
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test12382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12382");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.options = strMap22;
        kerberosUserConfiguration9.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration26.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration9.setoptions(strMap36);
        kerberosUserConfiguration0.setoptions(strMap36);
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration0.getParameters();
        java.lang.String str40 = kerberosUserConfiguration0.getType();
        java.security.Provider provider41 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNull(provider41);
    }

    @Test
    public void test12383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12383");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration10.options = strMap22;
        kerberosUserConfiguration5.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration33.options = strMap40;
        kerberosUserConfiguration28.options = strMap40;
        kerberosUserConfiguration0.setoptions(strMap40);
        java.lang.String str44 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration52.options = strMap59;
        kerberosUserConfiguration47.options = strMap59;
        kerberosUserConfiguration0.setoptions(strMap59);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration63);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration68.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap71);
        kerberosUserConfiguration63.setoptions(strMap71);
        kerberosUserConfiguration0.setoptions(strMap71);
        java.lang.String str75 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray77 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider78 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray77);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(strMap79);
    }

    @Test
    public void test12384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12384");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider6);
    }

    @Test
    public void test12385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12385");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration7.options = strMap9;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration7.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap24);
        java.lang.String str26 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getoptions();
        java.lang.Class<?> wildcardClass28 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test12386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12386");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test12387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12387");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        tSSLTransportParameters16.setKeyStore("hi!", "", "hi!", "hi!");
        tSSLTransportParameters16.setKeyStore("", "hi!", "", "hi!");
        tSSLTransportParameters16.setTrustStore("hi!", "hi!");
        tSSLTransportParameters16.setTrustStore("", "hi!");
        tSSLTransportParameters16.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters16.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12388");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12389");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12390");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration19.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration19.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration25.refresh();
        java.lang.String str31 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.options;
        java.lang.String str36 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration34.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.setoptions(strMap54);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration53.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration61.refresh();
        java.security.Provider provider63 = kerberosUserConfiguration61.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration61.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap67);
        kerberosUserConfiguration34.options = strMap67;
        kerberosUserConfiguration19.options = strMap67;
        kerberosUserConfiguration0.options = strMap67;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test12391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12391");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, true);
        tSSLTransportParameters19.setTrustStore("", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12392");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test12393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12393");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters23.setTrustStore("", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12394");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str8 = kerberosUserConfiguration6.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap18);
        kerberosUserConfiguration10.setoptions(strMap18);
        kerberosUserConfiguration6.options = strMap18;
        kerberosUserConfiguration0.setoptions(strMap18);
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider23);
    }

    @Test
    public void test12395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12395");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(parameters5);
    }

    @Test
    public void test12396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12396");
        java.lang.String[] strArray27 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray27, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters41 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray27, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters43 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters44 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters45 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters46 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters47 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters48 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters50 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray27, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters51 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters52 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters54 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters56 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray27, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters57 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray27);
        java.lang.Class<?> wildcardClass58 = strArray27.getClass();
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(wildcardClass58);
    }

    @Test
    public void test12397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12397");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider10 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test12398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12398");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap21);
        kerberosUserConfiguration9.setoptions(strMap21);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration29.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap34);
        kerberosUserConfiguration24.setoptions(strMap34);
        kerberosUserConfiguration9.setoptions(strMap34);
        kerberosUserConfiguration0.options = strMap34;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration39.refresh();
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration39.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.options;
        java.lang.String str46 = kerberosUserConfiguration44.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration53);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap60);
        kerberosUserConfiguration48.setoptions(strMap60);
        kerberosUserConfiguration44.options = strMap60;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration44.options;
        kerberosUserConfiguration39.setoptions(strMap64);
        kerberosUserConfiguration0.options = strMap64;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration68);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration72.refresh();
        java.security.Provider provider74 = kerberosUserConfiguration72.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration72.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap75);
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration68.options;
        java.lang.String str78 = kerberosUserConfiguration68.getType();
        kerberosUserConfiguration68.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap80;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration84 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration84.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray87 = kerberosUserConfiguration84.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration84.options;
        kerberosUserConfiguration0.options = strMap88;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray87);
        org.junit.Assert.assertNotNull(strMap88);
    }

    @Test
    public void test12399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12399");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12400");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str8 = kerberosUserConfiguration1.getType();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test12401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12401");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration22.options = strMap29;
        kerberosUserConfiguration17.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap33);
        java.security.Provider provider35 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray40 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        java.lang.String str42 = kerberosUserConfiguration0.getType();
        java.lang.String str43 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test12402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12402");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12403");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str14 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration16.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration1.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        java.security.Provider provider27 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider29 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap31);
        java.lang.String str33 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(str33);
    }

    @Test
    public void test12404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12404");
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters41 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test12405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12405");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration7.refresh();
        kerberosUserConfiguration7.refresh();
        kerberosUserConfiguration7.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap14;
        java.lang.String str16 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration7.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration1.setoptions(strMap18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        java.security.Provider provider24 = kerberosUserConfiguration21.getProvider();
        java.lang.String str25 = kerberosUserConfiguration21.getType();
        java.lang.String str26 = kerberosUserConfiguration21.getType();
        java.lang.String str27 = kerberosUserConfiguration21.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.options = strMap38;
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration28.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray42 = kerberosUserConfiguration28.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str44 = kerberosUserConfiguration28.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration21.options = strMap46;
        java.lang.String str48 = kerberosUserConfiguration21.getType();
        javax.security.auth.login.Configuration.Parameters parameters49 = kerberosUserConfiguration21.getParameters();
        java.security.Provider provider50 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration1.setoptions(strMap51);
        java.lang.Class<?> wildcardClass53 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(parameters49);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(wildcardClass53);
    }

    @Test
    public void test12406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12406");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9);
        tSSLTransportParameters14.setTrustStore("", "hi!", "", "hi!");
        tSSLTransportParameters14.setTrustStore("hi!", "hi!");
        tSSLTransportParameters14.setTrustStore("", "", "hi!", "");
        java.lang.Class<?> wildcardClass28 = tSSLTransportParameters14.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test12407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12407");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12408");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.lang.String str22 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration18.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration40.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration40);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration43.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.options = strMap53;
        kerberosUserConfiguration40.setoptions(strMap53);
        kerberosUserConfiguration40.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration40.getoptions();
        kerberosUserConfiguration0.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray62 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray62);
        org.junit.Assert.assertNotNull(strMap63);
    }

    @Test
    public void test12409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12409");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
    }

    @Test
    public void test12410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12410");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12411");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12412");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12413");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str8 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration9.setoptions(strMap11);
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        java.lang.String str25 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap26);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider37 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str39 = kerberosUserConfiguration33.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration43.refresh();
        java.security.Provider provider45 = kerberosUserConfiguration43.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration48.refresh();
        java.security.Provider provider50 = kerberosUserConfiguration48.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration53.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration53.getoptions();
        kerberosUserConfiguration48.options = strMap55;
        kerberosUserConfiguration43.options = strMap55;
        javax.security.auth.login.Configuration.Parameters parameters58 = kerberosUserConfiguration43.getParameters();
        java.lang.String str59 = kerberosUserConfiguration43.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap63);
        kerberosUserConfiguration1.options = strMap63;
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(parameters58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
    }

    @Test
    public void test12414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12414");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        tSSLTransportParameters24.setKeyStore("hi!", "", "hi!", "hi!");
        tSSLTransportParameters24.setTrustStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters24.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12415");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12416");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12417");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        java.security.Provider provider16 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.options = strMap31;
        kerberosUserConfiguration18.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.options = strMap41;
        kerberosUserConfiguration1.options = strMap41;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider45 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test12418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12418");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.lang.String str10 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(parameters13);
    }

    @Test
    public void test12419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12419");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration5.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap10);
        kerberosUserConfiguration0.setoptions(strMap10);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration0.setoptions(strMap18);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test12420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12420");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        tSSLTransportParameters29.setTrustStore("", "", "", "hi!");
        tSSLTransportParameters29.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12421");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        java.security.Provider provider13 = kerberosUserConfiguration10.getProvider();
        java.lang.String str14 = kerberosUserConfiguration10.getType();
        java.lang.String str15 = kerberosUserConfiguration10.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration10.setoptions(strMap21);
        java.security.Provider provider23 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration1.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration1.getoptions();
        java.lang.Class<?> wildcardClass27 = strMap26.getClass();
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test12422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12422");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        tSSLTransportParameters14.setTrustStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters14.setKeyStore("", "hi!");
        tSSLTransportParameters14.setTrustStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test12423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12423");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        tSSLTransportParameters22.setTrustStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12424");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        tSSLTransportParameters29.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters29.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters29.setKeyStore("", "", "", "");
        tSSLTransportParameters29.setTrustStore("hi!", "");
        tSSLTransportParameters29.setTrustStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12425");
        java.lang.String[] strArray23 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters41 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters43 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters44 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters45 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters47 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23, false);
        org.junit.Assert.assertNotNull(strArray23);
    }

    @Test
    public void test12426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12426");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap10;
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test12427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12427");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap20;
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider24 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(provider24);
    }

    @Test
    public void test12428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12428");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        tSSLTransportParameters23.setKeyStore("", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12429");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider11 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider12 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(parameters13);
    }

    @Test
    public void test12430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12430");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        tSSLTransportParameters21.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12431");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        java.security.Provider provider12 = kerberosUserConfiguration9.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.options = strMap25;
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration15.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration15.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        java.security.Provider provider34 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration37.refresh();
        java.security.Provider provider39 = kerberosUserConfiguration37.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration42.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.getoptions();
        kerberosUserConfiguration37.options = strMap44;
        kerberosUserConfiguration32.options = strMap44;
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration32.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration32.options;
        kerberosUserConfiguration15.setoptions(strMap48);
        kerberosUserConfiguration9.setoptions(strMap48);
        kerberosUserConfiguration1.options = strMap48;
        java.security.Provider provider52 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray55 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.String str56 = kerberosUserConfiguration1.getType();
        java.security.Provider provider57 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(provider57);
    }

    @Test
    public void test12432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12432");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        tSSLTransportParameters21.setTrustStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters21.setTrustStore("", "");
        tSSLTransportParameters21.setTrustStore("", "", "hi!", "hi!");
        tSSLTransportParameters21.setKeyStore("", "hi!", "", "");
        tSSLTransportParameters21.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12433");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12434");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.security.Provider provider17 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider20 = kerberosUserConfiguration1.getProvider();
        java.lang.String str21 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test12435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12435");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12436");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "", "hi!", "hi!", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray7);
        tSSLTransportParameters8.setKeyStore("hi!", "hi!");
        tSSLTransportParameters8.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test12437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12437");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test12438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12438");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration10.options = strMap22;
        kerberosUserConfiguration5.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        java.security.Provider provider27 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test12439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12439");
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        tSSLTransportParameters15.requireClientAuth(false);
        tSSLTransportParameters15.setKeyStore("", "hi!", "", "");
        tSSLTransportParameters15.setTrustStore("", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test12440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12440");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider25 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap26);
        kerberosUserConfiguration14.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap31);
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters33);
    }

    @Test
    public void test12441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12441");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration0.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap17);
    }

    @Test
    public void test12442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12442");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration1.options = strMap8;
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test12443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12443");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration15.refresh();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration22.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.setoptions(strMap38);
        kerberosUserConfiguration24.options = strMap38;
        kerberosUserConfiguration22.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration22.getoptions();
        kerberosUserConfiguration15.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider47 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider51 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(strMap52);
    }

    @Test
    public void test12444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12444");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test12445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12445");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        tSSLTransportParameters24.setKeyStore("hi!", "");
        tSSLTransportParameters24.setTrustStore("", "hi!");
        tSSLTransportParameters24.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12446");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        kerberosUserConfiguration7.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration0.options = strMap30;
        java.security.Provider provider32 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        java.security.Provider provider38 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration33.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration33);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration33.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.setoptions(strMap46);
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration45.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration50.refresh();
        java.security.Provider provider52 = kerberosUserConfiguration50.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration55.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration55.getoptions();
        kerberosUserConfiguration50.options = strMap57;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration33.setoptions(strMap61);
        kerberosUserConfiguration0.options = strMap61;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider65 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider67 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider68 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNull(provider68);
    }

    @Test
    public void test12447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12447");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = null;
        kerberosUserConfiguration0.options = strMap2;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration5.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.options = strMap15;
        java.lang.String str17 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration0.options = strMap18;
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration0.options = strMap23;
        java.security.Provider provider25 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNull(provider25);
    }

    @Test
    public void test12448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12448");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        tSSLTransportParameters22.requireClientAuth(true);
        tSSLTransportParameters22.setKeyStore("", "hi!");
        tSSLTransportParameters22.setKeyStore("", "hi!", "", "hi!");
        tSSLTransportParameters22.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12449");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider22 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider26 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test12450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12450");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters34);
    }

    @Test
    public void test12451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12451");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        tSSLTransportParameters38.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12452");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        tSSLTransportParameters14.setKeyStore("hi!", "hi!");
        tSSLTransportParameters14.requireClientAuth(true);
        tSSLTransportParameters14.setTrustStore("hi!", "");
        tSSLTransportParameters14.setTrustStore("", "", "hi!", "hi!");
        tSSLTransportParameters14.setKeyStore("hi!", "hi!", "hi!", "");
        tSSLTransportParameters14.requireClientAuth(false);
        tSSLTransportParameters14.requireClientAuth(false);
        tSSLTransportParameters14.setTrustStore("hi!", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test12453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12453");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap17;
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration7.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration24.refresh();
        java.security.Provider provider26 = kerberosUserConfiguration24.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration29.options = strMap36;
        kerberosUserConfiguration24.options = strMap36;
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration7.setoptions(strMap40);
        kerberosUserConfiguration1.setoptions(strMap40);
        java.security.Provider provider43 = kerberosUserConfiguration1.getProvider();
        java.lang.String str44 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration1.options;
        java.security.Provider provider46 = kerberosUserConfiguration1.getProvider();
        java.lang.String str47 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNull(str47);
    }

    @Test
    public void test12454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12454");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        java.lang.String str19 = kerberosUserConfiguration15.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration0.setoptions(strMap22);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test12455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12455");
        java.lang.String[] strArray22 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters41 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters43 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters45 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters46 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test12456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12456");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12457");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap19;
        java.lang.String str21 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.setoptions(strMap22);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test12458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12458");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration31.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.getoptions();
        kerberosUserConfiguration26.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider36 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        java.security.Provider provider42 = kerberosUserConfiguration39.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.options = strMap55;
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration45.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration45.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration62.refresh();
        java.security.Provider provider64 = kerberosUserConfiguration62.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration67.refresh();
        java.security.Provider provider69 = kerberosUserConfiguration67.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration72.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration72.getoptions();
        kerberosUserConfiguration67.options = strMap74;
        kerberosUserConfiguration62.options = strMap74;
        javax.security.auth.login.Configuration.Parameters parameters77 = kerberosUserConfiguration62.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration62.options;
        kerberosUserConfiguration45.setoptions(strMap78);
        kerberosUserConfiguration39.setoptions(strMap78);
        kerberosUserConfiguration26.options = strMap78;
        kerberosUserConfiguration19.setoptions(strMap78);
        kerberosUserConfiguration0.setoptions(strMap78);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(parameters77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap85);
    }

    @Test
    public void test12459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12459");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration5.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap10);
        kerberosUserConfiguration0.setoptions(strMap10);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test12460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12460");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str11 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test12461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12461");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap6);
    }

    @Test
    public void test12462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12462");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider12 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider13 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(provider13);
    }

    @Test
    public void test12463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12463");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        tSSLTransportParameters21.requireClientAuth(true);
        tSSLTransportParameters21.setTrustStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12464");
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray21, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters41 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray21);
        org.junit.Assert.assertNotNull(strArray21);
    }

    @Test
    public void test12465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12465");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.setoptions(strMap21);
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration20.getParameters();
        kerberosUserConfiguration20.refresh();
        java.lang.String str25 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration31.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration36.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.options = strMap41;
        kerberosUserConfiguration28.setoptions(strMap41);
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration28.getoptions();
        kerberosUserConfiguration20.options = strMap46;
        kerberosUserConfiguration0.options = strMap46;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
    }

    @Test
    public void test12466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12466");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = null;
        kerberosUserConfiguration0.options = strMap2;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration10.refresh();
        java.security.Provider provider12 = kerberosUserConfiguration10.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration21);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.options = strMap34;
        kerberosUserConfiguration21.setoptions(strMap34);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.security.Provider provider40 = kerberosUserConfiguration38.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration21.options = strMap42;
        java.security.Provider provider44 = kerberosUserConfiguration21.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray46 = kerberosUserConfiguration21.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getoptions();
        java.lang.String str51 = kerberosUserConfiguration47.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap52);
        kerberosUserConfiguration0.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap55);
    }

    @Test
    public void test12467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12467");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        tSSLTransportParameters21.setKeyStore("hi!", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12468");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test12469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12469");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        tSSLTransportParameters25.setKeyStore("", "", "", "");
        tSSLTransportParameters25.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12470");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        java.lang.Class<?> wildcardClass27 = strArray14.getClass();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test12471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12471");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration13.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.options = strMap26;
        kerberosUserConfiguration13.setoptions(strMap26);
        kerberosUserConfiguration13.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap30;
        java.lang.String str32 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters34);
    }

    @Test
    public void test12472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12472");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        tSSLTransportParameters35.setKeyStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12473");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test12474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12474");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        tSSLTransportParameters33.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test12475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12475");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        tSSLTransportParameters17.requireClientAuth(true);
        tSSLTransportParameters17.requireClientAuth(true);
        tSSLTransportParameters17.setTrustStore("hi!", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test12476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12476");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap17;
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration7.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration7.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        java.security.Provider provider25 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.setoptions(strMap26);
        java.security.Provider provider28 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(provider28);
    }

    @Test
    public void test12477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12477");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration4.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        java.lang.String str20 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap21);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration0.setoptions(strMap24);
        java.security.Provider provider26 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str30 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test12478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12478");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters10);
    }

    @Test
    public void test12479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12479");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        java.security.Provider provider18 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration13.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration13.options;
        kerberosUserConfiguration0.setoptions(strMap23);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap31);
        java.security.Provider provider33 = kerberosUserConfiguration25.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration34.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration43.refresh();
        java.security.Provider provider45 = kerberosUserConfiguration43.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap46);
        kerberosUserConfiguration34.setoptions(strMap46);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = null;
        kerberosUserConfiguration49.setoptions(strMap50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.options;
        kerberosUserConfiguration49.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration54.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration54.options = strMap56;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration58.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.setoptions(strMap59);
        kerberosUserConfiguration49.setoptions(strMap59);
        kerberosUserConfiguration34.setoptions(strMap59);
        kerberosUserConfiguration25.options = strMap59;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration64.refresh();
        kerberosUserConfiguration64.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration64.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters68 = kerberosUserConfiguration64.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration69.options;
        java.lang.String str71 = kerberosUserConfiguration69.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration69.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = null;
        kerberosUserConfiguration73.setoptions(strMap74);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration73.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration73.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration78.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration78);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration82.refresh();
        java.security.Provider provider84 = kerberosUserConfiguration82.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration82.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration78.setoptions(strMap85);
        kerberosUserConfiguration73.setoptions(strMap85);
        kerberosUserConfiguration69.options = strMap85;
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration69.options;
        kerberosUserConfiguration64.setoptions(strMap89);
        kerberosUserConfiguration25.options = strMap89;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray93 = kerberosUserConfiguration25.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap94 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration0.options = strMap94;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNull(parameters68);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(provider84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray93);
        org.junit.Assert.assertNotNull(strMap94);
    }

    @Test
    public void test12480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12480");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        java.security.Provider provider9 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration6.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.options = strMap22;
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration12.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration12.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.security.Provider provider36 = kerberosUserConfiguration34.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        kerberosUserConfiguration34.options = strMap41;
        kerberosUserConfiguration29.options = strMap41;
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration29.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration29.options;
        kerberosUserConfiguration12.setoptions(strMap45);
        kerberosUserConfiguration6.setoptions(strMap45);
        kerberosUserConfiguration0.options = strMap45;
        java.security.Provider provider49 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration51.refresh();
        java.security.Provider provider53 = kerberosUserConfiguration51.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider55 = kerberosUserConfiguration51.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration57.refresh();
        kerberosUserConfiguration57.refresh();
        kerberosUserConfiguration57.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration57);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration57.options = strMap64;
        java.lang.String str66 = kerberosUserConfiguration57.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration51.options = strMap67;
        kerberosUserConfiguration0.options = strMap67;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider55);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test12481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12481");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration16.refresh();
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap30);
        kerberosUserConfiguration16.options = strMap30;
        kerberosUserConfiguration14.options = strMap30;
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration7.setoptions(strMap34);
        kerberosUserConfiguration1.options = strMap34;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str41 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test12482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12482");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray4 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration6.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap22);
        kerberosUserConfiguration8.options = strMap22;
        kerberosUserConfiguration6.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration6.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration32.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.options = strMap37;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration40.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration40);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration43.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.options = strMap53;
        kerberosUserConfiguration40.setoptions(strMap53);
        kerberosUserConfiguration40.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.options = strMap57;
        kerberosUserConfiguration6.setoptions(strMap57);
        java.security.Provider provider60 = kerberosUserConfiguration6.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray64 = kerberosUserConfiguration62.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration62.options;
        kerberosUserConfiguration6.setoptions(strMap65);
        kerberosUserConfiguration1.setoptions(strMap65);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = null;
        kerberosUserConfiguration73.setoptions(strMap74);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration73.options;
        kerberosUserConfiguration73.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = null;
        kerberosUserConfiguration78.setoptions(strMap79);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration78.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration78.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration78.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration73.options = strMap83;
        javax.security.auth.login.Configuration.Parameters parameters85 = kerberosUserConfiguration73.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray87 = kerberosUserConfiguration73.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration73.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str89 = kerberosUserConfiguration73.getType();
        java.lang.String str90 = kerberosUserConfiguration73.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray92 = kerberosUserConfiguration73.getAppConfigurationEntry("hi!");
        java.security.Provider provider93 = kerberosUserConfiguration73.getProvider();
        kerberosUserConfiguration73.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration73.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap96 = kerberosUserConfiguration73.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap97 = kerberosUserConfiguration73.getoptions();
        kerberosUserConfiguration1.setoptions(strMap97);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray4);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(parameters85);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray92);
        org.junit.Assert.assertNull(provider93);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(strMap96);
        org.junit.Assert.assertNotNull(strMap97);
    }

    @Test
    public void test12483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12483");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters25.setTrustStore("hi!", "");
        tSSLTransportParameters25.requireClientAuth(false);
        tSSLTransportParameters25.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test12484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12484");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        java.lang.Class<?> wildcardClass31 = strArray16.getClass();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test12485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12485");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.lang.String str18 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap19);
        kerberosUserConfiguration1.setoptions(strMap19);
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration28.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.options = strMap33;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration23.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration23.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration23.getoptions();
        java.security.Provider provider39 = kerberosUserConfiguration23.getProvider();
        java.lang.String str40 = kerberosUserConfiguration23.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration1.options = strMap41;
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray46 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration1.getParameters();
        java.lang.String str49 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNull(str49);
    }

    @Test
    public void test12486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12486");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        tSSLTransportParameters33.setKeyStore("", "", "", "");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test12487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12487");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12488");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        tSSLTransportParameters19.requireClientAuth(true);
        tSSLTransportParameters19.setTrustStore("hi!", "hi!");
        tSSLTransportParameters19.setTrustStore("", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12489");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test12490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12490");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration13.refresh();
        java.security.Provider provider15 = kerberosUserConfiguration13.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration18.options = strMap25;
        kerberosUserConfiguration13.options = strMap25;
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration13.getParameters();
        java.lang.String str29 = kerberosUserConfiguration13.getType();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration13.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration13.options;
        kerberosUserConfiguration8.setoptions(strMap31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration33.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.security.Provider provider40 = kerberosUserConfiguration38.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration43.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration43.getoptions();
        kerberosUserConfiguration38.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration62.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration62.getoptions();
        kerberosUserConfiguration57.options = strMap64;
        kerberosUserConfiguration52.options = strMap64;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray68 = kerberosUserConfiguration52.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray70 = kerberosUserConfiguration52.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap72);
        kerberosUserConfiguration8.options = strMap72;
        kerberosUserConfiguration0.options = strMap72;
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray68);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray70);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test12491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12491");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        java.security.Provider provider12 = kerberosUserConfiguration9.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration9.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration1.options = strMap14;
        java.lang.String str16 = kerberosUserConfiguration1.getType();
        java.security.Provider provider17 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
    }

    @Test
    public void test12492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12492");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        tSSLTransportParameters26.setKeyStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters26.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test12493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12493");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap17;
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration7.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray24 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
    }

    @Test
    public void test12494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12494");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider20 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
    }

    @Test
    public void test12495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12495");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration10.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.options;
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration18.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.options = strMap23;
        kerberosUserConfiguration10.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration30.refresh();
        java.security.Provider provider32 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration27.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration10.setoptions(strMap37);
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration41.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration44.refresh();
        java.security.Provider provider46 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration41.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.options = strMap49;
        kerberosUserConfiguration1.options = strMap49;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test12496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12496");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, true);
        tSSLTransportParameters20.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test12497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12497");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters9 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8, true);
        tSSLTransportParameters11.setKeyStore("hi!", "");
        tSSLTransportParameters11.setTrustStore("", "hi!");
        tSSLTransportParameters11.setKeyStore("", "", "hi!", "hi!");
        tSSLTransportParameters11.setTrustStore("hi!", "hi!");
        tSSLTransportParameters11.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test12498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12498");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        tSSLTransportParameters23.setKeyStore("", "", "", "hi!");
        tSSLTransportParameters23.setKeyStore("hi!", "hi!");
        tSSLTransportParameters23.setTrustStore("", "hi!", "", "hi!");
        tSSLTransportParameters23.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test12499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12499");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.lang.String str22 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration18.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider37 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray39 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray39);
    }

    @Test
    public void test12500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest24.test12500");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider13 = kerberosUserConfiguration9.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str20 = kerberosUserConfiguration18.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap26);
        kerberosUserConfiguration18.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration14.options = strMap29;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration31.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration36.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.options = strMap41;
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration31.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray45 = kerberosUserConfiguration31.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration31.getoptions();
        kerberosUserConfiguration14.setoptions(strMap46);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration14.options;
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration14.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap51;
        kerberosUserConfiguration1.setoptions(strMap51);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNotNull(strMap51);
    }
}

