import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest18 {

    public static boolean debug = false;

    @Test
    public void test09001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09001");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration22.options = strMap29;
        kerberosUserConfiguration17.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap33);
        java.security.Provider provider35 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray40 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass43 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(wildcardClass43);
    }

    @Test
    public void test09002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09002");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration1.setoptions(strMap28);
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.options;
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration32.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration32.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration38.refresh();
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        java.lang.String str44 = kerberosUserConfiguration38.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.options = strMap45;
        kerberosUserConfiguration1.options = strMap45;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration56.refresh();
        java.security.Provider provider58 = kerberosUserConfiguration56.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = null;
        kerberosUserConfiguration62.setoptions(strMap63);
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration62.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration62.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration70.refresh();
        java.security.Provider provider72 = kerberosUserConfiguration70.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap76);
        kerberosUserConfiguration1.setoptions(strMap76);
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider80 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(provider72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(provider80);
    }

    @Test
    public void test09003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09003");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration16.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration28.options = strMap30;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration23.setoptions(strMap33);
        kerberosUserConfiguration16.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration0.setoptions(strMap37);
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.lang.String str41 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str41);
    }

    @Test
    public void test09004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09004");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        tSSLTransportParameters24.setTrustStore("hi!", "", "", "");
        tSSLTransportParameters24.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09005");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        tSSLTransportParameters25.setTrustStore("hi!", "hi!", "", "");
        tSSLTransportParameters25.setTrustStore("", "", "", "hi!");
        tSSLTransportParameters25.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09006");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters24.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters24.setKeyStore("hi!", "", "hi!", "hi!");
        tSSLTransportParameters24.setTrustStore("", "hi!", "hi!", "");
        tSSLTransportParameters24.setKeyStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09007");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        tSSLTransportParameters29.setKeyStore("hi!", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09008");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration1.getParameters();
        java.lang.String str11 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(str11);
    }

    @Test
    public void test09009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09009");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10);
        tSSLTransportParameters16.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09010");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        tSSLTransportParameters26.setKeyStore("", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09011");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.options = strMap18;
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration8.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration8.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration6.options = strMap23;
        kerberosUserConfiguration1.setoptions(strMap23);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNull(parameters29);
    }

    @Test
    public void test09012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09012");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.options = strMap16;
        kerberosUserConfiguration0.options = strMap16;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration0.options = strMap24;
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test09013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09013");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration1.options = strMap22;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider26 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test09014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09014");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        java.lang.Class<?> wildcardClass24 = tSSLTransportParameters23.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test09015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09015");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap17);
        kerberosUserConfiguration3.options = strMap17;
        kerberosUserConfiguration1.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        java.security.Provider provider27 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration30.refresh();
        java.security.Provider provider32 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration35.getoptions();
        kerberosUserConfiguration30.options = strMap37;
        kerberosUserConfiguration25.options = strMap37;
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration25.getParameters();
        kerberosUserConfiguration25.refresh();
        kerberosUserConfiguration25.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration25.getoptions();
        kerberosUserConfiguration1.options = strMap43;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration46.refresh();
        java.security.Provider provider48 = kerberosUserConfiguration46.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider50 = kerberosUserConfiguration46.getProvider();
        java.lang.String str51 = kerberosUserConfiguration46.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration46);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration54.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration54);
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration54.getParameters();
        kerberosUserConfiguration54.refresh();
        kerberosUserConfiguration54.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.setoptions(strMap60);
        kerberosUserConfiguration1.setoptions(strMap60);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str64 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(str64);
    }

    @Test
    public void test09016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09016");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09017");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider7 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(provider7);
    }

    @Test
    public void test09018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09018");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
    }

    @Test
    public void test09019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09019");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.options;
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration2.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        kerberosUserConfiguration12.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration16.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap24);
        kerberosUserConfiguration12.options = strMap24;
        kerberosUserConfiguration7.options = strMap24;
        kerberosUserConfiguration2.options = strMap24;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration30.refresh();
        java.security.Provider provider32 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration40.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.getoptions();
        kerberosUserConfiguration35.options = strMap42;
        kerberosUserConfiguration30.options = strMap42;
        kerberosUserConfiguration2.setoptions(strMap42);
        java.lang.String str46 = kerberosUserConfiguration2.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration49.refresh();
        java.security.Provider provider51 = kerberosUserConfiguration49.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration54.refresh();
        java.security.Provider provider56 = kerberosUserConfiguration54.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration59.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration59.getoptions();
        kerberosUserConfiguration54.options = strMap61;
        kerberosUserConfiguration49.options = strMap61;
        kerberosUserConfiguration2.setoptions(strMap61);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str67 = kerberosUserConfiguration65.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration65);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration70.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration72.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration70.setoptions(strMap73);
        kerberosUserConfiguration65.setoptions(strMap73);
        kerberosUserConfiguration2.setoptions(strMap73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration2.options;
        kerberosUserConfiguration0.setoptions(strMap77);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray80 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray80);
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test09020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09020");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9);
        tSSLTransportParameters14.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters14.setKeyStore("", "", "hi!", "");
        tSSLTransportParameters14.setTrustStore("", "hi!");
        tSSLTransportParameters14.setTrustStore("", "hi!", "", "");
        tSSLTransportParameters14.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test09021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09021");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09022");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        tSSLTransportParameters35.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09023");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        tSSLTransportParameters33.requireClientAuth(true);
        tSSLTransportParameters33.setTrustStore("", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09024");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10);
        tSSLTransportParameters17.setTrustStore("", "");
        tSSLTransportParameters17.requireClientAuth(false);
        tSSLTransportParameters17.setTrustStore("", "hi!");
        tSSLTransportParameters17.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09025");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap7;
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test09026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09026");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.security.Provider provider13 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration24.refresh();
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration28.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap36);
        kerberosUserConfiguration24.options = strMap36;
        kerberosUserConfiguration19.options = strMap36;
        kerberosUserConfiguration19.refresh();
        java.lang.String str41 = kerberosUserConfiguration19.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration19.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration43.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.options = strMap53;
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration43.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray57 = kerberosUserConfiguration43.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration43.getoptions();
        java.security.Provider provider59 = kerberosUserConfiguration43.getProvider();
        java.lang.String str60 = kerberosUserConfiguration43.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration19.options = strMap62;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray65 = kerberosUserConfiguration19.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration0.options = strMap66;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test09027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09027");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        tSSLTransportParameters26.setKeyStore("hi!", "");
        tSSLTransportParameters26.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09028");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09029");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09030");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration16.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration16.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap21);
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider27 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters29);
    }

    @Test
    public void test09031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09031");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        kerberosUserConfiguration7.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration31.refresh();
        kerberosUserConfiguration31.refresh();
        kerberosUserConfiguration31.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.options = strMap38;
        java.lang.String str40 = kerberosUserConfiguration31.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration31.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str43 = kerberosUserConfiguration31.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.options;
        java.lang.String str46 = kerberosUserConfiguration44.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.options;
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration44.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = null;
        kerberosUserConfiguration49.setoptions(strMap50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration49.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap60);
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration63.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration71.refresh();
        java.security.Provider provider73 = kerberosUserConfiguration71.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration63.setoptions(strMap74);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap77);
        kerberosUserConfiguration44.options = strMap77;
        kerberosUserConfiguration31.options = strMap77;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration82.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration82);
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration82.getoptions();
        kerberosUserConfiguration31.options = strMap85;
        java.security.Provider provider87 = kerberosUserConfiguration31.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration0.options = strMap88;
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration0.options;
        java.lang.String str91 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test09032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09032");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration31.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.getoptions();
        kerberosUserConfiguration26.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider36 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        java.security.Provider provider42 = kerberosUserConfiguration39.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration50.setoptions(strMap51);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration50.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.options = strMap55;
        javax.security.auth.login.Configuration.Parameters parameters57 = kerberosUserConfiguration45.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration45.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration62.refresh();
        java.security.Provider provider64 = kerberosUserConfiguration62.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration67.refresh();
        java.security.Provider provider69 = kerberosUserConfiguration67.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration72.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration72.getoptions();
        kerberosUserConfiguration67.options = strMap74;
        kerberosUserConfiguration62.options = strMap74;
        javax.security.auth.login.Configuration.Parameters parameters77 = kerberosUserConfiguration62.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration62.options;
        kerberosUserConfiguration45.setoptions(strMap78);
        kerberosUserConfiguration39.setoptions(strMap78);
        kerberosUserConfiguration26.options = strMap78;
        kerberosUserConfiguration19.setoptions(strMap78);
        kerberosUserConfiguration0.setoptions(strMap78);
        java.lang.String str84 = kerberosUserConfiguration0.getType();
        java.lang.String str85 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray87 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray90 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(parameters57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(parameters77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(str84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray90);
    }

    @Test
    public void test09033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09033");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(parameters6);
    }

    @Test
    public void test09034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09034");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.options = strMap31;
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration21.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration21.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap36);
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration39.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration44.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.options = strMap49;
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration39.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray53 = kerberosUserConfiguration39.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration19.options = strMap56;
        kerberosUserConfiguration0.setoptions(strMap56);
        java.lang.String str59 = kerberosUserConfiguration0.getType();
        java.lang.String str60 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(str60);
    }

    @Test
    public void test09035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09035");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
    }

    @Test
    public void test09036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09036");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.options;
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration2.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration2.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration2.options;
        kerberosUserConfiguration0.options = strMap17;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test09037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09037");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration17.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap30;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration20.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray34 = kerberosUserConfiguration20.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str36 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration17.options = strMap37;
        kerberosUserConfiguration0.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass41 = strMap40.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test09038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09038");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        java.security.Provider provider26 = kerberosUserConfiguration18.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration32);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        java.security.Provider provider38 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap39);
        kerberosUserConfiguration27.setoptions(strMap39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration47.options = strMap49;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap52);
        kerberosUserConfiguration42.setoptions(strMap52);
        kerberosUserConfiguration27.setoptions(strMap52);
        kerberosUserConfiguration18.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration1.options = strMap57;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray61 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration63.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration63.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.getoptions();
        kerberosUserConfiguration1.setoptions(strMap66);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray61);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap66);
    }

    @Test
    public void test09039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09039");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09040");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test09041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09041");
        java.lang.String[] strArray24 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray24);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray24, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray24, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters41 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters43 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters44 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters45 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters47 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray24, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters48 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray24);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters49 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray24);
        tSSLTransportParameters49.setKeyStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray24);
    }

    @Test
    public void test09042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09042");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration6.options = strMap8;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration0.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration0.getoptions();
        java.lang.String str28 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str33 = kerberosUserConfiguration31.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration36.setoptions(strMap39);
        kerberosUserConfiguration31.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration31.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration31.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration31.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration31.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration31.getoptions();
        kerberosUserConfiguration0.options = strMap49;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test09043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09043");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str11 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test09044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09044");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.options;
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration2.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration2.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap17);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test09045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09045");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(parameters7);
    }

    @Test
    public void test09046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09046");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        tSSLTransportParameters38.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test09047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09047");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7);
        tSSLTransportParameters8.setKeyStore("", "hi!", "hi!", "");
        tSSLTransportParameters8.requireClientAuth(false);
        tSSLTransportParameters8.requireClientAuth(true);
        tSSLTransportParameters8.setTrustStore("", "", "", "");
        tSSLTransportParameters8.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test09048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09048");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str11 = kerberosUserConfiguration9.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap14;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNull(parameters19);
    }

    @Test
    public void test09049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09049");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        tSSLTransportParameters31.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09050");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider20 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        java.security.Provider provider26 = kerberosUserConfiguration22.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        java.lang.String str38 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap39);
        kerberosUserConfiguration27.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration22.options = strMap42;
        kerberosUserConfiguration0.setoptions(strMap42);
        java.lang.String str45 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str45);
    }

    @Test
    public void test09051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09051");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider21 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration1.options;
        java.lang.String str23 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider25 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(provider25);
    }

    @Test
    public void test09052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09052");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        tSSLTransportParameters17.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09053");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider21 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration22.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration22.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        java.security.Provider provider41 = kerberosUserConfiguration39.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration44.refresh();
        java.security.Provider provider46 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration49.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration49.getoptions();
        kerberosUserConfiguration44.options = strMap51;
        kerberosUserConfiguration39.options = strMap51;
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration39.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration22.setoptions(strMap55);
        kerberosUserConfiguration0.options = strMap55;
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str59 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(parameters54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(str59);
    }

    @Test
    public void test09054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09054");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration1.setoptions(strMap28);
        kerberosUserConfiguration1.refresh();
        java.lang.Class<?> wildcardClass31 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test09055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09055");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration0.options = strMap4;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration21.options = strMap23;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap26);
        kerberosUserConfiguration16.setoptions(strMap26);
        kerberosUserConfiguration9.options = strMap26;
        kerberosUserConfiguration6.options = strMap26;
        kerberosUserConfiguration0.options = strMap26;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.options = strMap43;
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration33.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray47 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration50.refresh();
        java.security.Provider provider52 = kerberosUserConfiguration50.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration55.refresh();
        java.security.Provider provider57 = kerberosUserConfiguration55.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration60.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration60.getoptions();
        kerberosUserConfiguration55.options = strMap62;
        kerberosUserConfiguration50.options = strMap62;
        javax.security.auth.login.Configuration.Parameters parameters65 = kerberosUserConfiguration50.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration33.setoptions(strMap66);
        java.security.Provider provider68 = kerberosUserConfiguration33.getProvider();
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = null;
        kerberosUserConfiguration70.options = strMap72;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration74 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration74.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration70.setoptions(strMap75);
        kerberosUserConfiguration33.options = strMap75;
        java.lang.String str78 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration0.setoptions(strMap79);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(parameters65);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test09056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09056");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration18.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration29.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap34);
        kerberosUserConfiguration24.setoptions(strMap34);
        kerberosUserConfiguration18.options = strMap34;
        kerberosUserConfiguration0.setoptions(strMap34);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.lang.String str42 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test09057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09057");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        java.lang.String str12 = kerberosUserConfiguration7.getType();
        java.lang.String str13 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap15;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.String str19 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration31.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration31.getoptions();
        kerberosUserConfiguration26.options = strMap33;
        kerberosUserConfiguration21.options = strMap33;
        java.security.Provider provider36 = kerberosUserConfiguration21.getProvider();
        java.security.Provider provider37 = kerberosUserConfiguration21.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray39 = kerberosUserConfiguration21.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration40.refresh();
        kerberosUserConfiguration40.refresh();
        kerberosUserConfiguration40.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration40);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.options = strMap47;
        java.lang.String str49 = kerberosUserConfiguration40.getType();
        java.security.Provider provider50 = kerberosUserConfiguration40.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration40.getoptions();
        kerberosUserConfiguration21.setoptions(strMap51);
        kerberosUserConfiguration1.options = strMap51;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass55 = strMap54.getClass();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray39);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test09058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09058");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration1.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str22 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration28.options = strMap30;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration23.setoptions(strMap33);
        kerberosUserConfiguration1.setoptions(strMap33);
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test09059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09059");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test09060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09060");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        tSSLTransportParameters28.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09061");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9);
        tSSLTransportParameters14.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters14.setKeyStore("", "");
        tSSLTransportParameters14.setTrustStore("", "", "hi!", "");
        tSSLTransportParameters14.setTrustStore("", "", "", "");
        java.lang.Class<?> wildcardClass33 = tSSLTransportParameters14.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test09062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09062");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09063");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        java.lang.String str8 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.getoptions();
        java.lang.Class<?> wildcardClass12 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test09064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09064");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.options;
        java.security.Provider provider24 = kerberosUserConfiguration19.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration25.getParameters();
        java.security.Provider provider33 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap34);
        kerberosUserConfiguration0.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray39 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass40 = appConfigurationEntryArray39.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray39);
        org.junit.Assert.assertNotNull(wildcardClass40);
    }

    @Test
    public void test09065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09065");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration21.refresh();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration28.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration41.refresh();
        java.security.Provider provider43 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap44);
        kerberosUserConfiguration30.options = strMap44;
        kerberosUserConfiguration28.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration28.getoptions();
        kerberosUserConfiguration21.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration0.setoptions(strMap50);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(parameters55);
    }

    @Test
    public void test09066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09066");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration5.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap10);
        kerberosUserConfiguration0.setoptions(strMap10);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        java.security.Provider provider24 = kerberosUserConfiguration21.getProvider();
        java.lang.String str25 = kerberosUserConfiguration21.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration26.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration21.options = strMap36;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration21.getoptions();
        java.lang.String str39 = kerberosUserConfiguration21.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration21.getoptions();
        java.security.Provider provider41 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration43.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = null;
        kerberosUserConfiguration48.options = strMap50;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.setoptions(strMap53);
        kerberosUserConfiguration43.setoptions(strMap53);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration21.setoptions(strMap56);
        kerberosUserConfiguration0.setoptions(strMap56);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test09067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09067");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap9);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
    }

    @Test
    public void test09068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09068");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration5.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration5.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str19 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getoptions();
        java.lang.String str21 = kerberosUserConfiguration17.getType();
        java.security.Provider provider22 = kerberosUserConfiguration17.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration28.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.options = strMap33;
        kerberosUserConfiguration17.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration0.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test09069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09069");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration22.options = strMap29;
        kerberosUserConfiguration17.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap33);
        java.security.Provider provider35 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration37.options = strMap39;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap42);
        kerberosUserConfiguration0.options = strMap42;
        java.security.Provider provider45 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.options;
        kerberosUserConfiguration46.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration51.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration51.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration51.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.options = strMap56;
        javax.security.auth.login.Configuration.Parameters parameters58 = kerberosUserConfiguration46.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray60 = kerberosUserConfiguration46.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str62 = kerberosUserConfiguration46.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration46.getoptions();
        kerberosUserConfiguration0.options = strMap63;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration66.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration66.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration66.options;
        java.security.Provider provider71 = kerberosUserConfiguration66.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = null;
        kerberosUserConfiguration72.setoptions(strMap73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration72.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration72.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration72.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration72.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = null;
        kerberosUserConfiguration79.setoptions(strMap80);
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration79.options;
        java.lang.String str83 = kerberosUserConfiguration79.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration79.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration72.setoptions(strMap84);
        kerberosUserConfiguration66.setoptions(strMap84);
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration66.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration89 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray91 = kerberosUserConfiguration89.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray93 = kerberosUserConfiguration89.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap94 = kerberosUserConfiguration89.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration89.getoptions();
        kerberosUserConfiguration66.options = strMap95;
        kerberosUserConfiguration0.options = strMap95;
        kerberosUserConfiguration0.refresh();
        java.lang.String str99 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(parameters58);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNull(strMap82);
        org.junit.Assert.assertNull(str83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(parameters87);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray91);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNull(str99);
    }

    @Test
    public void test09070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09070");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        java.lang.String str12 = kerberosUserConfiguration7.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider18 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider21 = kerberosUserConfiguration14.getProvider();
        java.lang.String str22 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap23);
        java.lang.String str25 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration1.setoptions(strMap26);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.String str30 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNull(str30);
    }

    @Test
    public void test09071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09071");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str21 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration29.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration31.refresh();
        kerberosUserConfiguration31.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration31.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration38);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration42.refresh();
        java.security.Provider provider44 = kerberosUserConfiguration42.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap45);
        kerberosUserConfiguration31.options = strMap45;
        kerberosUserConfiguration29.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration29.getoptions();
        kerberosUserConfiguration22.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = null;
        kerberosUserConfiguration22.options = strMap52;
        java.security.Provider provider54 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration22.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration57);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        kerberosUserConfiguration60.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = null;
        kerberosUserConfiguration65.setoptions(strMap66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration65.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration65.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.options = strMap70;
        kerberosUserConfiguration57.setoptions(strMap70);
        java.security.Provider provider73 = kerberosUserConfiguration57.getProvider();
        java.security.Provider provider74 = kerberosUserConfiguration57.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.setoptions(strMap76);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration75);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration80.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = null;
        kerberosUserConfiguration80.options = strMap82;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration84 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration84.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration80.setoptions(strMap85);
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration75.setoptions(strMap87);
        kerberosUserConfiguration57.setoptions(strMap87);
        kerberosUserConfiguration22.setoptions(strMap87);
        kerberosUserConfiguration0.options = strMap87;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNull(provider74);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap87);
    }

    @Test
    public void test09072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09072");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration6.options;
        java.security.Provider provider11 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.security.Provider provider16 = kerberosUserConfiguration6.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.options = strMap27;
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration17.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration17.getoptions();
        java.security.Provider provider33 = kerberosUserConfiguration17.getProvider();
        java.lang.String str34 = kerberosUserConfiguration17.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration6.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap38;
        java.security.Provider provider40 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider40);
    }

    @Test
    public void test09073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09073");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        tSSLTransportParameters27.setTrustStore("", "", "", "hi!");
        tSSLTransportParameters27.setKeyStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09074");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters19.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09075");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        tSSLTransportParameters19.setTrustStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters19.setTrustStore("", "", "hi!", "");
        tSSLTransportParameters19.setTrustStore("hi!", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test09076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09076");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str3 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider10 = kerberosUserConfiguration6.getProvider();
        java.lang.String str11 = kerberosUserConfiguration6.getType();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration6.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        java.security.Provider provider17 = kerberosUserConfiguration14.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration14.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration6.options = strMap19;
        kerberosUserConfiguration1.setoptions(strMap19);
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration1.getParameters();
        java.lang.String str23 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration25.refresh();
        kerberosUserConfiguration25.refresh();
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getoptions();
        java.lang.String str31 = kerberosUserConfiguration25.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider33 = kerberosUserConfiguration25.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration35.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration40.refresh();
        java.security.Provider provider42 = kerberosUserConfiguration40.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration45.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.getoptions();
        kerberosUserConfiguration40.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.setoptions(strMap54);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        kerberosUserConfiguration53.refresh();
        kerberosUserConfiguration53.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters61 = kerberosUserConfiguration60.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = null;
        kerberosUserConfiguration62.setoptions(strMap63);
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration62.options;
        kerberosUserConfiguration62.refresh();
        kerberosUserConfiguration62.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration62.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration69);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration73.refresh();
        java.security.Provider provider75 = kerberosUserConfiguration73.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration73.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration69.setoptions(strMap76);
        kerberosUserConfiguration62.options = strMap76;
        kerberosUserConfiguration60.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration60.getoptions();
        kerberosUserConfiguration53.setoptions(strMap80);
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray85 = kerberosUserConfiguration53.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters86 = kerberosUserConfiguration53.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.options = strMap87;
        kerberosUserConfiguration25.options = strMap87;
        kerberosUserConfiguration1.options = strMap87;
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(parameters61);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(provider75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray85);
        org.junit.Assert.assertNull(parameters86);
        org.junit.Assert.assertNotNull(strMap87);
    }

    @Test
    public void test09077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09077");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration12.refresh();
        java.security.Provider provider14 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap15);
        kerberosUserConfiguration3.options = strMap15;
        kerberosUserConfiguration1.setoptions(strMap15);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        java.security.Provider provider24 = kerberosUserConfiguration21.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration21.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration21.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration32.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.options = strMap37;
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration27.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration27.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration44.refresh();
        java.security.Provider provider46 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration49.refresh();
        java.security.Provider provider51 = kerberosUserConfiguration49.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration54.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration54.getoptions();
        kerberosUserConfiguration49.options = strMap56;
        kerberosUserConfiguration44.options = strMap56;
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration44.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration44.options;
        kerberosUserConfiguration27.setoptions(strMap60);
        kerberosUserConfiguration21.setoptions(strMap60);
        kerberosUserConfiguration1.options = strMap60;
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray67 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(parameters64);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray67);
    }

    @Test
    public void test09078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09078");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test09079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09079");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration10.options = strMap12;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration10.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap27;
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
    }

    @Test
    public void test09080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09080");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
    }

    @Test
    public void test09081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09081");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        java.lang.String str11 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap25);
        kerberosUserConfiguration14.options = strMap25;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration38.options = strMap40;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap43);
        kerberosUserConfiguration33.setoptions(strMap43);
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider47 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap48);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(strMap48);
    }

    @Test
    public void test09082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09082");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, true);
        tSSLTransportParameters14.setTrustStore("", "", "", "");
        tSSLTransportParameters14.setKeyStore("hi!", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test09083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09083");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration12.refresh();
        java.security.Provider provider14 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap15);
        kerberosUserConfiguration3.options = strMap15;
        kerberosUserConfiguration1.setoptions(strMap15);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration20.refresh();
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str26 = kerberosUserConfiguration24.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap32);
        kerberosUserConfiguration24.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration20.options = strMap35;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        java.security.Provider provider41 = kerberosUserConfiguration38.getProvider();
        java.lang.String str42 = kerberosUserConfiguration38.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration46.refresh();
        java.security.Provider provider48 = kerberosUserConfiguration46.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration43.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration43.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration43.options;
        kerberosUserConfiguration38.options = strMap53;
        kerberosUserConfiguration20.options = strMap53;
        kerberosUserConfiguration1.setoptions(strMap53);
        java.lang.String str57 = kerberosUserConfiguration1.getType();
        java.security.Provider provider58 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(str57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test09084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09084");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration28.refresh();
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.setoptions(strMap33);
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration32.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration37.refresh();
        java.security.Provider provider39 = kerberosUserConfiguration37.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap40);
        kerberosUserConfiguration28.options = strMap40;
        kerberosUserConfiguration23.options = strMap40;
        kerberosUserConfiguration23.refresh();
        java.lang.String str45 = kerberosUserConfiguration23.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration23.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap49);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
    }

    @Test
    public void test09085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09085");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test09086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09086");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test09087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09087");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test09088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09088");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration1.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str22 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration28.options = strMap30;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap33);
        kerberosUserConfiguration23.setoptions(strMap33);
        kerberosUserConfiguration1.setoptions(strMap33);
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters37);
    }

    @Test
    public void test09089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09089");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test09090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09090");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider20 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration23.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration23.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.setoptions(strMap41);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration40.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.options = strMap45;
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration35.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration35.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration35.getoptions();
        java.security.Provider provider51 = kerberosUserConfiguration35.getProvider();
        java.lang.String str52 = kerberosUserConfiguration35.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration35.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration35.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.options;
        kerberosUserConfiguration56.refresh();
        kerberosUserConfiguration56.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration63.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = null;
        kerberosUserConfiguration65.setoptions(strMap66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration65.options;
        kerberosUserConfiguration65.refresh();
        kerberosUserConfiguration65.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration65.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration72.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration72);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration76.refresh();
        java.security.Provider provider78 = kerberosUserConfiguration76.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration72.setoptions(strMap79);
        kerberosUserConfiguration65.options = strMap79;
        kerberosUserConfiguration63.options = strMap79;
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration63.getoptions();
        kerberosUserConfiguration56.setoptions(strMap83);
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration56.getoptions();
        kerberosUserConfiguration35.setoptions(strMap85);
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration35.getoptions();
        kerberosUserConfiguration0.options = strMap88;
        javax.security.auth.login.Configuration.Parameters parameters90 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(parameters64);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNull(parameters90);
    }

    @Test
    public void test09091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09091");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
    }

    @Test
    public void test09092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09092");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration1.setoptions(strMap12);
        java.security.Provider provider14 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration18.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.security.Provider provider29 = kerberosUserConfiguration18.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration31.refresh();
        java.security.Provider provider33 = kerberosUserConfiguration31.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider35 = kerberosUserConfiguration31.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider38 = kerberosUserConfiguration31.getProvider();
        java.lang.String str39 = kerberosUserConfiguration31.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap41);
        kerberosUserConfiguration1.options = strMap41;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray45 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray45);
    }

    @Test
    public void test09093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09093");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters23.setTrustStore("hi!", "", "hi!", "");
        tSSLTransportParameters23.setKeyStore("hi!", "");
        tSSLTransportParameters23.setTrustStore("", "");
        tSSLTransportParameters23.setKeyStore("", "", "", "hi!");
        tSSLTransportParameters23.setTrustStore("", "", "", "hi!");
        tSSLTransportParameters23.setTrustStore("hi!", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09094");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration5.refresh();
        kerberosUserConfiguration5.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration9.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        kerberosUserConfiguration5.options = strMap17;
        kerberosUserConfiguration0.options = strMap17;
        kerberosUserConfiguration0.refresh();
        java.lang.String str22 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        java.security.Provider provider24 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test09095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09095");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        tSSLTransportParameters27.setTrustStore("hi!", "hi!", "", "");
        tSSLTransportParameters27.setTrustStore("", "");
        tSSLTransportParameters27.setKeyStore("", "", "", "hi!");
        tSSLTransportParameters27.setKeyStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09096");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        java.lang.Class<?> wildcardClass31 = strArray16.getClass();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass31);
    }

    @Test
    public void test09097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09097");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test09098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09098");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration1.options;
        java.lang.String str25 = kerberosUserConfiguration1.getType();
        java.security.Provider provider26 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
    }

    @Test
    public void test09099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09099");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap7;
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(str13);
    }

    @Test
    public void test09100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09100");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, true);
        tSSLTransportParameters21.requireClientAuth(false);
        java.lang.Class<?> wildcardClass24 = tSSLTransportParameters21.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test09101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09101");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        java.lang.String str8 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test09102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09102");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNotNull(strMap4);
    }

    @Test
    public void test09103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09103");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        kerberosUserConfiguration7.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration0.options = strMap30;
        java.security.Provider provider32 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.options;
        java.lang.String str34 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters37);
    }

    @Test
    public void test09104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09104");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration18.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration29.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap34);
        kerberosUserConfiguration24.setoptions(strMap34);
        kerberosUserConfiguration18.options = strMap34;
        kerberosUserConfiguration0.setoptions(strMap34);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
    }

    @Test
    public void test09105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09105");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap4);
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration13.refresh();
        java.security.Provider provider15 = kerberosUserConfiguration13.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration13.options = strMap20;
        kerberosUserConfiguration8.options = strMap20;
        java.security.Provider provider23 = kerberosUserConfiguration8.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.options = strMap38;
        kerberosUserConfiguration25.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration42.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.options = strMap48;
        kerberosUserConfiguration8.options = strMap48;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider52 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration1.options = strMap53;
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(parameters55);
    }

    @Test
    public void test09106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09106");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test09107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09107");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap17;
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration7.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration24.refresh();
        java.security.Provider provider26 = kerberosUserConfiguration24.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration29.options = strMap36;
        kerberosUserConfiguration24.options = strMap36;
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration7.setoptions(strMap40);
        kerberosUserConfiguration1.setoptions(strMap40);
        java.security.Provider provider43 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray45 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration47.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration47);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        kerberosUserConfiguration52.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str58 = kerberosUserConfiguration56.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration56);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration61.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration61.setoptions(strMap64);
        kerberosUserConfiguration56.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration56.getoptions();
        kerberosUserConfiguration52.options = strMap67;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = null;
        kerberosUserConfiguration69.setoptions(strMap70);
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration69.options;
        kerberosUserConfiguration69.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration74 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = null;
        kerberosUserConfiguration74.setoptions(strMap75);
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration74.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration74.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration74.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration69.options = strMap79;
        javax.security.auth.login.Configuration.Parameters parameters81 = kerberosUserConfiguration69.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray83 = kerberosUserConfiguration69.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration69.getoptions();
        kerberosUserConfiguration52.setoptions(strMap84);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration52.options;
        javax.security.auth.login.Configuration.Parameters parameters88 = kerberosUserConfiguration52.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.setoptions(strMap89);
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration47.getoptions();
        kerberosUserConfiguration1.setoptions(strMap91);
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNull(parameters81);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(parameters88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test09108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09108");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        tSSLTransportParameters22.requireClientAuth(true);
        tSSLTransportParameters22.setTrustStore("hi!", "");
        tSSLTransportParameters22.setKeyStore("hi!", "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09109");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        tSSLTransportParameters22.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters22.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09110");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09111");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09112");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider11 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
    }

    @Test
    public void test09113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09113");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09114");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
    }

    @Test
    public void test09115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09115");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration13.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap20);
        kerberosUserConfiguration1.setoptions(strMap20);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        kerberosUserConfiguration48.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration53.options = strMap55;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration48.setoptions(strMap58);
        kerberosUserConfiguration41.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration25.setoptions(strMap62);
        kerberosUserConfiguration1.options = strMap62;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = null;
        kerberosUserConfiguration66.setoptions(strMap67);
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration66.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration74 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration74.refresh();
        java.security.Provider provider76 = kerberosUserConfiguration74.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration74.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration66.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration66.getoptions();
        kerberosUserConfiguration1.options = strMap81;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray84 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider85 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray84);
        org.junit.Assert.assertNull(provider85);
    }

    @Test
    public void test09116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09116");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration3.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration10.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration15.options = strMap17;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration10.setoptions(strMap20);
        kerberosUserConfiguration3.options = strMap20;
        kerberosUserConfiguration0.options = strMap20;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
    }

    @Test
    public void test09117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09117");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.lang.String str1 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.options;
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration2.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration2.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration2.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration2.getoptions();
        kerberosUserConfiguration0.options = strMap19;
        java.security.Provider provider21 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(str1);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider21);
    }

    @Test
    public void test09118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09118");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider11 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test09119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09119");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration4.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        java.lang.String str20 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap21);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration0.setoptions(strMap24);
        java.lang.String str26 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters29);
    }

    @Test
    public void test09120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09120");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test09121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09121");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09122");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters21.setTrustStore("", "hi!");
        tSSLTransportParameters21.setTrustStore("", "");
        tSSLTransportParameters21.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09123");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        tSSLTransportParameters28.setKeyStore("", "hi!");
        tSSLTransportParameters28.setTrustStore("hi!", "", "", "");
        tSSLTransportParameters28.setKeyStore("hi!", "hi!", "hi!", "hi!");
        tSSLTransportParameters28.setKeyStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09124");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration1.setoptions(strMap28);
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider32 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters34);
    }

    @Test
    public void test09125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09125");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        tSSLTransportParameters31.setTrustStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters31.requireClientAuth(false);
        tSSLTransportParameters31.setTrustStore("hi!", "", "", "");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09126");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap7);
    }

    @Test
    public void test09127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09127");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, true);
        tSSLTransportParameters16.setTrustStore("hi!", "hi!", "", "");
        tSSLTransportParameters16.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test09128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09128");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.lang.String str3 = kerberosUserConfiguration0.getType();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
    }

    @Test
    public void test09129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09129");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09130");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        tSSLTransportParameters29.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09131");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider9 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider13 = kerberosUserConfiguration11.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration11.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.options;
        kerberosUserConfiguration0.options = strMap16;
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test09132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09132");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        tSSLTransportParameters14.setKeyStore("hi!", "hi!");
        tSSLTransportParameters14.requireClientAuth(true);
        tSSLTransportParameters14.setTrustStore("hi!", "");
        tSSLTransportParameters14.setKeyStore("hi!", "hi!", "hi!", "");
        tSSLTransportParameters14.setKeyStore("", "", "hi!", "");
        tSSLTransportParameters14.setTrustStore("hi!", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test09133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09133");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9);
        tSSLTransportParameters14.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters14.setKeyStore("", "", "hi!", "");
        tSSLTransportParameters14.setTrustStore("", "hi!");
        tSSLTransportParameters14.setTrustStore("", "hi!", "", "");
        tSSLTransportParameters14.setKeyStore("hi!", "");
        tSSLTransportParameters14.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test09134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09134");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap11);
        kerberosUserConfiguration0.options = strMap11;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        java.lang.Class<?> wildcardClass15 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test09135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09135");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        tSSLTransportParameters28.requireClientAuth(false);
        tSSLTransportParameters28.setTrustStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09136");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09137");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration12.refresh();
        java.security.Provider provider14 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration8.options;
        java.security.Provider provider18 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration0.options = strMap19;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration0.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(parameters26);
    }

    @Test
    public void test09138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09138");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.lang.String str4 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
    }

    @Test
    public void test09139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09139");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider6 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(provider6);
    }

    @Test
    public void test09140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09140");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.options = strMap27;
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration17.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration17.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration0.setoptions(strMap32);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration37.refresh();
        kerberosUserConfiguration37.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters45 = kerberosUserConfiguration44.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration46.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.options;
        kerberosUserConfiguration46.refresh();
        kerberosUserConfiguration46.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration46.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration53);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap60);
        kerberosUserConfiguration46.options = strMap60;
        kerberosUserConfiguration44.options = strMap60;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration44.getoptions();
        kerberosUserConfiguration37.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration68);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration68.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = null;
        kerberosUserConfiguration71.setoptions(strMap72);
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration71.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration78 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = null;
        kerberosUserConfiguration78.setoptions(strMap79);
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration78.options;
        kerberosUserConfiguration78.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration83 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration83.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = null;
        kerberosUserConfiguration83.options = strMap85;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration87 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration87.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration83.setoptions(strMap88);
        kerberosUserConfiguration78.setoptions(strMap88);
        kerberosUserConfiguration71.options = strMap88;
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration71.getoptions();
        kerberosUserConfiguration68.setoptions(strMap92);
        kerberosUserConfiguration37.options = strMap92;
        kerberosUserConfiguration0.setoptions(strMap92);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray97 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider98 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(parameters45);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray97);
        org.junit.Assert.assertNull(provider98);
    }

    @Test
    public void test09141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09141");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str8 = kerberosUserConfiguration1.getType();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(provider9);
    }

    @Test
    public void test09142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09142");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        tSSLTransportParameters29.setKeyStore("", "", "hi!", "hi!");
        tSSLTransportParameters29.setTrustStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09143");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration4.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.lang.String str10 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider14 = kerberosUserConfiguration0.getProvider();
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test09144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09144");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters23.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09145");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.lang.String str22 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration18.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        java.lang.String str36 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration39.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap43);
        java.lang.String str45 = kerberosUserConfiguration0.getType();
        java.lang.String str46 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
    }

    @Test
    public void test09146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09146");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap17);
        kerberosUserConfiguration3.options = strMap17;
        kerberosUserConfiguration1.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap48;
        kerberosUserConfiguration35.setoptions(strMap48);
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap52;
        kerberosUserConfiguration1.setoptions(strMap52);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray56 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
    }

    @Test
    public void test09147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09147");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7);
        tSSLTransportParameters8.requireClientAuth(true);
        tSSLTransportParameters8.setKeyStore("hi!", "hi!");
        tSSLTransportParameters8.setKeyStore("hi!", "hi!");
        tSSLTransportParameters8.requireClientAuth(false);
        tSSLTransportParameters8.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters8.setTrustStore("hi!", "", "", "");
        tSSLTransportParameters8.setKeyStore("", "hi!");
        tSSLTransportParameters8.setTrustStore("hi!", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test09148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09148");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test09149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09149");
        java.lang.String[] strArray23 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters41 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters43 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters44 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray23);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters46 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters47 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray23);
        tSSLTransportParameters47.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray23);
    }

    @Test
    public void test09150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09150");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration19.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration19.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider35 = kerberosUserConfiguration19.getProvider();
        java.security.Provider provider36 = kerberosUserConfiguration19.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration38.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap43;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration0.options = strMap45;
        java.lang.String str47 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
    }

    @Test
    public void test09151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09151");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        tSSLTransportParameters34.setTrustStore("hi!", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09152");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters23.setKeyStore("hi!", "hi!");
        tSSLTransportParameters23.setKeyStore("", "");
        tSSLTransportParameters23.setKeyStore("", "hi!");
        tSSLTransportParameters23.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09153");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider24 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider25 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(provider25);
    }

    @Test
    public void test09154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09154");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        tSSLTransportParameters34.setKeyStore("", "hi!", "", "");
        tSSLTransportParameters34.setTrustStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test09155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09155");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters24.setTrustStore("", "hi!");
        tSSLTransportParameters24.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09156");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider11 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration13.refresh();
        java.security.Provider provider15 = kerberosUserConfiguration13.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider17 = kerberosUserConfiguration13.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider20 = kerberosUserConfiguration13.getProvider();
        java.lang.String str21 = kerberosUserConfiguration13.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.Class<?> wildcardClass29 = appConfigurationEntryArray28.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test09157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09157");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10);
        tSSLTransportParameters16.setKeyStore("hi!", "");
        tSSLTransportParameters16.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09158");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09159");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap4);
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        java.lang.String str8 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strMap9);
    }

    @Test
    public void test09160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09160");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        tSSLTransportParameters17.setKeyStore("", "", "hi!", "hi!");
        tSSLTransportParameters17.setTrustStore("", "", "hi!", "");
        tSSLTransportParameters17.setKeyStore("", "", "hi!", "hi!");
        tSSLTransportParameters17.setTrustStore("hi!", "");
        tSSLTransportParameters17.setKeyStore("", "");
        java.lang.Class<?> wildcardClass39 = tSSLTransportParameters17.getClass();
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test09161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09161");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        tSSLTransportParameters28.setKeyStore("hi!", "hi!");
        tSSLTransportParameters28.setKeyStore("hi!", "", "hi!", "");
        tSSLTransportParameters28.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters28.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09162");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap21);
        kerberosUserConfiguration9.setoptions(strMap21);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration29.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap34);
        kerberosUserConfiguration24.setoptions(strMap34);
        kerberosUserConfiguration9.setoptions(strMap34);
        kerberosUserConfiguration0.options = strMap34;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration39.refresh();
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration39.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.options;
        java.lang.String str46 = kerberosUserConfiguration44.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration53);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap60);
        kerberosUserConfiguration48.setoptions(strMap60);
        kerberosUserConfiguration44.options = strMap60;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration44.options;
        kerberosUserConfiguration39.setoptions(strMap64);
        kerberosUserConfiguration0.options = strMap64;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test09163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09163");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.lang.String str8 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters9 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(parameters9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
    }

    @Test
    public void test09164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09164");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, true);
        tSSLTransportParameters17.requireClientAuth(false);
        tSSLTransportParameters17.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters17.setKeyStore("hi!", "");
        tSSLTransportParameters17.setTrustStore("", "");
        tSSLTransportParameters17.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09165");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        tSSLTransportParameters23.setKeyStore("hi!", "", "hi!", "");
        tSSLTransportParameters23.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09166");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.lang.String str7 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration5.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.options;
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.security.Provider provider14 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider15);
    }

    @Test
    public void test09167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09167");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap8);
    }

    @Test
    public void test09168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09168");
        java.lang.String[] strArray1 = null;
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters3 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray1, true);
        tSSLTransportParameters3.requireClientAuth(false);
        tSSLTransportParameters3.setTrustStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters3.setTrustStore("hi!", "hi!");
        tSSLTransportParameters3.setKeyStore("", "hi!");
    }

    @Test
    public void test09169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09169");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        // The following exception was thrown during execution in test generation
        try {
            javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test09170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09170");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        tSSLTransportParameters19.setTrustStore("", "", "hi!", "hi!");
        tSSLTransportParameters19.requireClientAuth(true);
        tSSLTransportParameters19.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters19.setTrustStore("", "");
        tSSLTransportParameters19.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test09171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09171");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider12 = kerberosUserConfiguration1.getProvider();
        java.lang.String str13 = kerberosUserConfiguration1.getType();
        java.security.Provider provider14 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test09172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09172");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        tSSLTransportParameters26.setKeyStore("hi!", "hi!");
        tSSLTransportParameters26.setKeyStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters26.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09173");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        tSSLTransportParameters31.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09174");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09175");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration1.options = strMap22;
        java.security.Provider provider24 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test09176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09176");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.options;
        java.lang.Class<?> wildcardClass12 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test09177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09177");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration11.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        java.lang.String str15 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration11.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration11.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str26 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str30 = kerberosUserConfiguration28.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.setoptions(strMap36);
        kerberosUserConfiguration28.setoptions(strMap36);
        kerberosUserConfiguration24.options = strMap36;
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap41;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration48.options;
        java.lang.String str50 = kerberosUserConfiguration48.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        kerberosUserConfiguration48.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.options = strMap53;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration56.refresh();
        java.security.Provider provider58 = kerberosUserConfiguration56.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider60 = kerberosUserConfiguration56.getProvider();
        java.lang.String str61 = kerberosUserConfiguration56.getType();
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration56.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration64.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration64.getoptions();
        java.security.Provider provider67 = kerberosUserConfiguration64.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters68 = kerberosUserConfiguration64.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration64.options;
        kerberosUserConfiguration56.options = strMap69;
        kerberosUserConfiguration44.setoptions(strMap69);
        kerberosUserConfiguration11.setoptions(strMap69);
        kerberosUserConfiguration0.setoptions(strMap69);
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray76 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider77 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(provider60);
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(provider67);
        org.junit.Assert.assertNull(parameters68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray76);
        org.junit.Assert.assertNull(provider77);
    }

    @Test
    public void test09178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09178");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        tSSLTransportParameters29.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09179");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.setoptions(strMap12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration15.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration15.setoptions(strMap17);
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.lang.String str31 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap32);
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = null;
        kerberosUserConfiguration37.setoptions(strMap38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.options;
        kerberosUserConfiguration37.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration42.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.options = strMap47;
        javax.security.auth.login.Configuration.Parameters parameters49 = kerberosUserConfiguration37.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray51 = kerberosUserConfiguration37.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration37.getoptions();
        kerberosUserConfiguration15.options = strMap52;
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap54);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str58 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str62 = kerberosUserConfiguration60.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration60);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration65.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration65.setoptions(strMap68);
        kerberosUserConfiguration60.setoptions(strMap68);
        kerberosUserConfiguration56.options = strMap68;
        javax.security.auth.login.Configuration.Parameters parameters72 = kerberosUserConfiguration56.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters74 = kerberosUserConfiguration56.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters75 = kerberosUserConfiguration56.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration56.getoptions();
        kerberosUserConfiguration0.options = strMap76;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(parameters49);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNull(str62);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNull(parameters72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(parameters74);
        org.junit.Assert.assertNull(parameters75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap78);
    }

    @Test
    public void test09180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09180");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration28.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.options = strMap33;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration23.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration23.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration23.getoptions();
        java.security.Provider provider39 = kerberosUserConfiguration23.getProvider();
        java.lang.String str40 = kerberosUserConfiguration23.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration23.getParameters();
        java.security.Provider provider43 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration0.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test09181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09181");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        tSSLTransportParameters35.setTrustStore("", "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09182");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09183");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str25 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test09184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09184");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration17.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = null;
        kerberosUserConfiguration20.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration20.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.options = strMap30;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration20.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray34 = kerberosUserConfiguration20.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str36 = kerberosUserConfiguration20.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration17.options = strMap37;
        kerberosUserConfiguration0.options = strMap37;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration42.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration42.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration42.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration42.getoptions();
        kerberosUserConfiguration0.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration0.options;
        java.lang.String str50 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str50);
    }

    @Test
    public void test09185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09185");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test09186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09186");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        tSSLTransportParameters31.setKeyStore("hi!", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09187");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters12);
    }

    @Test
    public void test09188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09188");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        tSSLTransportParameters29.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09189");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        tSSLTransportParameters17.setTrustStore("", "", "", "");
        tSSLTransportParameters17.setTrustStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09190");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09191");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        tSSLTransportParameters28.setKeyStore("hi!", "hi!", "hi!", "hi!");
        tSSLTransportParameters28.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09192");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration1.setoptions(strMap28);
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider34 = kerberosUserConfiguration33.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration35.refresh();
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration39.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration44.refresh();
        java.security.Provider provider46 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.setoptions(strMap47);
        kerberosUserConfiguration35.options = strMap47;
        kerberosUserConfiguration33.setoptions(strMap47);
        java.security.Provider provider51 = kerberosUserConfiguration33.getProvider();
        java.lang.String str52 = kerberosUserConfiguration33.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray54 = kerberosUserConfiguration33.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration56.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration56.getoptions();
        java.security.Provider provider59 = kerberosUserConfiguration56.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters60 = kerberosUserConfiguration56.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration56.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration56.options;
        kerberosUserConfiguration33.options = strMap62;
        kerberosUserConfiguration1.setoptions(strMap62);
        java.lang.String str65 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = null;
        kerberosUserConfiguration66.setoptions(strMap67);
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration66.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str72 = kerberosUserConfiguration66.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap73;
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNull(str52);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNull(parameters60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(strMap73);
    }

    @Test
    public void test09193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09193");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration22.options = strMap29;
        kerberosUserConfiguration17.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap33);
        java.security.Provider provider35 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap48;
        kerberosUserConfiguration38.refresh();
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration38.getParameters();
        kerberosUserConfiguration38.refresh();
        java.security.Provider provider53 = kerberosUserConfiguration38.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.setoptions(strMap55);
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.options;
        kerberosUserConfiguration54.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = null;
        kerberosUserConfiguration59.setoptions(strMap60);
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration59.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.options = strMap64;
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration54.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration54);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray69 = kerberosUserConfiguration54.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = null;
        kerberosUserConfiguration70.setoptions(strMap71);
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration70.options;
        kerberosUserConfiguration70.refresh();
        kerberosUserConfiguration70.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration76.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = null;
        kerberosUserConfiguration76.options = strMap78;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration76.setoptions(strMap81);
        kerberosUserConfiguration70.options = strMap81;
        kerberosUserConfiguration54.setoptions(strMap81);
        kerberosUserConfiguration54.refresh();
        java.lang.String str86 = kerberosUserConfiguration54.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration54.getoptions();
        kerberosUserConfiguration38.setoptions(strMap87);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration38);
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration0.setoptions(strMap90);
        java.util.HashMap<java.lang.String, java.lang.String> strMap92 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray69);
        org.junit.Assert.assertNull(strMap73);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap92);
    }

    @Test
    public void test09194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09194");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration1.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str24 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
    }

    @Test
    public void test09195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09195");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        tSSLTransportParameters25.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09196");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str23 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration27);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.options = strMap40;
        kerberosUserConfiguration27.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration44.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration44.options;
        kerberosUserConfiguration27.setoptions(strMap54);
        javax.security.auth.login.Configuration.Parameters parameters56 = kerberosUserConfiguration27.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider58 = kerberosUserConfiguration27.getProvider();
        java.lang.String str59 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap60;
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(parameters56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(parameters62);
    }

    @Test
    public void test09197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09197");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09198");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09199");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        tSSLTransportParameters15.setTrustStore("hi!", "hi!");
        tSSLTransportParameters15.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09200");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        tSSLTransportParameters30.requireClientAuth(false);
        tSSLTransportParameters30.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09201");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration12.refresh();
        java.security.Provider provider14 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.options = strMap19;
        java.lang.Class<?> wildcardClass21 = strMap19.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test09202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09202");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        tSSLTransportParameters18.requireClientAuth(true);
        tSSLTransportParameters18.setKeyStore("hi!", "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test09203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09203");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test09204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09204");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters9 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray8);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray8);
        tSSLTransportParameters11.requireClientAuth(true);
        tSSLTransportParameters11.setTrustStore("hi!", "", "hi!", "");
        tSSLTransportParameters11.setKeyStore("hi!", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test09205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09205");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        java.security.Provider provider3 = kerberosUserConfiguration0.getProvider();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
    }

    @Test
    public void test09206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09206");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration1.setoptions(strMap12);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
    }

    @Test
    public void test09207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09207");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration10.refresh();
        java.security.Provider provider12 = kerberosUserConfiguration10.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration10.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration1.options = strMap17;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration20.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration20.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration26.refresh();
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration33.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        kerberosUserConfiguration35.refresh();
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration35.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration42);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration46.refresh();
        java.security.Provider provider48 = kerberosUserConfiguration46.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.setoptions(strMap49);
        kerberosUserConfiguration35.options = strMap49;
        kerberosUserConfiguration33.options = strMap49;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration26.setoptions(strMap53);
        kerberosUserConfiguration20.options = strMap53;
        kerberosUserConfiguration1.setoptions(strMap53);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration58 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration58.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration58);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration58.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray63 = kerberosUserConfiguration58.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters64 = kerberosUserConfiguration58.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray66 = kerberosUserConfiguration58.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = null;
        kerberosUserConfiguration67.setoptions(strMap68);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration67.options;
        kerberosUserConfiguration67.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = null;
        kerberosUserConfiguration72.setoptions(strMap73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration72.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration72.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration72.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration67.options = strMap77;
        kerberosUserConfiguration67.refresh();
        javax.security.auth.login.Configuration.Parameters parameters80 = kerberosUserConfiguration67.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration67.getoptions();
        kerberosUserConfiguration58.options = strMap81;
        kerberosUserConfiguration1.setoptions(strMap81);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray85 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters86 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray63);
        org.junit.Assert.assertNull(parameters64);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray66);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNull(parameters80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray85);
        org.junit.Assert.assertNull(parameters86);
    }

    @Test
    public void test09208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09208");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        tSSLTransportParameters27.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09209");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration22.options = strMap29;
        kerberosUserConfiguration17.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap33);
        java.security.Provider provider35 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider41 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNull(provider41);
    }

    @Test
    public void test09210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09210");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        tSSLTransportParameters29.setTrustStore("hi!", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09211");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        tSSLTransportParameters24.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09212");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration22.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration22.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str38 = kerberosUserConfiguration22.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters41 = kerberosUserConfiguration22.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration1.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test09213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09213");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09214");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.lang.String str22 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration18.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        javax.security.auth.login.Configuration.Parameters parameters36 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider39 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.options;
        kerberosUserConfiguration41.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration46.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration46.options = strMap48;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.setoptions(strMap51);
        kerberosUserConfiguration41.setoptions(strMap51);
        kerberosUserConfiguration41.refresh();
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration41.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration41.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration0.options = strMap61;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap61);
    }

    @Test
    public void test09215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09215");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        java.lang.Class<?> wildcardClass38 = tSSLTransportParameters37.getClass();
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test09216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09216");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.security.Provider provider13 = kerberosUserConfiguration11.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap14);
        kerberosUserConfiguration0.options = strMap14;
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test09217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09217");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        java.lang.String str16 = kerberosUserConfiguration12.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.setoptions(strMap25);
        kerberosUserConfiguration12.options = strMap25;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration29.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration29);
        java.lang.String str33 = kerberosUserConfiguration29.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.getoptions();
        kerberosUserConfiguration29.options = strMap39;
        kerberosUserConfiguration12.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration12.getoptions();
        kerberosUserConfiguration1.setoptions(strMap42);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(parameters48);
    }

    @Test
    public void test09218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09218");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration5.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap10);
        kerberosUserConfiguration0.setoptions(strMap10);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test09219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09219");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider19 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider19);
    }

    @Test
    public void test09220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09220");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration3.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        kerberosUserConfiguration10.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration15.options = strMap17;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap20);
        kerberosUserConfiguration10.setoptions(strMap20);
        kerberosUserConfiguration3.options = strMap20;
        kerberosUserConfiguration0.options = strMap20;
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
    }

    @Test
    public void test09221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09221");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09222");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = null;
        kerberosUserConfiguration10.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration10.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap21);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration1.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass28 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test09223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09223");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        tSSLTransportParameters24.requireClientAuth(true);
        tSSLTransportParameters24.setKeyStore("hi!", "hi!");
        tSSLTransportParameters24.requireClientAuth(false);
        tSSLTransportParameters24.setKeyStore("hi!", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09224");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.options;
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration7.options = strMap9;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap12);
        kerberosUserConfiguration2.setoptions(strMap12);
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration2.setoptions(strMap21);
        kerberosUserConfiguration0.options = strMap21;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration27.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration34.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration39.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration34.options = strMap44;
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration34.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration34.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str50 = kerberosUserConfiguration34.getType();
        java.lang.String str51 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap53);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration56.refresh();
        java.security.Provider provider58 = kerberosUserConfiguration56.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration61 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration61.refresh();
        java.security.Provider provider63 = kerberosUserConfiguration61.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration61.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration66.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration66.getoptions();
        kerberosUserConfiguration61.options = strMap68;
        kerberosUserConfiguration56.options = strMap68;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration56.getoptions();
        kerberosUserConfiguration27.options = strMap71;
        kerberosUserConfiguration0.setoptions(strMap71);
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(provider63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap71);
    }

    @Test
    public void test09225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09225");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        tSSLTransportParameters23.setKeyStore("", "hi!");
        tSSLTransportParameters23.setTrustStore("", "", "hi!", "hi!");
        tSSLTransportParameters23.setTrustStore("hi!", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09226");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider4 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.options = strMap10;
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
    }

    @Test
    public void test09227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09227");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration10.options = strMap22;
        kerberosUserConfiguration5.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration33.options = strMap40;
        kerberosUserConfiguration28.options = strMap40;
        kerberosUserConfiguration0.setoptions(strMap40);
        java.lang.String str44 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration52.options = strMap59;
        kerberosUserConfiguration47.options = strMap59;
        kerberosUserConfiguration0.setoptions(strMap59);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = null;
        kerberosUserConfiguration0.setoptions(strMap63);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
    }

    @Test
    public void test09228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09228");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        tSSLTransportParameters14.setKeyStore("hi!", "hi!");
        tSSLTransportParameters14.requireClientAuth(true);
        tSSLTransportParameters14.setTrustStore("hi!", "");
        tSSLTransportParameters14.setTrustStore("", "", "hi!", "hi!");
        tSSLTransportParameters14.setKeyStore("hi!", "hi!", "hi!", "");
        tSSLTransportParameters14.setKeyStore("", "", "", "");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test09229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09229");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        tSSLTransportParameters20.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters20.requireClientAuth(true);
        tSSLTransportParameters20.setKeyStore("hi!", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test09230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09230");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        tSSLTransportParameters28.setKeyStore("hi!", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09231");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09232");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.options;
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
    }

    @Test
    public void test09233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09233");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration1.options;
        java.lang.String str25 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test09234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09234");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.options;
        java.lang.String str18 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.options;
        java.lang.Class<?> wildcardClass20 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test09235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09235");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration1.setoptions(strMap12);
        java.security.Provider provider14 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
    }

    @Test
    public void test09236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09236");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration12.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap17);
        kerberosUserConfiguration7.setoptions(strMap17);
        kerberosUserConfiguration0.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str22 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider25 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap30);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
    }

    @Test
    public void test09237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09237");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration5.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap8);
        kerberosUserConfiguration0.setoptions(strMap8);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration15.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        java.lang.String str19 = kerberosUserConfiguration15.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.security.Provider provider23 = kerberosUserConfiguration21.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration15.options = strMap25;
        kerberosUserConfiguration0.setoptions(strMap25);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test09238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09238");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider12 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider12);
    }

    @Test
    public void test09239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09239");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09240");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        tSSLTransportParameters22.setTrustStore("", "", "", "hi!");
        tSSLTransportParameters22.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09241");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        tSSLTransportParameters16.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09242");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters24.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09243");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap9);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        java.security.Provider provider17 = kerberosUserConfiguration14.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration19.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap28);
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration14.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration1.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration40.options = strMap42;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap45);
        kerberosUserConfiguration35.setoptions(strMap45);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray49 = kerberosUserConfiguration35.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration35.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray52 = kerberosUserConfiguration35.getAppConfigurationEntry("hi!");
        java.security.Provider provider53 = kerberosUserConfiguration35.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration54.setoptions(strMap55);
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.options;
        kerberosUserConfiguration54.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = null;
        kerberosUserConfiguration59.setoptions(strMap60);
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration59.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration54.options = strMap64;
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration54.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray68 = kerberosUserConfiguration54.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration54.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration54.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration72 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = null;
        kerberosUserConfiguration72.setoptions(strMap73);
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration72.options;
        kerberosUserConfiguration72.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = null;
        kerberosUserConfiguration77.setoptions(strMap78);
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration77.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration77.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration72.options = strMap82;
        javax.security.auth.login.Configuration.Parameters parameters84 = kerberosUserConfiguration72.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray86 = kerberosUserConfiguration72.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration72.getoptions();
        java.security.Provider provider88 = kerberosUserConfiguration72.getProvider();
        java.lang.String str89 = kerberosUserConfiguration72.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration72.getoptions();
        kerberosUserConfiguration54.setoptions(strMap90);
        kerberosUserConfiguration35.options = strMap90;
        kerberosUserConfiguration1.setoptions(strMap90);
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray52);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(strMap75);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNull(parameters84);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(provider88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test09244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09244");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.getoptions();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test09245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09245");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        tSSLTransportParameters28.setKeyStore("", "", "", "hi!");
        tSSLTransportParameters28.setTrustStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09246");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09247");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration7.refresh();
        java.security.Provider provider9 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.options = strMap11;
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider14 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider15 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass17 = strMap16.getClass();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test09248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09248");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration5.refresh();
        kerberosUserConfiguration5.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str11 = kerberosUserConfiguration9.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap17);
        kerberosUserConfiguration9.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration5.options = strMap20;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration22.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration22.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration22.getoptions();
        kerberosUserConfiguration5.setoptions(strMap37);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.Parameters parameters41 = kerberosUserConfiguration5.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test09249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09249");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.options = strMap16;
        kerberosUserConfiguration0.options = strMap16;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.options;
        kerberosUserConfiguration0.setoptions(strMap23);
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(parameters25);
    }

    @Test
    public void test09250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09250");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7, false);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test09251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09251");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        tSSLTransportParameters26.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09252");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test09253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09253");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap17);
        kerberosUserConfiguration3.options = strMap17;
        kerberosUserConfiguration1.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration25.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration1.options = strMap30;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters34);
    }

    @Test
    public void test09254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09254");
        java.lang.String[] strArray22 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters41 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters42 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters43 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters44 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters46 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters47 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray22);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test09255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09255");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration1.setoptions(strMap12);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration29.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap34);
        kerberosUserConfiguration24.setoptions(strMap34);
        kerberosUserConfiguration17.options = strMap34;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration17.getoptions();
        java.security.Provider provider40 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration1.setoptions(strMap41);
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.options;
        kerberosUserConfiguration44.refresh();
        kerberosUserConfiguration44.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration44.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap52);
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(parameters54);
    }

    @Test
    public void test09256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09256");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        tSSLTransportParameters19.setTrustStore("hi!", "");
        tSSLTransportParameters19.setTrustStore("", "", "hi!", "hi!");
        tSSLTransportParameters19.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test09257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09257");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        kerberosUserConfiguration27.options = strMap34;
        kerberosUserConfiguration22.options = strMap34;
        java.security.Provider provider37 = kerberosUserConfiguration22.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration47.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.options = strMap52;
        kerberosUserConfiguration39.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration56.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.options = strMap62;
        kerberosUserConfiguration22.options = strMap62;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration66.refresh();
        java.security.Provider provider68 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider70 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration66.getoptions();
        kerberosUserConfiguration22.setoptions(strMap71);
        kerberosUserConfiguration0.setoptions(strMap71);
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters76 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(parameters76);
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test09258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09258");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        tSSLTransportParameters30.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09259");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        tSSLTransportParameters25.setTrustStore("", "hi!", "", "");
        tSSLTransportParameters25.setKeyStore("hi!", "", "", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09260");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        java.lang.Class<?> wildcardClass34 = tSSLTransportParameters33.getClass();
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test09261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09261");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        java.lang.String str25 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
    }

    @Test
    public void test09262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09262");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09263");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        tSSLTransportParameters31.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09264");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9, false);
        tSSLTransportParameters14.requireClientAuth(false);
        tSSLTransportParameters14.requireClientAuth(false);
        tSSLTransportParameters14.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters14.setTrustStore("hi!", "", "", "");
        tSSLTransportParameters14.setKeyStore("hi!", "hi!", "hi!", "hi!");
        tSSLTransportParameters14.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test09265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09265");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        tSSLTransportParameters18.setTrustStore("", "", "hi!", "");
        tSSLTransportParameters18.requireClientAuth(false);
        tSSLTransportParameters18.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test09266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09266");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getoptions();
        java.lang.String str11 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
    }

    @Test
    public void test09267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09267");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.options = strMap18;
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration8.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration8.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str24 = kerberosUserConfiguration8.getType();
        java.lang.String str25 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap27);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration30.refresh();
        java.security.Provider provider32 = kerberosUserConfiguration30.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration40.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration40.getoptions();
        kerberosUserConfiguration35.options = strMap42;
        kerberosUserConfiguration30.options = strMap42;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration30.getoptions();
        kerberosUserConfiguration1.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test09268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09268");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass4 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test09269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09269");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider11 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider20 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNull(parameters21);
    }

    @Test
    public void test09270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09270");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration10.options = strMap22;
        kerberosUserConfiguration5.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration33.options = strMap40;
        kerberosUserConfiguration28.options = strMap40;
        kerberosUserConfiguration0.setoptions(strMap40);
        java.lang.String str44 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray47 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration48.refresh();
        kerberosUserConfiguration48.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.setoptions(strMap53);
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration52.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap60);
        kerberosUserConfiguration48.options = strMap60;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray64 = kerberosUserConfiguration48.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration66.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.options;
        javax.security.auth.login.Configuration.Parameters parameters70 = kerberosUserConfiguration66.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration71.refresh();
        kerberosUserConfiguration71.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str77 = kerberosUserConfiguration75.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration75);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration80.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration82.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration80.setoptions(strMap83);
        kerberosUserConfiguration75.setoptions(strMap83);
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration75.getoptions();
        kerberosUserConfiguration71.options = strMap86;
        kerberosUserConfiguration66.setoptions(strMap86);
        kerberosUserConfiguration48.options = strMap86;
        kerberosUserConfiguration0.options = strMap86;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray47);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray64);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(parameters70);
        org.junit.Assert.assertNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap86);
    }

    @Test
    public void test09271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09271");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration10.options = strMap22;
        kerberosUserConfiguration5.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration33.options = strMap40;
        kerberosUserConfiguration28.options = strMap40;
        kerberosUserConfiguration0.setoptions(strMap40);
        java.lang.String str44 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration52.options = strMap59;
        kerberosUserConfiguration47.options = strMap59;
        kerberosUserConfiguration0.setoptions(strMap59);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration63);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration68.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap71);
        kerberosUserConfiguration63.setoptions(strMap71);
        kerberosUserConfiguration0.setoptions(strMap71);
        javax.security.auth.login.Configuration.Parameters parameters75 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider77 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(parameters75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(provider77);
    }

    @Test
    public void test09272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09272");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap21);
        kerberosUserConfiguration9.setoptions(strMap21);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration29.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap34);
        kerberosUserConfiguration24.setoptions(strMap34);
        kerberosUserConfiguration9.setoptions(strMap34);
        kerberosUserConfiguration0.options = strMap34;
        java.lang.String str39 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration0.setoptions(strMap40);
        java.security.Provider provider42 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = null;
        kerberosUserConfiguration44.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration44);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration49.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = null;
        kerberosUserConfiguration49.options = strMap51;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap54);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration44.setoptions(strMap56);
        kerberosUserConfiguration0.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider60 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(provider60);
    }

    @Test
    public void test09273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09273");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9, false);
        tSSLTransportParameters14.requireClientAuth(false);
        tSSLTransportParameters14.setTrustStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters14.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test09274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09274");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration7.refresh();
        java.security.Provider provider9 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.options = strMap11;
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider14 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.options = strMap27;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration30.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.options = strMap43;
        kerberosUserConfiguration30.setoptions(strMap43);
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.options = strMap47;
        kerberosUserConfiguration1.options = strMap47;
        java.lang.Class<?> wildcardClass50 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(wildcardClass50);
    }

    @Test
    public void test09275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09275");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        tSSLTransportParameters40.requireClientAuth(false);
        tSSLTransportParameters40.setTrustStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters40.setTrustStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test09276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09276");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider22 = kerberosUserConfiguration0.getProvider();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.security.Provider provider26 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider28 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(provider28);
    }

    @Test
    public void test09277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09277");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str3 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider10 = kerberosUserConfiguration6.getProvider();
        java.lang.String str11 = kerberosUserConfiguration6.getType();
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration6.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        java.security.Provider provider17 = kerberosUserConfiguration14.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration14.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration6.options = strMap19;
        kerberosUserConfiguration1.setoptions(strMap19);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider23 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass33 = strMap32.getClass();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test09278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09278");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09279");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        tSSLTransportParameters27.setTrustStore("", "");
        tSSLTransportParameters27.setKeyStore("", "");
        tSSLTransportParameters27.setTrustStore("hi!", "", "hi!", "hi!");
        tSSLTransportParameters27.setTrustStore("hi!", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09280");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test09281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09281");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration7.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration7.getoptions();
        java.security.Provider provider10 = kerberosUserConfiguration7.getProvider();
        java.lang.String str11 = kerberosUserConfiguration7.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration15.refresh();
        java.security.Provider provider17 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration12.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration7.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration7.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap38;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap41;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test09282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09282");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10);
        tSSLTransportParameters17.setTrustStore("hi!", "");
        tSSLTransportParameters17.setTrustStore("", "hi!");
        tSSLTransportParameters17.setTrustStore("", "", "hi!", "");
        tSSLTransportParameters17.setTrustStore("", "");
        tSSLTransportParameters17.setKeyStore("hi!", "");
        tSSLTransportParameters17.setTrustStore("", "", "", "");
        tSSLTransportParameters17.requireClientAuth(false);
        tSSLTransportParameters17.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09283");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration27.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration32.getoptions();
        kerberosUserConfiguration27.options = strMap34;
        kerberosUserConfiguration22.options = strMap34;
        java.security.Provider provider37 = kerberosUserConfiguration22.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration39);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = null;
        kerberosUserConfiguration42.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.options;
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration47.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.options = strMap52;
        kerberosUserConfiguration39.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration39.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration56.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration39.options = strMap62;
        kerberosUserConfiguration22.options = strMap62;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration66.refresh();
        java.security.Provider provider68 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider70 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration66.getoptions();
        kerberosUserConfiguration22.setoptions(strMap71);
        kerberosUserConfiguration0.setoptions(strMap71);
        java.lang.String str74 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test09284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09284");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap17);
        kerberosUserConfiguration3.options = strMap17;
        kerberosUserConfiguration1.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration25.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration25.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration1.options = strMap30;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration1.options;
        java.lang.String str36 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(str36);
    }

    @Test
    public void test09285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09285");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration15.refresh();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration22.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.setoptions(strMap38);
        kerberosUserConfiguration24.options = strMap38;
        kerberosUserConfiguration22.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration22.getoptions();
        kerberosUserConfiguration15.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap44;
        javax.security.auth.login.Configuration.Parameters parameters46 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration47.refresh();
        kerberosUserConfiguration47.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration54.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.options;
        kerberosUserConfiguration56.refresh();
        kerberosUserConfiguration56.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration56.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration63);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration67.refresh();
        java.security.Provider provider69 = kerberosUserConfiguration67.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration63.setoptions(strMap70);
        kerberosUserConfiguration56.options = strMap70;
        kerberosUserConfiguration54.options = strMap70;
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration54.getoptions();
        kerberosUserConfiguration47.setoptions(strMap74);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = null;
        kerberosUserConfiguration47.options = strMap77;
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap79;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration82.refresh();
        kerberosUserConfiguration82.refresh();
        kerberosUserConfiguration82.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration82);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration88 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration88.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration82.options = strMap89;
        java.lang.String str91 = kerberosUserConfiguration82.getType();
        java.security.Provider provider92 = kerberosUserConfiguration82.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap93 = kerberosUserConfiguration82.getoptions();
        kerberosUserConfiguration0.options = strMap93;
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(parameters46);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(provider69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(str91);
        org.junit.Assert.assertNull(provider92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test09286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09286");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration4.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration4.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider14 = kerberosUserConfiguration4.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration4.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.setoptions(strMap17);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration19.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        kerberosUserConfiguration25.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration30.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration30.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap35);
        kerberosUserConfiguration25.setoptions(strMap35);
        kerberosUserConfiguration19.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap40);
        java.lang.String str42 = kerberosUserConfiguration0.getType();
        java.security.Provider provider43 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNull(provider43);
    }

    @Test
    public void test09287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09287");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7);
        tSSLTransportParameters8.requireClientAuth(true);
        tSSLTransportParameters8.setTrustStore("hi!", "", "", "");
        tSSLTransportParameters8.setKeyStore("", "", "", "");
        tSSLTransportParameters8.requireClientAuth(false);
        tSSLTransportParameters8.setKeyStore("", "hi!");
        tSSLTransportParameters8.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test09288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09288");
        java.lang.String[] strArray6 = new java.lang.String[] { "", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray6, true);
        tSSLTransportParameters8.setKeyStore("hi!", "");
        tSSLTransportParameters8.setKeyStore("", "hi!", "", "hi!");
        tSSLTransportParameters8.requireClientAuth(true);
        tSSLTransportParameters8.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray6);
    }

    @Test
    public void test09289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09289");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        tSSLTransportParameters20.setKeyStore("hi!", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09290");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09291");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider18 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration7.setoptions(strMap19);
        kerberosUserConfiguration0.options = strMap19;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider25 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider27 = kerberosUserConfiguration23.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap29;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test09292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09292");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09293");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration5.refresh();
        kerberosUserConfiguration5.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration9.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap17);
        kerberosUserConfiguration5.options = strMap17;
        kerberosUserConfiguration0.options = strMap17;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.lang.Class<?> wildcardClass26 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test09294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09294");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
    }

    @Test
    public void test09295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09295");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
    }

    @Test
    public void test09296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09296");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.lang.String str8 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap17);
        java.security.Provider provider19 = kerberosUserConfiguration11.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        java.lang.String str21 = kerberosUserConfiguration11.getType();
        javax.security.auth.login.Configuration.Parameters parameters22 = kerberosUserConfiguration11.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration28.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.options = strMap33;
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration23.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration23.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration40.refresh();
        java.security.Provider provider42 = kerberosUserConfiguration40.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration45.refresh();
        java.security.Provider provider47 = kerberosUserConfiguration45.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration50.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration50.getoptions();
        kerberosUserConfiguration45.options = strMap52;
        kerberosUserConfiguration40.options = strMap52;
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration40.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration40.options;
        kerberosUserConfiguration23.setoptions(strMap56);
        kerberosUserConfiguration11.setoptions(strMap56);
        kerberosUserConfiguration0.setoptions(strMap56);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        kerberosUserConfiguration60.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = null;
        kerberosUserConfiguration65.setoptions(strMap66);
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration65.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration65.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration65.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.options = strMap70;
        kerberosUserConfiguration60.refresh();
        javax.security.auth.login.Configuration.Parameters parameters73 = kerberosUserConfiguration60.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration60.getoptions();
        kerberosUserConfiguration0.setoptions(strMap74);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(parameters22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(parameters35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap68);
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(parameters73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
    }

    @Test
    public void test09297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09297");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.lang.String str4 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider10 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test09298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09298");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        tSSLTransportParameters27.setKeyStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09299");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10);
        tSSLTransportParameters16.setKeyStore("hi!", "");
        tSSLTransportParameters16.setKeyStore("hi!", "", "hi!", "hi!");
        tSSLTransportParameters16.setKeyStore("", "");
        tSSLTransportParameters16.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09300");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        tSSLTransportParameters33.setTrustStore("", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09301");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        tSSLTransportParameters26.setTrustStore("", "", "", "");
        tSSLTransportParameters26.setTrustStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters26.setTrustStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters26.setTrustStore("hi!", "hi!", "", "");
        tSSLTransportParameters26.setKeyStore("hi!", "");
        tSSLTransportParameters26.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters26.setTrustStore("hi!", "", "hi!", "");
        java.lang.Class<?> wildcardClass60 = tSSLTransportParameters26.getClass();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(wildcardClass60);
    }

    @Test
    public void test09302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09302");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration2 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = null;
        kerberosUserConfiguration2.setoptions(strMap3);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration2.options;
        kerberosUserConfiguration2.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration2.options = strMap12;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration2.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration2.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration2.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap17);
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.options;
        java.security.Provider provider24 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.Class<?> wildcardClass26 = strMap25.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test09303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09303");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        tSSLTransportParameters26.setKeyStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters26.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09304");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        tSSLTransportParameters19.setKeyStore("", "", "", "hi!");
        tSSLTransportParameters19.setTrustStore("hi!", "hi!");
        tSSLTransportParameters19.setTrustStore("hi!", "", "hi!", "");
        tSSLTransportParameters19.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test09305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09305");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration12.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        java.security.Provider provider18 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration16.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider26 = kerberosUserConfiguration16.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration16.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration16.getoptions();
        kerberosUserConfiguration12.setoptions(strMap29);
        kerberosUserConfiguration0.setoptions(strMap29);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
    }

    @Test
    public void test09306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09306");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09307");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray15 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
    }

    @Test
    public void test09308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09308");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        tSSLTransportParameters20.setTrustStore("", "hi!");
        tSSLTransportParameters20.setKeyStore("", "", "", "hi!");
        tSSLTransportParameters20.setTrustStore("hi!", "hi!");
        tSSLTransportParameters20.setKeyStore("hi!", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test09309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09309");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09310");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters23.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09311");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        tSSLTransportParameters25.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09312");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        java.lang.String str12 = kerberosUserConfiguration7.getType();
        java.lang.String str13 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap15;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray18 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.lang.String str19 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.options;
        java.lang.String str21 = kerberosUserConfiguration1.getType();
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNotNull(strMap24);
    }

    @Test
    public void test09313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09313");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        tSSLTransportParameters29.requireClientAuth(false);
        tSSLTransportParameters29.requireClientAuth(false);
        tSSLTransportParameters29.setTrustStore("hi!", "hi!");
        tSSLTransportParameters29.setTrustStore("hi!", "");
        tSSLTransportParameters29.setKeyStore("hi!", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09314");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        kerberosUserConfiguration7.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration0.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration31.refresh();
        kerberosUserConfiguration31.refresh();
        kerberosUserConfiguration31.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.options = strMap38;
        java.lang.String str40 = kerberosUserConfiguration31.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration31.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str43 = kerberosUserConfiguration31.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.options;
        java.lang.String str46 = kerberosUserConfiguration44.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.options;
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration44.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = null;
        kerberosUserConfiguration49.setoptions(strMap50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration49.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap60);
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.setoptions(strMap64);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration63.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration63.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration71 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration71.refresh();
        java.security.Provider provider73 = kerberosUserConfiguration71.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration71.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration63.setoptions(strMap74);
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap77);
        kerberosUserConfiguration44.options = strMap77;
        kerberosUserConfiguration31.options = strMap77;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration82 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration82.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration82);
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration82.getoptions();
        kerberosUserConfiguration31.options = strMap85;
        java.security.Provider provider87 = kerberosUserConfiguration31.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration0.options = strMap88;
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass92 = strMap91.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNull(provider73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test09315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09315");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        tSSLTransportParameters30.requireClientAuth(false);
        tSSLTransportParameters30.requireClientAuth(true);
        tSSLTransportParameters30.setKeyStore("", "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09316");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.setoptions(strMap12);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
    }

    @Test
    public void test09317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09317");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray10 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray12 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        kerberosUserConfiguration19.options = strMap26;
        kerberosUserConfiguration14.options = strMap26;
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration14.getParameters();
        java.lang.String str30 = kerberosUserConfiguration14.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray34 = kerberosUserConfiguration32.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.options;
        kerberosUserConfiguration14.setoptions(strMap35);
        kerberosUserConfiguration1.setoptions(strMap35);
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters38);
    }

    @Test
    public void test09318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09318");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.lang.String str9 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration11.refresh();
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap22);
        kerberosUserConfiguration11.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration11.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration29.refresh();
        kerberosUserConfiguration29.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str35 = kerberosUserConfiguration33.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap41);
        kerberosUserConfiguration33.setoptions(strMap41);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration29.options = strMap44;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration47.getoptions();
        java.security.Provider provider50 = kerberosUserConfiguration47.getProvider();
        java.lang.String str51 = kerberosUserConfiguration47.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration55.refresh();
        java.security.Provider provider57 = kerberosUserConfiguration55.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap58);
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration52.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration52.options;
        kerberosUserConfiguration47.options = strMap62;
        kerberosUserConfiguration29.options = strMap62;
        java.lang.String str65 = kerberosUserConfiguration29.getType();
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration29.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration69.refresh();
        java.security.Provider provider71 = kerberosUserConfiguration69.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration74 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration74.refresh();
        java.security.Provider provider76 = kerberosUserConfiguration74.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration74.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration79.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration79.getoptions();
        kerberosUserConfiguration74.options = strMap81;
        kerberosUserConfiguration69.options = strMap81;
        javax.security.auth.login.Configuration.Parameters parameters84 = kerberosUserConfiguration69.getParameters();
        kerberosUserConfiguration69.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration69.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration69.getoptions();
        kerberosUserConfiguration29.setoptions(strMap87);
        kerberosUserConfiguration11.options = strMap87;
        kerberosUserConfiguration0.options = strMap87;
        java.lang.String str91 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(provider50);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNull(provider71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(provider76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNull(parameters84);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNull(str91);
    }

    @Test
    public void test09319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09319");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        java.lang.Class<?> wildcardClass23 = tSSLTransportParameters22.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test09320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09320");
        java.lang.String[] strArray1 = null;
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters2 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray1);
        tSSLTransportParameters2.requireClientAuth(false);
        tSSLTransportParameters2.setTrustStore("", "");
        tSSLTransportParameters2.setTrustStore("", "");
        tSSLTransportParameters2.setTrustStore("", "");
        tSSLTransportParameters2.setTrustStore("hi!", "hi!");
    }

    @Test
    public void test09321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09321");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(parameters5);
    }

    @Test
    public void test09322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09322");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration19.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration19.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.setoptions(strMap34);
        kerberosUserConfiguration0.setoptions(strMap34);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test09323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09323");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration5.refresh();
        java.security.Provider provider7 = kerberosUserConfiguration5.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration10.getoptions();
        kerberosUserConfiguration5.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap14);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        java.lang.String str19 = kerberosUserConfiguration0.getType();
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09324");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
    }

    @Test
    public void test09325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09325");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = null;
        kerberosUserConfiguration3.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.options;
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.setoptions(strMap17);
        kerberosUserConfiguration3.options = strMap17;
        kerberosUserConfiguration1.options = strMap17;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        kerberosUserConfiguration38.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.options = strMap48;
        kerberosUserConfiguration35.setoptions(strMap48);
        kerberosUserConfiguration35.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap52;
        kerberosUserConfiguration1.setoptions(strMap52);
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = null;
        kerberosUserConfiguration56.setoptions(strMap57);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.options;
        java.lang.String str60 = kerberosUserConfiguration56.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration62.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration62);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration66.refresh();
        java.security.Provider provider68 = kerberosUserConfiguration66.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration66.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration62.setoptions(strMap69);
        kerberosUserConfiguration56.options = strMap69;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration73 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray75 = kerberosUserConfiguration73.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration73);
        java.lang.String str77 = kerberosUserConfiguration73.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration79.refresh();
        java.security.Provider provider81 = kerberosUserConfiguration79.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration79.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration79.getoptions();
        kerberosUserConfiguration73.options = strMap83;
        kerberosUserConfiguration56.setoptions(strMap83);
        kerberosUserConfiguration1.options = strMap83;
        java.security.Provider provider87 = kerberosUserConfiguration1.getProvider();
        java.lang.String str88 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(strMap59);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(provider68);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray75);
        org.junit.Assert.assertNull(str77);
        org.junit.Assert.assertNull(provider81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNull(provider87);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strMap90);
    }

    @Test
    public void test09326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09326");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        java.lang.String str7 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration14.options = strMap21;
        kerberosUserConfiguration9.options = strMap21;
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration9.getParameters();
        kerberosUserConfiguration9.refresh();
        java.lang.String str26 = kerberosUserConfiguration9.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration9.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap29;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
    }

    @Test
    public void test09327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09327");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider13 = kerberosUserConfiguration0.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        kerberosUserConfiguration14.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap24;
        javax.security.auth.login.Configuration.Parameters parameters26 = kerberosUserConfiguration14.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray28 = kerberosUserConfiguration14.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str30 = kerberosUserConfiguration14.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration14.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration34.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.options = strMap37;
        kerberosUserConfiguration0.setoptions(strMap37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str42 = kerberosUserConfiguration40.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration40);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.setoptions(strMap48);
        kerberosUserConfiguration40.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration40.getoptions();
        kerberosUserConfiguration0.setoptions(strMap51);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str54 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(provider13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(parameters26);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str54);
    }

    @Test
    public void test09328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09328");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09329");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test09330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09330");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration7.refresh();
        java.security.Provider provider9 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.options = strMap11;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str20 = kerberosUserConfiguration18.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap26);
        kerberosUserConfiguration18.setoptions(strMap26);
        kerberosUserConfiguration14.options = strMap26;
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration14.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap31;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters35 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(parameters35);
    }

    @Test
    public void test09331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09331");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap17;
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration7.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration24.refresh();
        java.security.Provider provider26 = kerberosUserConfiguration24.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration29.options = strMap36;
        kerberosUserConfiguration24.options = strMap36;
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration7.setoptions(strMap40);
        kerberosUserConfiguration1.setoptions(strMap40);
        java.security.Provider provider43 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray45 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNull(parameters50);
    }

    @Test
    public void test09332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09332");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        tSSLTransportParameters27.requireClientAuth(true);
        tSSLTransportParameters27.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09333");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test09334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09334");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass34 = strMap33.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test09335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09335");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        tSSLTransportParameters28.requireClientAuth(true);
        tSSLTransportParameters28.setKeyStore("hi!", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09336");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test09337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09337");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        tSSLTransportParameters22.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09338");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09339");
        java.lang.String[] strArray8 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray8, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray8);
        tSSLTransportParameters11.requireClientAuth(false);
        tSSLTransportParameters11.requireClientAuth(true);
        tSSLTransportParameters11.requireClientAuth(true);
        tSSLTransportParameters11.setTrustStore("hi!", "");
        tSSLTransportParameters11.requireClientAuth(true);
        tSSLTransportParameters11.setKeyStore("hi!", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray8);
    }

    @Test
    public void test09340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09340");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test09341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09341");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.options = strMap27;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration30.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.options = strMap43;
        kerberosUserConfiguration30.setoptions(strMap43);
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.options = strMap47;
        kerberosUserConfiguration0.options = strMap47;
        java.lang.String str50 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str55 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider58 = kerberosUserConfiguration57.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration59.refresh();
        kerberosUserConfiguration59.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = null;
        kerberosUserConfiguration63.setoptions(strMap64);
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration63.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration68.refresh();
        java.security.Provider provider70 = kerberosUserConfiguration68.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration63.setoptions(strMap71);
        kerberosUserConfiguration59.options = strMap71;
        kerberosUserConfiguration57.setoptions(strMap71);
        kerberosUserConfiguration0.options = strMap71;
        javax.security.auth.login.Configuration.Parameters parameters76 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNull(strMap62);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNull(provider70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(parameters76);
    }

    @Test
    public void test09342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09342");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap19;
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration9.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray23 = kerberosUserConfiguration9.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration9.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray26 = kerberosUserConfiguration9.getAppConfigurationEntry("");
        java.security.Provider provider27 = kerberosUserConfiguration9.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.options = strMap40;
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration30.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration30.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap45);
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        kerberosUserConfiguration48.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = null;
        kerberosUserConfiguration53.setoptions(strMap54);
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration53.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration53.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration53.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration48.options = strMap58;
        javax.security.auth.login.Configuration.Parameters parameters60 = kerberosUserConfiguration48.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray62 = kerberosUserConfiguration48.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration48.options;
        kerberosUserConfiguration28.options = strMap65;
        kerberosUserConfiguration9.setoptions(strMap65);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = null;
        kerberosUserConfiguration68.setoptions(strMap69);
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration68.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration68.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.setoptions(strMap76);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.options;
        kerberosUserConfiguration75.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration80.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = null;
        kerberosUserConfiguration80.options = strMap82;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration84 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration84.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration80.setoptions(strMap85);
        kerberosUserConfiguration75.setoptions(strMap85);
        kerberosUserConfiguration68.options = strMap85;
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration68.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap89);
        kerberosUserConfiguration0.options = strMap89;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray93 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.Class<?> wildcardClass94 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNull(strMap57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(parameters60);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap81);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray93);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test09343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09343");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration19.options;
        java.lang.String str21 = kerberosUserConfiguration19.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration23.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration28);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        java.security.Provider provider34 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.setoptions(strMap35);
        kerberosUserConfiguration23.setoptions(strMap35);
        kerberosUserConfiguration19.options = strMap35;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration19.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration0.options = strMap40;
        java.lang.Class<?> wildcardClass42 = strMap40.getClass();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test09344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09344");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09345");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        tSSLTransportParameters32.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09346");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str9 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str13 = kerberosUserConfiguration11.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap19);
        kerberosUserConfiguration11.setoptions(strMap19);
        kerberosUserConfiguration7.options = strMap19;
        java.lang.String str23 = kerberosUserConfiguration7.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration7.options = strMap33;
        kerberosUserConfiguration0.setoptions(strMap33);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.options;
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration36.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.setoptions(strMap42);
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration41.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration41);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration36.setoptions(strMap47);
        kerberosUserConfiguration0.options = strMap47;
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = null;
        kerberosUserConfiguration0.setoptions(strMap50);
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(parameters52);
    }

    @Test
    public void test09347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09347");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str12 = kerberosUserConfiguration10.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration15.refresh();
        java.security.Provider provider17 = kerberosUserConfiguration15.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider19 = kerberosUserConfiguration15.getProvider();
        java.lang.String str20 = kerberosUserConfiguration15.getType();
        javax.security.auth.login.Configuration.Parameters parameters21 = kerberosUserConfiguration15.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration23.getoptions();
        java.security.Provider provider26 = kerberosUserConfiguration23.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration15.options = strMap28;
        kerberosUserConfiguration10.setoptions(strMap28);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration10);
        java.security.Provider provider32 = kerberosUserConfiguration10.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration10.options = strMap38;
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration10.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration10.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap41;
        java.lang.String str43 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNull(parameters21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str43);
    }

    @Test
    public void test09348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09348");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters21.setKeyStore("hi!", "hi!", "hi!", "");
        tSSLTransportParameters21.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters21.setKeyStore("", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09349");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration7.refresh();
        java.security.Provider provider9 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.options = strMap11;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        java.security.Provider provider18 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap19);
        kerberosUserConfiguration1.options = strMap19;
        java.lang.String str22 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration1.options = strMap23;
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test09350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09350");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        tSSLTransportParameters19.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09351");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        tSSLTransportParameters30.setKeyStore("", "", "", "hi!");
        tSSLTransportParameters30.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09352");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        tSSLTransportParameters29.setTrustStore("hi!", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09353");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration17.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.options = strMap27;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration30.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration30);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        kerberosUserConfiguration33.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration38.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration33.options = strMap43;
        kerberosUserConfiguration30.setoptions(strMap43);
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration17.options = strMap47;
        kerberosUserConfiguration0.options = strMap47;
        java.lang.String str50 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.Parameters parameters52 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str50);
        org.junit.Assert.assertNull(parameters52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
    }

    @Test
    public void test09354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09354");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        tSSLTransportParameters26.setTrustStore("", "", "", "");
        tSSLTransportParameters26.setKeyStore("", "", "hi!", "hi!");
        tSSLTransportParameters26.setTrustStore("hi!", "hi!");
        tSSLTransportParameters26.requireClientAuth(false);
        tSSLTransportParameters26.setKeyStore("hi!", "");
        tSSLTransportParameters26.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09355");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str10 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test09356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09356");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray8 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNotNull(strMap11);
    }

    @Test
    public void test09357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09357");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration5.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap10);
        kerberosUserConfiguration0.setoptions(strMap10);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider18 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test09358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09358");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        tSSLTransportParameters32.setTrustStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09359");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters19.setKeyStore("hi!", "", "hi!", "");
        tSSLTransportParameters19.setTrustStore("", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09360");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration4.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap12);
        kerberosUserConfiguration0.options = strMap12;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test09361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09361");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str18 = kerberosUserConfiguration0.getType();
        java.security.Provider provider19 = kerberosUserConfiguration0.getProvider();
        java.lang.String str20 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNull(str20);
    }

    @Test
    public void test09362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09362");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration18.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration23.options = strMap25;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap28);
        kerberosUserConfiguration18.setoptions(strMap28);
        kerberosUserConfiguration11.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration8.setoptions(strMap32);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        java.lang.String str38 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration40);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration44.refresh();
        java.security.Provider provider46 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration40.setoptions(strMap47);
        kerberosUserConfiguration34.options = strMap47;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray53 = kerberosUserConfiguration51.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration51);
        java.lang.String str55 = kerberosUserConfiguration51.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration51.options = strMap61;
        kerberosUserConfiguration34.setoptions(strMap61);
        kerberosUserConfiguration34.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration8.options = strMap65;
        kerberosUserConfiguration1.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray53);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test09363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09363");
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test09364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09364");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        tSSLTransportParameters29.setKeyStore("", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09365");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider2 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration12.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap17);
        kerberosUserConfiguration6.options = strMap17;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration6.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray32 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration6.getoptions();
        java.lang.String str34 = kerberosUserConfiguration6.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration0.setoptions(strMap36);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test09366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09366");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap17;
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration7.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration24.refresh();
        java.security.Provider provider26 = kerberosUserConfiguration24.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration29.options = strMap36;
        kerberosUserConfiguration24.options = strMap36;
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration7.setoptions(strMap40);
        kerberosUserConfiguration1.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration46.refresh();
        java.security.Provider provider48 = kerberosUserConfiguration46.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration46.getoptions();
        kerberosUserConfiguration1.options = strMap50;
        java.security.Provider provider52 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider52);
    }

    @Test
    public void test09367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09367");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09368");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration13.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap20);
        kerberosUserConfiguration1.setoptions(strMap20);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        kerberosUserConfiguration48.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration53.options = strMap55;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration48.setoptions(strMap58);
        kerberosUserConfiguration41.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration25.setoptions(strMap62);
        kerberosUserConfiguration1.options = strMap62;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider66 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test09369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09369");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        tSSLTransportParameters36.setTrustStore("", "", "", "hi!");
        java.lang.Class<?> wildcardClass42 = tSSLTransportParameters36.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test09370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09370");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray6 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration13.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.options = strMap18;
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration8.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration8.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration8.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration8.getAppConfigurationEntry("");
        java.security.Provider provider26 = kerberosUserConfiguration8.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.options;
        kerberosUserConfiguration29.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = null;
        kerberosUserConfiguration34.setoptions(strMap35);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration34.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.options = strMap39;
        javax.security.auth.login.Configuration.Parameters parameters41 = kerberosUserConfiguration29.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray43 = kerberosUserConfiguration29.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration27.setoptions(strMap44);
        kerberosUserConfiguration27.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = null;
        kerberosUserConfiguration47.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration47.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.setoptions(strMap53);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration52.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration47.options = strMap57;
        javax.security.auth.login.Configuration.Parameters parameters59 = kerberosUserConfiguration47.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray61 = kerberosUserConfiguration47.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration47.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration27.options = strMap64;
        kerberosUserConfiguration8.setoptions(strMap64);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration67 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = null;
        kerberosUserConfiguration67.setoptions(strMap68);
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration67.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration67.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap73 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration74 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap75 = null;
        kerberosUserConfiguration74.setoptions(strMap75);
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration74.options;
        kerberosUserConfiguration74.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration79 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration79.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = null;
        kerberosUserConfiguration79.options = strMap81;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration83 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration83.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration79.setoptions(strMap84);
        kerberosUserConfiguration74.setoptions(strMap84);
        kerberosUserConfiguration67.options = strMap84;
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration67.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap88);
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration8.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration1.setoptions(strMap91);
        java.security.Provider provider93 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = null;
        kerberosUserConfiguration1.setoptions(strMap95);
        java.util.HashMap<java.lang.String, java.lang.String> strMap97 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters41);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap50);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(parameters59);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(strMap70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNull(strMap77);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(provider93);
        org.junit.Assert.assertNull(strMap97);
    }

    @Test
    public void test09371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09371");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.lang.String str22 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration18.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        java.lang.String str36 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration41.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration41.getoptions();
        java.security.Provider provider44 = kerberosUserConfiguration41.getProvider();
        java.lang.String str45 = kerberosUserConfiguration41.getType();
        java.lang.String str46 = kerberosUserConfiguration41.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration0.setoptions(strMap47);
        javax.security.auth.login.Configuration.Parameters parameters49 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters50 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider51 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(parameters49);
        org.junit.Assert.assertNull(parameters50);
        org.junit.Assert.assertNull(provider51);
    }

    @Test
    public void test09372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09372");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap11);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration15.refresh();
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters23 = kerberosUserConfiguration22.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration24.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration31);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.setoptions(strMap38);
        kerberosUserConfiguration24.options = strMap38;
        kerberosUserConfiguration22.options = strMap38;
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration22.getoptions();
        kerberosUserConfiguration15.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration48.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration48.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap57;
        kerberosUserConfiguration0.refresh();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(parameters23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNull(strMap56);
        org.junit.Assert.assertNotNull(strMap57);
    }

    @Test
    public void test09373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09373");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test09374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09374");
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray10, false);
        tSSLTransportParameters17.setKeyStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters17.setTrustStore("", "hi!");
        tSSLTransportParameters17.setTrustStore("hi!", "");
        tSSLTransportParameters17.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09375");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider10 = kerberosUserConfiguration1.getProvider();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass11 = provider10.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNull(provider10);
    }

    @Test
    public void test09376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09376");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        tSSLTransportParameters21.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09377");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray37 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = null;
        kerberosUserConfiguration38.setoptions(strMap39);
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.options;
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration38.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = null;
        kerberosUserConfiguration43.setoptions(strMap44);
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration43);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration48.refresh();
        kerberosUserConfiguration48.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration52.setoptions(strMap53);
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration52.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap60);
        kerberosUserConfiguration48.options = strMap60;
        kerberosUserConfiguration43.options = strMap60;
        kerberosUserConfiguration38.options = strMap60;
        java.security.Provider provider65 = kerberosUserConfiguration38.getProvider();
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap67;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray37);
        org.junit.Assert.assertNull(strMap41);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNull(strMap46);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNull(provider65);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test09378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09378");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration13.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration13);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration21.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration21.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.options = strMap26;
        kerberosUserConfiguration13.setoptions(strMap26);
        kerberosUserConfiguration13.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap30;
        java.lang.String str32 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.security.Provider provider36 = kerberosUserConfiguration34.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration39.getoptions();
        kerberosUserConfiguration34.options = strMap41;
        java.lang.String str43 = kerberosUserConfiguration34.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration34.options;
        kerberosUserConfiguration0.options = strMap44;
        java.security.Provider provider46 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters47 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider48 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNull(parameters47);
        org.junit.Assert.assertNull(provider48);
    }

    @Test
    public void test09379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09379");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09380");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str21 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test09381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09381");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap12);
        kerberosUserConfiguration0.setoptions(strMap12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        kerberosUserConfiguration15.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration20.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        kerberosUserConfiguration15.setoptions(strMap25);
        kerberosUserConfiguration0.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test09382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09382");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        tSSLTransportParameters25.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters25.setTrustStore("", "");
        tSSLTransportParameters25.setKeyStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09383");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        java.lang.String str12 = kerberosUserConfiguration7.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider18 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider21 = kerberosUserConfiguration14.getProvider();
        java.lang.String str22 = kerberosUserConfiguration14.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap23);
        java.lang.String str25 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration1.setoptions(strMap26);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = null;
        kerberosUserConfiguration28.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration28.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration28.options = strMap38;
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration28.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray42 = kerberosUserConfiguration28.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str44 = kerberosUserConfiguration28.getType();
        java.lang.String str45 = kerberosUserConfiguration28.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration28.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap47;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = null;
        kerberosUserConfiguration49.setoptions(strMap50);
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration49.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.security.Provider provider59 = kerberosUserConfiguration57.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap60);
        kerberosUserConfiguration49.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap64);
        java.lang.String str66 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNull(provider59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test09384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09384");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        tSSLTransportParameters27.setTrustStore("hi!", "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09385");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str14 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration16.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration1.setoptions(strMap22);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        java.security.Provider provider34 = kerberosUserConfiguration32.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap35);
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap38);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test09386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09386");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09387");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        tSSLTransportParameters24.setTrustStore("hi!", "", "hi!", "");
        tSSLTransportParameters24.setKeyStore("hi!", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09388");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.security.Provider provider2 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        javax.security.auth.login.Configuration.Parameters parameters10 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration12.refresh();
        java.security.Provider provider14 = kerberosUserConfiguration12.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.setoptions(strMap15);
        kerberosUserConfiguration3.options = strMap15;
        kerberosUserConfiguration1.setoptions(strMap15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration19.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration19.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration36.refresh();
        java.security.Provider provider38 = kerberosUserConfiguration36.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration41.refresh();
        java.security.Provider provider43 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration46.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration46.getoptions();
        kerberosUserConfiguration41.options = strMap48;
        kerberosUserConfiguration36.options = strMap48;
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration36.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration36.options;
        kerberosUserConfiguration19.setoptions(strMap52);
        kerberosUserConfiguration1.setoptions(strMap52);
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration1.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNull(provider2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters10);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNull(provider38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test09389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09389");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration5);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration10 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration10.refresh();
        kerberosUserConfiguration10.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration10.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        javax.security.auth.login.Configuration.Parameters parameters17 = kerberosUserConfiguration14.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap22);
        kerberosUserConfiguration10.options = strMap22;
        kerberosUserConfiguration5.options = strMap22;
        kerberosUserConfiguration0.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration33.options = strMap40;
        kerberosUserConfiguration28.options = strMap40;
        kerberosUserConfiguration0.setoptions(strMap40);
        java.lang.String str44 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration52.options = strMap59;
        kerberosUserConfiguration47.options = strMap59;
        kerberosUserConfiguration0.setoptions(strMap59);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration63 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration63.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str65 = kerberosUserConfiguration63.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration63);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration68 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration68.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration68.setoptions(strMap71);
        kerberosUserConfiguration63.setoptions(strMap71);
        kerberosUserConfiguration0.setoptions(strMap71);
        java.lang.String str75 = kerberosUserConfiguration0.getType();
        java.lang.String str76 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str80 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(parameters17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNull(str80);
        org.junit.Assert.assertNotNull(strMap81);
    }

    @Test
    public void test09390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09390");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        java.lang.String str11 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = null;
        kerberosUserConfiguration19.setoptions(strMap20);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.options;
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.options = strMap29;
        kerberosUserConfiguration16.setoptions(strMap29);
        kerberosUserConfiguration16.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration33.refresh();
        kerberosUserConfiguration33.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str39 = kerberosUserConfiguration37.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration42.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration42.setoptions(strMap45);
        kerberosUserConfiguration37.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration37.getoptions();
        kerberosUserConfiguration33.options = strMap48;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration51.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration51.getoptions();
        java.security.Provider provider54 = kerberosUserConfiguration51.getProvider();
        java.lang.String str55 = kerberosUserConfiguration51.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration59.refresh();
        java.security.Provider provider61 = kerberosUserConfiguration59.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration56.setoptions(strMap62);
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration56.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration56.options;
        kerberosUserConfiguration51.options = strMap66;
        kerberosUserConfiguration33.options = strMap66;
        java.lang.String str69 = kerberosUserConfiguration33.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration33.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters71 = kerberosUserConfiguration33.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration16.setoptions(strMap72);
        java.util.HashMap<java.lang.String, java.lang.String> strMap74 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration75 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap76 = null;
        kerberosUserConfiguration75.setoptions(strMap76);
        java.util.HashMap<java.lang.String, java.lang.String> strMap78 = kerberosUserConfiguration75.options;
        kerberosUserConfiguration75.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration80 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap81 = null;
        kerberosUserConfiguration80.setoptions(strMap81);
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration80.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration80.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration80.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration75.options = strMap85;
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration75.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray89 = kerberosUserConfiguration75.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap90 = kerberosUserConfiguration75.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration75.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration75);
        java.security.Provider provider93 = kerberosUserConfiguration75.getProvider();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration75);
        java.util.HashMap<java.lang.String, java.lang.String> strMap95 = kerberosUserConfiguration75.options;
        kerberosUserConfiguration16.setoptions(strMap95);
        kerberosUserConfiguration0.options = strMap95;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(parameters71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNull(strMap78);
        org.junit.Assert.assertNull(strMap83);
        org.junit.Assert.assertNull(strMap84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(parameters87);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNull(provider93);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test09391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09391");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider25 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration20.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration20);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray31 = kerberosUserConfiguration20.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration20.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration20.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap36;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray31);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test09392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09392");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        tSSLTransportParameters21.setKeyStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09393");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        tSSLTransportParameters26.requireClientAuth(true);
        tSSLTransportParameters26.setKeyStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09394");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration1.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration26.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration31.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.options = strMap36;
        kerberosUserConfiguration23.setoptions(strMap36);
        kerberosUserConfiguration23.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration23.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters44 = kerberosUserConfiguration43.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration45.refresh();
        kerberosUserConfiguration45.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration45.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration52);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration56.refresh();
        java.security.Provider provider58 = kerberosUserConfiguration56.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration52.setoptions(strMap59);
        kerberosUserConfiguration45.options = strMap59;
        kerberosUserConfiguration43.options = strMap59;
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration43.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap64);
        kerberosUserConfiguration1.setoptions(strMap64);
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters44);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test09395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09395");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
    }

    @Test
    public void test09396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09396");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration1.getParameters();
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration12.refresh();
        kerberosUserConfiguration12.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap23);
        kerberosUserConfiguration12.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration1.getoptions();
        java.lang.String str29 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray33 = kerberosUserConfiguration31.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration31.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration37.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration39 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = null;
        kerberosUserConfiguration39.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration39.options;
        kerberosUserConfiguration39.refresh();
        kerberosUserConfiguration39.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration39.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration46 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration46.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration46);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration50.refresh();
        java.security.Provider provider52 = kerberosUserConfiguration50.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration46.setoptions(strMap53);
        kerberosUserConfiguration39.options = strMap53;
        kerberosUserConfiguration37.options = strMap53;
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration37.getoptions();
        kerberosUserConfiguration31.setoptions(strMap57);
        kerberosUserConfiguration1.setoptions(strMap57);
        javax.security.auth.login.Configuration.Parameters parameters60 = kerberosUserConfiguration1.getParameters();
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNull(strMap42);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(parameters60);
    }

    @Test
    public void test09397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09397");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters21.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09398");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        java.security.Provider provider8 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration13.setoptions(strMap14);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.options;
        kerberosUserConfiguration13.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration18.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.options = strMap23;
        javax.security.auth.login.Configuration.Parameters parameters25 = kerberosUserConfiguration13.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration13.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.setoptions(strMap28);
        kerberosUserConfiguration11.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration31.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration36.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration31.options = strMap41;
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration31.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray45 = kerberosUserConfiguration31.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration31.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration31.options;
        kerberosUserConfiguration11.options = strMap48;
        kerberosUserConfiguration0.setoptions(strMap48);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray52 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(parameters25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(strMap40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray52);
    }

    @Test
    public void test09399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09399");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNotNull(strMap14);
    }

    @Test
    public void test09400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09400");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray7, false);
        tSSLTransportParameters10.setKeyStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters10.setKeyStore("", "hi!", "hi!", "");
        tSSLTransportParameters10.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test09401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09401");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        tSSLTransportParameters26.setTrustStore("", "", "", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09402");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration23.getProvider();
        java.lang.String str30 = kerberosUserConfiguration23.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration32);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.setoptions(strMap41);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration40.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.options = strMap45;
        kerberosUserConfiguration32.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap55);
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration49.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration49.options;
        kerberosUserConfiguration32.setoptions(strMap59);
        kerberosUserConfiguration23.setoptions(strMap59);
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration23.getParameters();
        java.lang.String str63 = kerberosUserConfiguration23.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap64;
        java.security.Provider provider66 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider67 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNull(provider67);
    }

    @Test
    public void test09403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09403");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        tSSLTransportParameters24.requireClientAuth(false);
        tSSLTransportParameters24.setKeyStore("hi!", "hi!", "", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09404");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration23.setoptions(strMap24);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration23.refresh();
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider29 = kerberosUserConfiguration23.getProvider();
        java.lang.String str30 = kerberosUserConfiguration23.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration32.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration32);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        kerberosUserConfiguration35.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = null;
        kerberosUserConfiguration40.setoptions(strMap41);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration40.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration35.options = strMap45;
        kerberosUserConfiguration32.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration49.setoptions(strMap55);
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration49.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration49.options;
        kerberosUserConfiguration32.setoptions(strMap59);
        kerberosUserConfiguration23.setoptions(strMap59);
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration23.getParameters();
        java.lang.String str63 = kerberosUserConfiguration23.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap64 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap64;
        java.security.Provider provider66 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(provider29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap43);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(provider66);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test09405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09405");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        tSSLTransportParameters30.setKeyStore("hi!", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09406");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        tSSLTransportParameters36.setKeyStore("", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09407");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        tSSLTransportParameters30.setKeyStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09408");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration6.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap22);
        kerberosUserConfiguration8.options = strMap22;
        kerberosUserConfiguration6.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap27;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration36 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = null;
        kerberosUserConfiguration36.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration36.options;
        java.lang.String str40 = kerberosUserConfiguration36.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration36.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap41);
        kerberosUserConfiguration29.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration29.getoptions();
        kerberosUserConfiguration0.setoptions(strMap44);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = null;
        kerberosUserConfiguration0.setoptions(strMap47);
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strMap49);
    }

    @Test
    public void test09409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09409");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        tSSLTransportParameters21.setTrustStore("", "hi!");
        tSSLTransportParameters21.setKeyStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters21.setTrustStore("", "", "hi!", "");
        tSSLTransportParameters21.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09410");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09411");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09412");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.security.Provider provider5 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test09413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09413");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        org.junit.Assert.assertNull(parameters2);
    }

    @Test
    public void test09414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09414");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration4.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration13.refresh();
        java.security.Provider provider15 = kerberosUserConfiguration13.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap16);
        kerberosUserConfiguration4.setoptions(strMap16);
        kerberosUserConfiguration0.options = strMap16;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test09415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09415");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider23 = kerberosUserConfiguration0.getProvider();
        java.lang.String str24 = kerberosUserConfiguration0.getType();
        java.lang.Class<?> wildcardClass25 = kerberosUserConfiguration0.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test09416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09416");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        tSSLTransportParameters21.requireClientAuth(false);
        tSSLTransportParameters21.setTrustStore("", "");
        tSSLTransportParameters21.setKeyStore("hi!", "hi!");
        tSSLTransportParameters21.requireClientAuth(false);
        tSSLTransportParameters21.requireClientAuth(true);
        tSSLTransportParameters21.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09417");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration3.refresh();
        kerberosUserConfiguration3.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str9 = kerberosUserConfiguration7.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap15);
        kerberosUserConfiguration7.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration3.options = strMap18;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration21.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration21.getoptions();
        java.security.Provider provider24 = kerberosUserConfiguration21.getProvider();
        java.lang.String str25 = kerberosUserConfiguration21.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration26.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration21.options = strMap36;
        kerberosUserConfiguration3.options = strMap36;
        kerberosUserConfiguration1.setoptions(strMap36);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.Class<?> wildcardClass41 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test09418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09418");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration7.refresh();
        java.security.Provider provider9 = kerberosUserConfiguration7.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.options = strMap11;
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider14 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration16.refresh();
        java.security.Provider provider18 = kerberosUserConfiguration16.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider20 = kerberosUserConfiguration16.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration16.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap25;
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test09419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09419");
        java.lang.String[] strArray7 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray7);
        tSSLTransportParameters8.setTrustStore("", "");
        tSSLTransportParameters8.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test09420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09420");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration13.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap20);
        kerberosUserConfiguration1.setoptions(strMap20);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration1.options;
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(strMap25);
    }

    @Test
    public void test09421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09421");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration4.options = strMap6;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap11;
        java.lang.String str13 = kerberosUserConfiguration0.getType();
        java.lang.String str14 = kerberosUserConfiguration0.getType();
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration0.getParameters();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test09422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09422");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap23);
        kerberosUserConfiguration9.options = strMap23;
        kerberosUserConfiguration7.options = strMap23;
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.setoptions(strMap27);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.lang.String str31 = kerberosUserConfiguration29.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = null;
        kerberosUserConfiguration33.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration33.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration38);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration42.refresh();
        java.security.Provider provider44 = kerberosUserConfiguration42.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration38.setoptions(strMap45);
        kerberosUserConfiguration33.setoptions(strMap45);
        kerberosUserConfiguration29.options = strMap45;
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration29.options;
        kerberosUserConfiguration1.options = strMap49;
        javax.security.auth.login.Configuration.Parameters parameters51 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration52.refresh();
        kerberosUserConfiguration52.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration56 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration56.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration56);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration60.refresh();
        java.security.Provider provider62 = kerberosUserConfiguration60.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration56.setoptions(strMap63);
        kerberosUserConfiguration52.options = strMap63;
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap66;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray69 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNull(parameters51);
        org.junit.Assert.assertNull(strMap55);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray69);
    }

    @Test
    public void test09423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09423");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        tSSLTransportParameters21.setTrustStore("hi!", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09424");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        tSSLTransportParameters29.setTrustStore("", "", "", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09425");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09426");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        tSSLTransportParameters14.setKeyStore("hi!", "hi!");
        tSSLTransportParameters14.setKeyStore("hi!", "", "", "");
        tSSLTransportParameters14.setKeyStore("hi!", "");
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test09427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09427");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        tSSLTransportParameters22.requireClientAuth(true);
        tSSLTransportParameters22.setTrustStore("", "");
        tSSLTransportParameters22.setTrustStore("", "", "hi!", "");
        tSSLTransportParameters22.requireClientAuth(false);
        tSSLTransportParameters22.setTrustStore("hi!", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09428");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.lang.String str5 = kerberosUserConfiguration0.getType();
        java.lang.String str6 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration14.setoptions(strMap15);
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration14.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.options = strMap19;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.options = strMap21;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = null;
        kerberosUserConfiguration0.setoptions(strMap24);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap17);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test09429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09429");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        java.lang.String str6 = kerberosUserConfiguration1.getType();
        java.security.Provider provider7 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration8);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration13 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration13.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = null;
        kerberosUserConfiguration13.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration13.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration13.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration8.setoptions(strMap20);
        kerberosUserConfiguration1.setoptions(strMap20);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration1.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration25.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration25.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = null;
        kerberosUserConfiguration41.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration41.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        kerberosUserConfiguration48.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration53 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration53.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = null;
        kerberosUserConfiguration53.options = strMap55;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration57.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration53.setoptions(strMap58);
        kerberosUserConfiguration48.setoptions(strMap58);
        kerberosUserConfiguration41.options = strMap58;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration25.setoptions(strMap62);
        kerberosUserConfiguration1.options = strMap62;
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration1.getoptions();
        java.lang.String str66 = kerberosUserConfiguration1.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNull(provider7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(strMap44);
        org.junit.Assert.assertNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap54);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(strMap67);
    }

    @Test
    public void test09430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09430");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09431");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        tSSLTransportParameters37.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test09432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09432");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration6.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration1.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration20.getoptions();
        java.security.Provider provider23 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration1.setoptions(strMap24);
        kerberosUserConfiguration1.refresh();
        java.lang.String str27 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str27);
    }

    @Test
    public void test09433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09433");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, true);
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09434");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.options;
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getoptions();
        kerberosUserConfiguration9.options = strMap16;
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str19 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration1.options = strMap20;
        java.lang.String str22 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration24.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration24.getoptions();
        java.security.Provider provider27 = kerberosUserConfiguration24.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = null;
        kerberosUserConfiguration35.setoptions(strMap36);
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration35.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.options = strMap40;
        javax.security.auth.login.Configuration.Parameters parameters42 = kerberosUserConfiguration30.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray44 = kerberosUserConfiguration30.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration30.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration47 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration47.refresh();
        java.security.Provider provider49 = kerberosUserConfiguration47.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration47.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration52 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration52.refresh();
        java.security.Provider provider54 = kerberosUserConfiguration52.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration52.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration57 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration57.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration57.getoptions();
        kerberosUserConfiguration52.options = strMap59;
        kerberosUserConfiguration47.options = strMap59;
        javax.security.auth.login.Configuration.Parameters parameters62 = kerberosUserConfiguration47.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration47.options;
        kerberosUserConfiguration30.setoptions(strMap63);
        kerberosUserConfiguration24.setoptions(strMap63);
        java.lang.String str66 = kerberosUserConfiguration24.getType();
        java.lang.String str67 = kerberosUserConfiguration24.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap68);
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(provider27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters42);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(parameters62);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strMap68);
    }

    @Test
    public void test09435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09435");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration17.refresh();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration27.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration27.getoptions();
        kerberosUserConfiguration22.options = strMap29;
        kerberosUserConfiguration17.options = strMap29;
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration17.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration17.options;
        kerberosUserConfiguration0.setoptions(strMap33);
        java.security.Provider provider35 = kerberosUserConfiguration0.getProvider();
        java.lang.String str36 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray40 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray40);
    }

    @Test
    public void test09436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09436");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration5.options = strMap7;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap10);
        kerberosUserConfiguration0.setoptions(strMap10);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration25.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray29 = kerberosUserConfiguration25.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration25.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration25.getoptions();
        kerberosUserConfiguration19.options = strMap33;
        kerberosUserConfiguration0.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider37 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider38 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray29);
        org.junit.Assert.assertNull(parameters30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNull(provider38);
    }

    @Test
    public void test09437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09437");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration4.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration4.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap7);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        java.lang.String str20 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap21);
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration0.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str29 = kerberosUserConfiguration27.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap30;
        java.security.Provider provider32 = kerberosUserConfiguration0.getProvider();
        java.security.Provider provider33 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray35 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.security.Provider provider37 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray35);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
    }

    @Test
    public void test09438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09438");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09439");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray9 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration7.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration7.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration7.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration7.getoptions();
        kerberosUserConfiguration1.options = strMap15;
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration1.options;
        java.security.Provider provider18 = kerberosUserConfiguration1.getProvider();
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        javax.security.auth.login.Configuration.Parameters parameters34 = kerberosUserConfiguration22.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration22.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str38 = kerberosUserConfiguration22.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray41 = kerberosUserConfiguration22.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration22);
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration45.refresh();
        java.security.Provider provider47 = kerberosUserConfiguration45.getProvider();
        java.lang.String str48 = kerberosUserConfiguration45.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration50.refresh();
        java.security.Provider provider52 = kerberosUserConfiguration50.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider54 = kerberosUserConfiguration50.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration45.setoptions(strMap56);
        kerberosUserConfiguration22.options = strMap56;
        java.util.HashMap<java.lang.String, java.lang.String> strMap59 = kerberosUserConfiguration22.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap60 = kerberosUserConfiguration22.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap60;
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(parameters34);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray41);
        org.junit.Assert.assertNull(provider47);
        org.junit.Assert.assertNull(str48);
        org.junit.Assert.assertNull(provider52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNull(provider54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
    }

    @Test
    public void test09440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09440");
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters8 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray7);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters10 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray7, true);
        tSSLTransportParameters10.setKeyStore("hi!", "hi!");
        tSSLTransportParameters10.setTrustStore("", "", "", "hi!");
        tSSLTransportParameters10.setKeyStore("", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
    }

    @Test
    public void test09441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09441");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        tSSLTransportParameters31.setTrustStore("hi!", "hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09442");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        tSSLTransportParameters34.setTrustStore("", "");
        tSSLTransportParameters34.setKeyStore("", "");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09443");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        tSSLTransportParameters26.setKeyStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09444");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        tSSLTransportParameters24.setTrustStore("hi!", "", "hi!", "hi!");
        tSSLTransportParameters24.setKeyStore("", "hi!");
        tSSLTransportParameters24.requireClientAuth(true);
        tSSLTransportParameters24.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09445");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = null;
        kerberosUserConfiguration4.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration4.options;
        kerberosUserConfiguration4.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration4.options = strMap14;
        kerberosUserConfiguration1.setoptions(strMap14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration1.options = strMap22;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray25 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = null;
        kerberosUserConfiguration26.setoptions(strMap27);
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration26.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.security.Provider provider36 = kerberosUserConfiguration34.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap37);
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap39;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration42 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration42.refresh();
        java.security.Provider provider44 = kerberosUserConfiguration42.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration42.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider46 = kerberosUserConfiguration42.getProvider();
        java.lang.String str47 = kerberosUserConfiguration42.getType();
        javax.security.auth.login.Configuration.Parameters parameters48 = kerberosUserConfiguration42.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration50.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration50.getoptions();
        java.security.Provider provider53 = kerberosUserConfiguration50.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration50.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap55 = kerberosUserConfiguration50.options;
        kerberosUserConfiguration42.options = strMap55;
        kerberosUserConfiguration1.options = strMap55;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray59 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray25);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(provider36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNull(parameters48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(parameters54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray59);
    }

    @Test
    public void test09446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09446");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        tSSLTransportParameters34.setTrustStore("", "hi!");
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09447");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        tSSLTransportParameters29.setTrustStore("hi!", "");
        tSSLTransportParameters29.setKeyStore("", "hi!", "hi!", "");
        tSSLTransportParameters29.setTrustStore("", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09448");
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        tSSLTransportParameters25.setTrustStore("hi!", "");
        tSSLTransportParameters25.setTrustStore("hi!", "hi!", "hi!", "");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09449");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09450");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = null;
        kerberosUserConfiguration12.options = strMap14;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.setoptions(strMap17);
        kerberosUserConfiguration6.options = strMap17;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.options;
        javax.security.auth.login.Configuration.Parameters parameters27 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration23.getoptions();
        kerberosUserConfiguration6.options = strMap28;
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration6.getoptions();
        java.security.Provider provider31 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration1.setoptions(strMap32);
        java.lang.Class<?> wildcardClass34 = strMap32.getClass();
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(parameters27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test09451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09451");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "hi!", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        tSSLTransportParameters22.setKeyStore("", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray12);
    }

    @Test
    public void test09452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09452");
        java.lang.String[] strArray20 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray20);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters38 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray20);
        org.junit.Assert.assertNotNull(strArray20);
    }

    @Test
    public void test09453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09453");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration6.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = null;
        kerberosUserConfiguration8.setoptions(strMap9);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration8.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration15.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap22);
        kerberosUserConfiguration8.options = strMap22;
        kerberosUserConfiguration6.options = strMap22;
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration6.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap27;
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters30 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(parameters30);
    }

    @Test
    public void test09454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09454");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration19.options;
        java.security.Provider provider24 = kerberosUserConfiguration19.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration25 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = null;
        kerberosUserConfiguration25.setoptions(strMap26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration25.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration25.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters32 = kerberosUserConfiguration25.getParameters();
        java.security.Provider provider33 = kerberosUserConfiguration25.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration25.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration19.setoptions(strMap34);
        kerberosUserConfiguration0.setoptions(strMap34);
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.options;
        java.lang.Class<?> wildcardClass38 = strMap37.getClass();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(parameters32);
        org.junit.Assert.assertNull(provider33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test09455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09455");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray7 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.Parameters parameters8 = kerberosUserConfiguration1.getParameters();
        java.security.Provider provider9 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        java.security.Provider provider14 = kerberosUserConfiguration11.getProvider();
        java.lang.String str15 = kerberosUserConfiguration11.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.security.Provider provider21 = kerberosUserConfiguration19.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration16.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration16.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration16.options;
        kerberosUserConfiguration11.options = strMap26;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration11.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = null;
        kerberosUserConfiguration29.setoptions(strMap30);
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration29.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration37.refresh();
        java.security.Provider provider39 = kerberosUserConfiguration37.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration11.options = strMap42;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration11);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration1.setoptions(strMap45);
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray7);
        org.junit.Assert.assertNull(parameters8);
        org.junit.Assert.assertNull(provider9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap47);
    }

    @Test
    public void test09456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09456");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        javax.security.auth.login.Configuration.Parameters parameters16 = kerberosUserConfiguration1.getParameters();
        java.lang.String str17 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test09457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09457");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration1.getoptions();
        java.security.Provider provider4 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration1.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        kerberosUserConfiguration7.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration12.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration12.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration7.options = strMap17;
        javax.security.auth.login.Configuration.Parameters parameters19 = kerberosUserConfiguration7.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration7.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration24.refresh();
        java.security.Provider provider26 = kerberosUserConfiguration24.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration34.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration34.getoptions();
        kerberosUserConfiguration29.options = strMap36;
        kerberosUserConfiguration24.options = strMap36;
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration24.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration7.setoptions(strMap40);
        kerberosUserConfiguration1.setoptions(strMap40);
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration1.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration1.getoptions();
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider46 = kerberosUserConfiguration1.getProvider();
        org.junit.Assert.assertNotNull(strMap3);
        org.junit.Assert.assertNull(provider4);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(parameters19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider46);
    }

    @Test
    public void test09458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09458");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration0.options;
        java.security.Provider provider15 = kerberosUserConfiguration0.getProvider();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration19);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = null;
        kerberosUserConfiguration22.setoptions(strMap23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration22.options;
        kerberosUserConfiguration22.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration22.options = strMap32;
        kerberosUserConfiguration19.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration19.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap35;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
    }

    @Test
    public void test09459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09459");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.security.Provider provider8 = kerberosUserConfiguration6.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration11.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration11.getoptions();
        kerberosUserConfiguration6.options = strMap13;
        kerberosUserConfiguration1.options = strMap13;
        java.security.Provider provider16 = kerberosUserConfiguration1.getProvider();
        java.security.Provider provider17 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray19 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        kerberosUserConfiguration1.refresh();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(provider17);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
    }

    @Test
    public void test09460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09460");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        tSSLTransportParameters26.setTrustStore("", "", "", "");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09461");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray3 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.security.Provider provider10 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider12 = kerberosUserConfiguration8.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration1.setoptions(strMap13);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration18.options;
        java.security.Provider provider23 = kerberosUserConfiguration18.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = kerberosUserConfiguration24.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration31 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = null;
        kerberosUserConfiguration31.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration31.options;
        java.lang.String str35 = kerberosUserConfiguration31.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration31.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration24.setoptions(strMap36);
        kerberosUserConfiguration18.setoptions(strMap36);
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration18.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration18.getoptions();
        kerberosUserConfiguration1.setoptions(strMap42);
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration1.options;
        org.junit.Assert.assertNotNull(appConfigurationEntryArray3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNull(provider10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNull(provider23);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNull(strMap34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test09462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09462");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.lang.String str22 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration18.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        java.lang.String str36 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters40 = kerberosUserConfiguration0.getParameters();
        java.security.Provider provider41 = kerberosUserConfiguration0.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap42 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str43 = kerberosUserConfiguration0.getType();
        java.security.Provider provider44 = kerberosUserConfiguration0.getProvider();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(parameters40);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNull(provider44);
    }

    @Test
    public void test09463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09463");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration8.getoptions();
        java.security.Provider provider11 = kerberosUserConfiguration8.getProvider();
        java.lang.String str12 = kerberosUserConfiguration8.getType();
        java.lang.String str13 = kerberosUserConfiguration8.getType();
        java.security.Provider provider14 = kerberosUserConfiguration8.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration15 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = null;
        kerberosUserConfiguration15.setoptions(strMap16);
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration15.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration15);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration20.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration20.options = strMap22;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration24.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration20.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration15.setoptions(strMap27);
        kerberosUserConfiguration8.setoptions(strMap27);
        kerberosUserConfiguration8.refresh();
        javax.security.auth.login.Configuration.Parameters parameters31 = kerberosUserConfiguration8.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration32 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = null;
        kerberosUserConfiguration32.setoptions(strMap33);
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration32.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration32.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap37 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration40.refresh();
        java.security.Provider provider42 = kerberosUserConfiguration40.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration32.setoptions(strMap43);
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration32.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration32.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration32.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = null;
        kerberosUserConfiguration48.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration48.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration48.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap54 = kerberosUserConfiguration48.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration55.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration55.options;
        kerberosUserConfiguration55.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration60.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = null;
        kerberosUserConfiguration60.options = strMap62;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration64.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration60.setoptions(strMap65);
        kerberosUserConfiguration55.setoptions(strMap65);
        kerberosUserConfiguration48.options = strMap65;
        java.util.HashMap<java.lang.String, java.lang.String> strMap69 = kerberosUserConfiguration48.getoptions();
        kerberosUserConfiguration32.setoptions(strMap69);
        kerberosUserConfiguration8.options = strMap69;
        java.util.HashMap<java.lang.String, java.lang.String> strMap72 = kerberosUserConfiguration8.getoptions();
        kerberosUserConfiguration0.options = strMap72;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray75 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration77.refresh();
        kerberosUserConfiguration77.refresh();
        kerberosUserConfiguration77.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration77);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration83 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration83.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration77.options = strMap84;
        java.util.HashMap<java.lang.String, java.lang.String> strMap86 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters87 = kerberosUserConfiguration77.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap88 = kerberosUserConfiguration77.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap88);
        java.lang.Class<?> wildcardClass90 = strMap88.getClass();
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNull(provider14);
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(parameters31);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(strMap58);
        org.junit.Assert.assertNull(strMap61);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray75);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNull(parameters87);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(wildcardClass90);
    }

    @Test
    public void test09464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09464");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray9, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters12 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray9, false);
        tSSLTransportParameters14.requireClientAuth(false);
        tSSLTransportParameters14.requireClientAuth(false);
        tSSLTransportParameters14.setTrustStore("hi!", "", "", "hi!");
        tSSLTransportParameters14.requireClientAuth(true);
        org.junit.Assert.assertNotNull(strArray9);
    }

    @Test
    public void test09465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09465");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.security.Provider provider6 = kerberosUserConfiguration0.getProvider();
        java.lang.String str7 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration9);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        kerberosUserConfiguration12.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = null;
        kerberosUserConfiguration17.setoptions(strMap18);
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration17.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration12.options = strMap22;
        kerberosUserConfiguration9.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration29.refresh();
        java.security.Provider provider31 = kerberosUserConfiguration29.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration29.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration26.setoptions(strMap32);
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration26.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration26);
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration26.options;
        kerberosUserConfiguration9.setoptions(strMap36);
        kerberosUserConfiguration0.setoptions(strMap36);
        javax.security.auth.login.Configuration.Parameters parameters39 = kerberosUserConfiguration0.getParameters();
        java.lang.String str40 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray42 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray46 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray48 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration50 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration50.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration50.getoptions();
        java.security.Provider provider53 = kerberosUserConfiguration50.getProvider();
        javax.security.auth.login.Configuration.Parameters parameters54 = kerberosUserConfiguration50.getParameters();
        java.lang.String str55 = kerberosUserConfiguration50.getType();
        java.lang.String str56 = kerberosUserConfiguration50.getType();
        java.security.Provider provider57 = kerberosUserConfiguration50.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration50.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap58;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        kerberosUserConfiguration60.refresh();
        kerberosUserConfiguration60.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration66 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration66.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap68 = null;
        kerberosUserConfiguration66.options = strMap68;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration70 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration70.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration66.setoptions(strMap71);
        kerberosUserConfiguration60.options = strMap71;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray75 = kerberosUserConfiguration60.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration77 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration77.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration77);
        java.util.HashMap<java.lang.String, java.lang.String> strMap80 = kerberosUserConfiguration77.options;
        javax.security.auth.login.Configuration.Parameters parameters81 = kerberosUserConfiguration77.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap82 = kerberosUserConfiguration77.getoptions();
        kerberosUserConfiguration60.options = strMap82;
        java.util.HashMap<java.lang.String, java.lang.String> strMap84 = kerberosUserConfiguration60.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray86 = kerberosUserConfiguration60.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap87 = kerberosUserConfiguration60.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap87);
        java.util.HashMap<java.lang.String, java.lang.String> strMap89 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(provider6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNull(provider31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(parameters39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray42);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray46);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray48);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(provider53);
        org.junit.Assert.assertNull(parameters54);
        org.junit.Assert.assertNull(str55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNull(provider57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray75);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNull(parameters81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strMap89);
    }

    @Test
    public void test09466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09466");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        tSSLTransportParameters29.setTrustStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09467");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        java.security.Provider provider16 = kerberosUserConfiguration0.getProvider();
        java.lang.String str17 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        kerberosUserConfiguration21.refresh();
        kerberosUserConfiguration21.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters29 = kerberosUserConfiguration28.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.setoptions(strMap31);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration30.options;
        kerberosUserConfiguration30.refresh();
        kerberosUserConfiguration30.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration30.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration37 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration37.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration37);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration41.refresh();
        java.security.Provider provider43 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration37.setoptions(strMap44);
        kerberosUserConfiguration30.options = strMap44;
        kerberosUserConfiguration28.options = strMap44;
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration28.getoptions();
        kerberosUserConfiguration21.setoptions(strMap48);
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration21.getoptions();
        kerberosUserConfiguration0.setoptions(strMap50);
        kerberosUserConfiguration0.refresh();
        java.lang.String str53 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(parameters29);
        org.junit.Assert.assertNull(strMap33);
        org.junit.Assert.assertNull(strMap36);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(str53);
    }

    @Test
    public void test09468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09468");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        tSSLTransportParameters28.setTrustStore("", "", "hi!", "");
        tSSLTransportParameters28.setTrustStore("", "hi!", "hi!", "hi!");
        tSSLTransportParameters28.setKeyStore("hi!", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09469");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "hi!", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        tSSLTransportParameters24.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09470");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        tSSLTransportParameters20.setKeyStore("hi!", "");
        tSSLTransportParameters20.setTrustStore("", "hi!", "", "");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test09471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09471");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        tSSLTransportParameters30.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters30.setKeyStore("hi!", "", "hi!", "");
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09472");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        javax.security.auth.login.Configuration.Parameters parameters3 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = null;
        kerberosUserConfiguration7.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration7.options;
        javax.security.auth.login.Configuration.Parameters parameters11 = kerberosUserConfiguration7.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration12 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = null;
        kerberosUserConfiguration12.setoptions(strMap13);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration12.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration12);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration17.refresh();
        kerberosUserConfiguration17.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration17.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration21.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration21.setoptions(strMap29);
        kerberosUserConfiguration17.options = strMap29;
        kerberosUserConfiguration12.options = strMap29;
        kerberosUserConfiguration7.options = strMap29;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration40 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration40.refresh();
        java.security.Provider provider42 = kerberosUserConfiguration40.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap43 = kerberosUserConfiguration40.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration45.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration45.getoptions();
        kerberosUserConfiguration40.options = strMap47;
        kerberosUserConfiguration35.options = strMap47;
        kerberosUserConfiguration7.setoptions(strMap47);
        java.lang.String str51 = kerberosUserConfiguration7.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration54.refresh();
        java.security.Provider provider56 = kerberosUserConfiguration54.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap57 = kerberosUserConfiguration54.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration59 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration59.refresh();
        java.security.Provider provider61 = kerberosUserConfiguration59.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap62 = kerberosUserConfiguration59.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration64 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration64.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration64.getoptions();
        kerberosUserConfiguration59.options = strMap66;
        kerberosUserConfiguration54.options = strMap66;
        kerberosUserConfiguration7.setoptions(strMap66);
        kerberosUserConfiguration0.options = strMap66;
        java.util.HashMap<java.lang.String, java.lang.String> strMap71 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray73 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str74 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray76 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap77 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        org.junit.Assert.assertNull(parameters3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(parameters11);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(strMap20);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider42);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNull(provider56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNull(provider61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray73);
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray76);
        org.junit.Assert.assertNotNull(strMap77);
    }

    @Test
    public void test09473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09473");
        java.lang.String[] strArray12 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray12);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray12);
        java.lang.Class<?> wildcardClass22 = tSSLTransportParameters21.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test09474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09474");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration3.refresh();
        java.security.Provider provider5 = kerberosUserConfiguration3.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        java.lang.String str16 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.lang.String str22 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration18.options = strMap33;
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration.DEFAULT_KERBEROS_OPTIONS;
        kerberosUserConfiguration18.setoptions(strMap35);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.security.Provider provider40 = kerberosUserConfiguration38.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap41 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration43 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration43.refresh();
        java.security.Provider provider45 = kerberosUserConfiguration43.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration43.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration48 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration48.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap50 = kerberosUserConfiguration48.getoptions();
        kerberosUserConfiguration43.options = strMap50;
        kerberosUserConfiguration38.options = strMap50;
        javax.security.auth.login.Configuration.Parameters parameters53 = kerberosUserConfiguration38.getParameters();
        java.lang.String str54 = kerberosUserConfiguration38.getType();
        javax.security.auth.login.Configuration.Parameters parameters55 = kerberosUserConfiguration38.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = null;
        kerberosUserConfiguration38.setoptions(strMap56);
        java.util.HashMap<java.lang.String, java.lang.String> strMap58 = kerberosUserConfiguration38.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str59 = kerberosUserConfiguration38.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration60 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = null;
        kerberosUserConfiguration60.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration60.options;
        kerberosUserConfiguration60.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration65 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap66 = kerberosUserConfiguration65.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = null;
        kerberosUserConfiguration65.options = strMap67;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration69 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap70 = kerberosUserConfiguration69.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration65.setoptions(strMap70);
        kerberosUserConfiguration60.setoptions(strMap70);
        kerberosUserConfiguration38.setoptions(strMap70);
        kerberosUserConfiguration18.options = strMap70;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration76 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration76.refresh();
        java.security.Provider provider78 = kerberosUserConfiguration76.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap79 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration81 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration81.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap83 = kerberosUserConfiguration81.getoptions();
        kerberosUserConfiguration76.options = strMap83;
        java.util.HashMap<java.lang.String, java.lang.String> strMap85 = kerberosUserConfiguration76.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider86 = kerberosUserConfiguration76.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray88 = kerberosUserConfiguration76.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration89 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration89.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap91 = kerberosUserConfiguration89.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration76.options = strMap91;
        kerberosUserConfiguration18.setoptions(strMap91);
        kerberosUserConfiguration0.setoptions(strMap91);
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(provider40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(parameters53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNull(parameters55);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNull(strMap63);
        org.junit.Assert.assertNull(strMap66);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(provider78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNull(provider86);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray88);
        org.junit.Assert.assertNotNull(strMap91);
    }

    @Test
    public void test09475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09475");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        tSSLTransportParameters19.setTrustStore("", "");
        java.lang.Class<?> wildcardClass23 = tSSLTransportParameters19.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test09476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09476");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.options;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration22 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration22.refresh();
        java.security.Provider provider24 = kerberosUserConfiguration22.getProvider();
        java.security.Provider provider25 = kerberosUserConfiguration22.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration22.options;
        java.lang.String str27 = kerberosUserConfiguration22.getType();
        javax.security.auth.login.Configuration.Parameters parameters28 = kerberosUserConfiguration22.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration22.getoptions();
        kerberosUserConfiguration0.options = strMap29;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(provider24);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(str27);
        org.junit.Assert.assertNull(parameters28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test09477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09477");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        tSSLTransportParameters25.setKeyStore("", "", "hi!", "hi!");
        tSSLTransportParameters25.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09478");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray19, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters40 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray19);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test09479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09479");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        java.lang.String str4 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters7 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration9.options;
        java.lang.String str11 = kerberosUserConfiguration9.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        javax.security.auth.login.Configuration.Parameters parameters13 = kerberosUserConfiguration9.getParameters();
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider15 = kerberosUserConfiguration9.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration16 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = null;
        kerberosUserConfiguration16.setoptions(strMap17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = kerberosUserConfiguration16.options;
        javax.security.auth.login.Configuration.Parameters parameters20 = kerberosUserConfiguration16.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration21 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap22 = null;
        kerberosUserConfiguration21.setoptions(strMap22);
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration21.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration21);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration26.refresh();
        kerberosUserConfiguration26.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration30 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration30.setoptions(strMap31);
        javax.security.auth.login.Configuration.Parameters parameters33 = kerberosUserConfiguration30.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration35 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration35.refresh();
        java.security.Provider provider37 = kerberosUserConfiguration35.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration35.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration30.setoptions(strMap38);
        kerberosUserConfiguration26.options = strMap38;
        kerberosUserConfiguration21.options = strMap38;
        kerberosUserConfiguration16.options = strMap38;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration44 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration44.refresh();
        java.security.Provider provider46 = kerberosUserConfiguration44.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap47 = kerberosUserConfiguration44.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration49 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration49.refresh();
        java.security.Provider provider51 = kerberosUserConfiguration49.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration49.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration54 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration54.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration54.getoptions();
        kerberosUserConfiguration49.options = strMap56;
        kerberosUserConfiguration44.options = strMap56;
        kerberosUserConfiguration16.setoptions(strMap56);
        java.lang.String str60 = kerberosUserConfiguration16.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap61 = kerberosUserConfiguration16.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap61);
        java.util.HashMap<java.lang.String, java.lang.String> strMap63 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration9.options;
        kerberosUserConfiguration0.setoptions(strMap65);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(parameters7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(parameters13);
        org.junit.Assert.assertNull(provider15);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(parameters20);
        org.junit.Assert.assertNull(strMap24);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(parameters33);
        org.junit.Assert.assertNull(provider37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(provider46);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNull(provider51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap65);
    }

    @Test
    public void test09480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09480");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        tSSLTransportParameters24.requireClientAuth(true);
        tSSLTransportParameters24.setTrustStore("hi!", "", "", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09481");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray5 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        java.security.Provider provider11 = kerberosUserConfiguration9.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration14.refresh();
        java.security.Provider provider16 = kerberosUserConfiguration14.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap17 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration19 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration19.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration19.getoptions();
        kerberosUserConfiguration14.options = strMap21;
        kerberosUserConfiguration9.options = strMap21;
        javax.security.auth.login.Configuration.Parameters parameters24 = kerberosUserConfiguration9.getParameters();
        kerberosUserConfiguration9.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration9.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration9.getoptions();
        kerberosUserConfiguration1.setoptions(strMap27);
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray30 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration1.getoptions();
        org.junit.Assert.assertNotNull(strMap2);
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(provider16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(parameters24);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray30);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test09482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09482");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray11, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters14 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray11, false);
        tSSLTransportParameters18.requireClientAuth(false);
        tSSLTransportParameters18.setTrustStore("hi!", "hi!", "", "hi!");
        tSSLTransportParameters18.setTrustStore("hi!", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray11);
    }

    @Test
    public void test09483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09483");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str2 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration5.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration7 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration7.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration5.setoptions(strMap8);
        kerberosUserConfiguration0.setoptions(strMap8);
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration0.getoptions();
        java.lang.String str12 = kerberosUserConfiguration0.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.Parameters parameters14 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters15 = kerberosUserConfiguration0.getParameters();
        org.junit.Assert.assertNotNull(strMap1);
        org.junit.Assert.assertNull(str2);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(parameters14);
        org.junit.Assert.assertNull(parameters15);
    }

    @Test
    public void test09484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09484");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray13);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray13);
        tSSLTransportParameters23.setKeyStore("hi!", "", "", "hi!");
        tSSLTransportParameters23.setKeyStore("", "", "hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray13);
    }

    @Test
    public void test09485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09485");
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters11 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters13 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray10, true);
        tSSLTransportParameters19.requireClientAuth(false);
        tSSLTransportParameters19.setKeyStore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test09486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09486");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str6 = kerberosUserConfiguration4.getType();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration4);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration9.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration9.setoptions(strMap12);
        kerberosUserConfiguration4.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration4.getoptions();
        kerberosUserConfiguration0.options = strMap15;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration18.getoptions();
        java.security.Provider provider21 = kerberosUserConfiguration18.getProvider();
        java.lang.String str22 = kerberosUserConfiguration18.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration26 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration26.refresh();
        java.security.Provider provider28 = kerberosUserConfiguration26.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap29 = kerberosUserConfiguration26.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration23.setoptions(strMap29);
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration23.getoptions();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration23);
        java.util.HashMap<java.lang.String, java.lang.String> strMap33 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration18.options = strMap33;
        kerberosUserConfiguration0.options = strMap33;
        java.lang.String str36 = kerberosUserConfiguration0.getType();
        javax.security.auth.login.Configuration.Parameters parameters37 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap38 = kerberosUserConfiguration0.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.lang.String str40 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNull(str6);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(provider21);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(parameters37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str40);
    }

    @Test
    public void test09487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09487");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider5 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider8 = kerberosUserConfiguration1.getProvider();
        java.lang.String str9 = kerberosUserConfiguration1.getType();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray11 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        java.security.Provider provider12 = kerberosUserConfiguration1.getProvider();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray16 = kerberosUserConfiguration14.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        java.lang.String str18 = kerberosUserConfiguration14.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration20 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration20.refresh();
        java.security.Provider provider22 = kerberosUserConfiguration20.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration20.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap24 = kerberosUserConfiguration20.getoptions();
        kerberosUserConfiguration14.options = strMap24;
        kerberosUserConfiguration1.setoptions(strMap24);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.security.Provider provider35 = kerberosUserConfiguration33.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap36 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration38 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration38.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration38.getoptions();
        kerberosUserConfiguration33.options = strMap40;
        kerberosUserConfiguration28.options = strMap40;
        javax.security.auth.login.Configuration.Parameters parameters43 = kerberosUserConfiguration28.getParameters();
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap45 = kerberosUserConfiguration28.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray47 = kerberosUserConfiguration28.getAppConfigurationEntry("");
        kerberosUserConfiguration28.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap49 = kerberosUserConfiguration28.options;
        kerberosUserConfiguration1.setoptions(strMap49);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration1.getoptions();
        java.lang.String str52 = kerberosUserConfiguration1.getType();
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNull(provider5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(provider8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray11);
        org.junit.Assert.assertNull(provider12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray16);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(provider22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(provider35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(parameters43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray47);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNull(str52);
    }

    @Test
    public void test09488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09488");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters31 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters33 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters35 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters39 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray18, false);
        org.junit.Assert.assertNotNull(strArray18);
    }

    @Test
    public void test09489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09489");
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray15);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
    }

    @Test
    public void test09490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09490");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters32 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters34 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray17, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters36 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters37 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray17);
        tSSLTransportParameters37.setTrustStore("", "");
        tSSLTransportParameters37.setTrustStore("", "", "", "");
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test09491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09491");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        java.security.Provider provider3 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration6.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration6.getoptions();
        kerberosUserConfiguration1.options = strMap8;
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider11 = kerberosUserConfiguration1.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray13 = kerberosUserConfiguration1.getAppConfigurationEntry("hi!");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration14.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.options = strMap16;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        java.security.Provider provider19 = kerberosUserConfiguration1.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap20 = kerberosUserConfiguration1.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray22 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(provider3);
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(provider11);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray22);
    }

    @Test
    public void test09492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09492");
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters16 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters23 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09493");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        kerberosUserConfiguration0.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = null;
        kerberosUserConfiguration5.setoptions(strMap6);
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration5.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = kerberosUserConfiguration5.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.options = strMap10;
        javax.security.auth.login.Configuration.Parameters parameters12 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray14 = kerberosUserConfiguration0.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray17 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap19 = null;
        kerberosUserConfiguration18.setoptions(strMap19);
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.options;
        kerberosUserConfiguration18.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration18);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration24 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = null;
        kerberosUserConfiguration24.setoptions(strMap25);
        java.util.HashMap<java.lang.String, java.lang.String> strMap27 = kerberosUserConfiguration24.options;
        kerberosUserConfiguration24.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration29 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration29.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = null;
        kerberosUserConfiguration29.options = strMap31;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap34 = kerberosUserConfiguration33.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration29.setoptions(strMap34);
        kerberosUserConfiguration24.setoptions(strMap34);
        kerberosUserConfiguration18.options = strMap34;
        kerberosUserConfiguration0.setoptions(strMap34);
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap40 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.lang.String str42 = kerberosUserConfiguration0.getType();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNull(parameters12);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray17);
        org.junit.Assert.assertNull(strMap21);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNull(str42);
    }

    @Test
    public void test09494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09494");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        javax.security.auth.login.Configuration.Parameters parameters2 = kerberosUserConfiguration1.getParameters();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration1);
        kerberosUserConfiguration1.refresh();
        java.lang.String str5 = kerberosUserConfiguration1.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration6 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = null;
        kerberosUserConfiguration6.setoptions(strMap7);
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration6.options;
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration11 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = null;
        kerberosUserConfiguration11.setoptions(strMap12);
        java.util.HashMap<java.lang.String, java.lang.String> strMap14 = kerberosUserConfiguration11.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration11.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap16 = kerberosUserConfiguration11.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration6.options = strMap16;
        javax.security.auth.login.Configuration.Parameters parameters18 = kerberosUserConfiguration6.getParameters();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray20 = kerberosUserConfiguration6.getAppConfigurationEntry("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration6.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration23 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration23.refresh();
        java.security.Provider provider25 = kerberosUserConfiguration23.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap26 = kerberosUserConfiguration23.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration28 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration28.refresh();
        java.security.Provider provider30 = kerberosUserConfiguration28.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration28.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration33 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration33.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap35 = kerberosUserConfiguration33.getoptions();
        kerberosUserConfiguration28.options = strMap35;
        kerberosUserConfiguration23.options = strMap35;
        javax.security.auth.login.Configuration.Parameters parameters38 = kerberosUserConfiguration23.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration23.options;
        kerberosUserConfiguration6.setoptions(strMap39);
        java.security.Provider provider41 = kerberosUserConfiguration6.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray43 = kerberosUserConfiguration6.getAppConfigurationEntry("");
        kerberosUserConfiguration6.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration45 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = null;
        kerberosUserConfiguration45.setoptions(strMap46);
        java.util.HashMap<java.lang.String, java.lang.String> strMap48 = kerberosUserConfiguration45.options;
        kerberosUserConfiguration45.refresh();
        kerberosUserConfiguration45.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration51 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap52 = kerberosUserConfiguration51.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap53 = null;
        kerberosUserConfiguration51.options = strMap53;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration55 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap56 = kerberosUserConfiguration55.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration51.setoptions(strMap56);
        kerberosUserConfiguration45.options = strMap56;
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray60 = kerberosUserConfiguration45.getAppConfigurationEntry("");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration62 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration62.refresh();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration62);
        java.util.HashMap<java.lang.String, java.lang.String> strMap65 = kerberosUserConfiguration62.options;
        javax.security.auth.login.Configuration.Parameters parameters66 = kerberosUserConfiguration62.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap67 = kerberosUserConfiguration62.getoptions();
        kerberosUserConfiguration45.options = strMap67;
        kerberosUserConfiguration6.options = strMap67;
        kerberosUserConfiguration1.setoptions(strMap67);
        kerberosUserConfiguration1.refresh();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray73 = kerberosUserConfiguration1.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(parameters2);
        org.junit.Assert.assertNull(str5);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(parameters18);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNull(provider30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNull(parameters38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider41);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray43);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(strMap52);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray60);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNull(parameters66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray73);
    }

    @Test
    public void test09495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09495");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration1 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration1.refresh();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration3 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap4 = kerberosUserConfiguration3.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration1.setoptions(strMap4);
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration1.options;
        java.lang.Class<?> wildcardClass7 = kerberosUserConfiguration1.getClass();
        org.junit.Assert.assertNotNull(strMap4);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test09496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09496");
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "hi!", "", "hi!", "hi!" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters15 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters17 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters20 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, true);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters25 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray14);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray14, false);
        org.junit.Assert.assertNotNull(strArray14);
    }

    @Test
    public void test09497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09497");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = null;
        kerberosUserConfiguration0.setoptions(strMap1);
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.options;
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        javax.security.auth.login.Configuration.Parameters parameters5 = kerberosUserConfiguration0.getParameters();
        javax.security.auth.login.Configuration.Parameters parameters6 = kerberosUserConfiguration0.getParameters();
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration0.getoptions();
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters5);
        org.junit.Assert.assertNull(parameters6);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test09498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09498");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap1 = kerberosUserConfiguration0.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap2 = null;
        kerberosUserConfiguration0.options = strMap2;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration4 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap5 = kerberosUserConfiguration4.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap5);
        java.util.HashMap<java.lang.String, java.lang.String> strMap7 = kerberosUserConfiguration0.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration8 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap9 = kerberosUserConfiguration8.options;
        java.lang.String str10 = kerberosUserConfiguration8.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap11 = kerberosUserConfiguration8.options;
        kerberosUserConfiguration8.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration8.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration0.setoptions(strMap13);
        java.lang.String str15 = kerberosUserConfiguration0.getType();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration17 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        java.util.HashMap<java.lang.String, java.lang.String> strMap18 = kerberosUserConfiguration17.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider19 = kerberosUserConfiguration17.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray21 = kerberosUserConfiguration17.getAppConfigurationEntry("");
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration17);
        java.util.HashMap<java.lang.String, java.lang.String> strMap23 = kerberosUserConfiguration17.getoptions();
        kerberosUserConfiguration0.options = strMap23;
        java.security.Provider provider25 = kerberosUserConfiguration0.getProvider();
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray27 = kerberosUserConfiguration0.getAppConfigurationEntry("");
        org.junit.Assert.assertNull(strMap1);
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strMap7);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(strMap11);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(provider19);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(provider25);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray27);
    }

    @Test
    public void test09499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09499");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "hi!", "", "", "", "" };
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters18 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters19 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters21 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters22 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters24 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters26 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("hi!", strArray16, false);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters27 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters28 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters29 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters tSSLTransportParameters30 = new org.apache.thrift.transport.TSSLTransportFactory.TSSLTransportParameters("", strArray16);
        tSSLTransportParameters30.setTrustStore("", "", "", "");
        tSSLTransportParameters30.requireClientAuth(false);
        org.junit.Assert.assertNotNull(strArray16);
    }

    @Test
    public void test09500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest18.test09500");
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration0 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        kerberosUserConfiguration0.refresh();
        kerberosUserConfiguration0.refresh();
        java.util.HashMap<java.lang.String, java.lang.String> strMap3 = kerberosUserConfiguration0.getoptions();
        javax.security.auth.login.Configuration.Parameters parameters4 = kerberosUserConfiguration0.getParameters();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration5 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap6 = kerberosUserConfiguration5.options;
        java.lang.String str7 = kerberosUserConfiguration5.getType();
        java.util.HashMap<java.lang.String, java.lang.String> strMap8 = kerberosUserConfiguration5.options;
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration9 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap10 = null;
        kerberosUserConfiguration9.setoptions(strMap10);
        java.util.HashMap<java.lang.String, java.lang.String> strMap12 = kerberosUserConfiguration9.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap13 = kerberosUserConfiguration9.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration14 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap15 = kerberosUserConfiguration14.getDEFAULT_KERBEROS_OPTIONS();
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration14);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration18 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration18.refresh();
        java.security.Provider provider20 = kerberosUserConfiguration18.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap21 = kerberosUserConfiguration18.getDEFAULT_KERBEROS_OPTIONS();
        kerberosUserConfiguration14.setoptions(strMap21);
        kerberosUserConfiguration9.setoptions(strMap21);
        kerberosUserConfiguration5.options = strMap21;
        java.util.HashMap<java.lang.String, java.lang.String> strMap25 = kerberosUserConfiguration5.options;
        kerberosUserConfiguration0.setoptions(strMap25);
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration27 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration();
        java.util.HashMap<java.lang.String, java.lang.String> strMap28 = null;
        kerberosUserConfiguration27.setoptions(strMap28);
        java.util.HashMap<java.lang.String, java.lang.String> strMap30 = kerberosUserConfiguration27.options;
        java.util.HashMap<java.lang.String, java.lang.String> strMap31 = kerberosUserConfiguration27.getoptions();
        java.util.HashMap<java.lang.String, java.lang.String> strMap32 = kerberosUserConfiguration27.getoptions();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration34 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("hi!");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray36 = kerberosUserConfiguration34.getAppConfigurationEntry("");
        javax.security.auth.login.AppConfigurationEntry[] appConfigurationEntryArray38 = kerberosUserConfiguration34.getAppConfigurationEntry("");
        java.util.HashMap<java.lang.String, java.lang.String> strMap39 = kerberosUserConfiguration34.getDEFAULT_KERBEROS_OPTIONS();
        me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration kerberosUserConfiguration41 = new me.prettyprint.cassandra.connection.client.HSaslThriftClient.KerberosUserConfiguration("");
        kerberosUserConfiguration41.refresh();
        java.security.Provider provider43 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap44 = kerberosUserConfiguration41.getDEFAULT_KERBEROS_OPTIONS();
        java.security.Provider provider45 = kerberosUserConfiguration41.getProvider();
        java.util.HashMap<java.lang.String, java.lang.String> strMap46 = kerberosUserConfiguration41.getoptions();
        kerberosUserConfiguration34.setoptions(strMap46);
        kerberosUserConfiguration27.options = strMap46;
        kerberosUserConfiguration0.setoptions(strMap46);
        javax.security.auth.login.Configuration.setConfiguration((javax.security.auth.login.Configuration) kerberosUserConfiguration0);
        java.util.HashMap<java.lang.String, java.lang.String> strMap51 = kerberosUserConfiguration0.options;
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(parameters4);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(provider20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray36);
        org.junit.Assert.assertNotNull(appConfigurationEntryArray38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(provider43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(provider45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap51);
    }
}

