import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest5 {

    public static boolean debug = false;

    @Test
    public void test2501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2501");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        java.lang.String str11 = retryOnPrimaryException2.getResourceType();
        java.lang.String str12 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException14 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str12, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2502");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index22 = retryOnPrimaryException21.getIndex();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("", strArray41);
        java.lang.String str43 = retryOnPrimaryException32.toString();
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str45 = retryOnPrimaryException26.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        retryOnPrimaryException26.setShard(shardId46);
        java.lang.String[] strArray58 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        retryOnPrimaryException26.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException21.addHeader("", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList59);
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus65 = retryOnPrimaryException13.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder66 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params67 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder68 = retryOnPrimaryException13.toXContent(xContentBuilder66, params67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(index22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str43, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertTrue("'" + restStatus65 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus65.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params67);
    }

    @Test
    public void test2503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2503");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException16.getHeaderKeys();
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException16.getSuppressed();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException16.getHeader("rest.exception.cause.skip");
        java.lang.String str22 = retryOnPrimaryException16.getDetailedMessage();
        retryOnPrimaryException16.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable25 = retryOnPrimaryException16.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId26 = retryOnPrimaryException16.getShardId();
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable[] throwableArray28 = retryOnPrimaryException16.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException32.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str36 = retryOnPrimaryException32.getDetailedMessage();
        java.lang.Throwable throwable37 = retryOnPrimaryException32.unwrapCause();
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException32.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException32.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException43.getSuppressed();
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet52 = retryOnPrimaryException51.getHeaderKeys();
        java.lang.Throwable throwable53 = retryOnPrimaryException51.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = retryOnPrimaryException51.guessRootCauses();
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException51.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        retryOnPrimaryException60.setIndex("");
        org.elasticsearch.index.Index index63 = null;
        retryOnPrimaryException60.setIndex(index63);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet69 = retryOnPrimaryException68.getHeaderKeys();
        retryOnPrimaryException68.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "");
        retryOnPrimaryException68.addSuppressed((java.lang.Throwable) retryOnPrimaryException75);
        org.elasticsearch.rest.RestStatus restStatus77 = retryOnPrimaryException75.status();
        java.lang.String[] strArray82 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException75.setResources("rest.exception.cause.skip", strArray82);
        retryOnPrimaryException60.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray82);
        retryOnPrimaryException51.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray82);
        retryOnPrimaryException32.addHeader("RetryOnPrimaryException[]", strArray82);
        retryOnPrimaryException16.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray82);
        retryOnPrimaryException2.setResources("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", strArray82);
        java.lang.String str89 = retryOnPrimaryException2.toString();
        java.lang.String str90 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(strSet69);
        org.junit.Assert.assertTrue("'" + restStatus77 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus77.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][1]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str89, "[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str90, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2504");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray38);
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.Index index44 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (byte) 10);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder48 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params49 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder50 = retryOnPrimaryException2.toXContent(xContentBuilder48, params49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNull(index44);
        org.junit.Assert.assertNotNull(params49);
    }

    @Test
    public void test2505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2505");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        java.lang.String str11 = retryOnPrimaryException7.toString();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException7.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException7.getShardId();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str11, "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(shardId14);
    }

    @Test
    public void test2506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2506");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList9);
    }

    @Test
    public void test2507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2507");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str22 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        java.lang.Class<?> wildcardClass24 = throwable23.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2508");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "retry_on_primary_exception");
        java.lang.String str20 = retryOnPrimaryException19.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str31 = retryOnPrimaryException27.getDetailedMessage();
        java.lang.Throwable throwable32 = retryOnPrimaryException27.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable32);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException37.guessRootCauses();
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException46.setResources("", strArray55);
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        retryOnPrimaryException61.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException46.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException37.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray77);
        retryOnPrimaryException33.setResources("hi!", strArray77);
        retryOnPrimaryException19.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray77);
        retryOnPrimaryException2.addHeader("", strArray77);
        java.lang.String str85 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable86 = retryOnPrimaryException2.getRootCause();
        java.util.Set<java.lang.String> strSet87 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable88 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList90 = retryOnPrimaryException2.getHeader("[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str20, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str85, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable86);
        org.junit.Assert.assertEquals(throwable86.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNotNull(throwable88);
        org.junit.Assert.assertEquals(throwable88.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable88.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable88.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList90);
    }

    @Test
    public void test2509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2509");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[rest.exception.stacktrace.skip]", 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2510");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException55.getSuppressed();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        retryOnPrimaryException41.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.Throwable[] throwableArray65 = retryOnPrimaryException41.getSuppressed();
        java.lang.String str66 = retryOnPrimaryException41.toString();
        retryOnPrimaryException41.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 100);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][-1]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str66, "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][-1]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2511");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = null;
        retryOnPrimaryException10.setIndex(index11);
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException10.status();
        java.lang.String str14 = retryOnPrimaryException10.toString();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str14, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test2512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2512");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getResourceId();
        java.lang.String str16 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str16, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2513");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        java.lang.String[] strArray33 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        retryOnPrimaryException26.setShard(shardId35);
        java.lang.String str37 = retryOnPrimaryException26.getDetailedMessage();
        java.lang.String str38 = retryOnPrimaryException26.getResourceType();
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException26.getResourceId();
        retryOnPrimaryException4.addHeader("hi!", strList39);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str38, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList39);
    }

    @Test
    public void test2514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2514");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2515");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str22 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        java.lang.String[] strArray35 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        retryOnPrimaryException28.setShard(shardId37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException28.guessRootCauses();
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable42 = retryOnPrimaryException28.unwrapCause();
        retryOnPrimaryException28.setIndex("rest.exception.cause.skip");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.Index index46 = null;
        retryOnPrimaryException2.setIndex(index46);
        retryOnPrimaryException2.setShard("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) '#');
        java.lang.Throwable throwable51 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass52 = throwable51.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][35]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][35]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable51);
        org.junit.Assert.assertEquals(throwable51.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable51.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable51.toString(), "[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][35]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test2516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2516");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "retry_on_primary_exception");
        java.lang.String str10 = retryOnPrimaryException9.toString();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        java.lang.String str31 = retryOnPrimaryException20.toString();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str33 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException14.setShard(shardId34);
        java.lang.String[] strArray46 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException14.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList47);
        java.lang.String str52 = retryOnPrimaryException2.toString();
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus54 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus55 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str10, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str31, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str52, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertTrue("'" + restStatus54 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus54.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus55 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus55.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
    }

    @Test
    public void test2517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2517");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.stacktrace.skip", throwable11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException31.setResources("", strArray40);
        retryOnPrimaryException24.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray40);
        java.lang.String str43 = retryOnPrimaryException24.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index47 = retryOnPrimaryException46.getIndex();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException46);
        retryOnPrimaryException46.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet55 = retryOnPrimaryException54.getHeaderKeys();
        java.lang.Throwable throwable56 = retryOnPrimaryException54.getRootCause();
        java.lang.String[] strArray62 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        retryOnPrimaryException54.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException46.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException16.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException12.addHeader("hi!", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException4.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        java.lang.Throwable[] throwableArray70 = retryOnPrimaryException4.getSuppressed();
        java.lang.Class<?> wildcardClass71 = throwableArray70.getClass();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(wildcardClass71);
    }

    @Test
    public void test2518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2518");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        java.lang.String str17 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable[] throwableArray18 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index33 = retryOnPrimaryException32.getIndex();
        java.lang.String str34 = retryOnPrimaryException32.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException38.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException45.setResources("", strArray54);
        retryOnPrimaryException38.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException32.setResources("", strArray54);
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.rest.RestStatus restStatus59 = retryOnPrimaryException21.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.common.io.stream.StreamInput streamInput61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException21, streamInput61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str17, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray18);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + restStatus59 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus59.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2519");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException2.setIndex(index19);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Class<?> wildcardClass23 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2520");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException12.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("rest.exception.cause.skip", strArray38);
        retryOnPrimaryException2.addHeader("", strArray38);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException2.getHeader("");
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strList44);
        org.junit.Assert.assertNotNull(strSet45);
    }

    @Test
    public void test2521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2521");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable2);
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException3.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException3.getHeader("[][[][1]] RetryOnPrimaryException[hi!]");
        java.util.List<java.lang.String> strList9 = null;
        retryOnPrimaryException3.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[rest.exception.cause.skip]", strList9);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test2522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2522");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str25 = retryOnPrimaryException2.getResourceType();
        java.lang.String str26 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException2.getHeader("");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str25, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList28);
    }

    @Test
    public void test2523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2523");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable20 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException2.status();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2524");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        retryOnPrimaryException7.setIndex("");
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException13.setResources("", strArray22);
        java.lang.String str24 = retryOnPrimaryException13.toString();
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str26 = retryOnPrimaryException7.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException7.setShard(shardId27);
        java.lang.String[] strArray39 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException7.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList40);
        retryOnPrimaryException2.addHeader("", (java.util.List<java.lang.String>) strList40);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList49 = retryOnPrimaryException48.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = retryOnPrimaryException50.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        java.util.Set<java.lang.String> strSet53 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable55 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput56 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable57 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str24, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2525");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        throwable5.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "retry_on_primary_exception");
        java.lang.String str32 = retryOnPrimaryException31.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException31);
        java.lang.Throwable throwable34 = retryOnPrimaryException31.getRootCause();
        retryOnPrimaryException31.setIndex("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException31.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.String str40 = retryOnPrimaryException31.toString();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str32, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable34.toString(), "[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[retry_on_primary_exception]" + "'", str40, "[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test2526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2526");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException10.getHeaderKeys();
        retryOnPrimaryException10.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException10.status();
        java.lang.String str18 = retryOnPrimaryException10.toString();
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException10.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException10.writeTo(streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str18, "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwableArray19);
    }

    @Test
    public void test2527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2527");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("hi!");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException4.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test2528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2528");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray38);
        org.elasticsearch.index.Index index42 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable[] throwableArray43 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable44 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable46 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId47 = retryOnPrimaryException2.getShardId();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
    }

    @Test
    public void test2529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2529");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException4.getShardId();
        java.lang.String str22 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        java.lang.Throwable throwable24 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException27.getHeaderKeys();
        java.lang.Throwable throwable29 = retryOnPrimaryException27.getRootCause();
        java.lang.String[] strArray35 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        retryOnPrimaryException27.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList36);
        java.util.List<java.lang.String> strList40 = null;
        retryOnPrimaryException27.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList40);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException27.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException27.getResourceId();
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException27);
        java.lang.String str47 = retryOnPrimaryException27.getResourceType();
        java.lang.Throwable throwable48 = retryOnPrimaryException27.unwrapCause();
        retryOnPrimaryException4.addSuppressed(throwable48);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(strList45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable48.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2530");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "retry_on_primary_exception");
        java.lang.String str9 = retryOnPrimaryException8.getResourceType();
        org.elasticsearch.index.Index index10 = retryOnPrimaryException8.getIndex();
        retryOnPrimaryException8.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 10);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("", strArray26);
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str29 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        retryOnPrimaryException17.setShard(shardId30);
        java.lang.String str32 = retryOnPrimaryException17.getDetailedMessage();
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException17.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        java.lang.String[] strArray43 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException36.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray43);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index48 = retryOnPrimaryException47.getIndex();
        java.lang.String str49 = retryOnPrimaryException47.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "hi!");
        retryOnPrimaryException53.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        retryOnPrimaryException60.setIndex("");
        java.lang.String[] strArray69 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException60.setResources("", strArray69);
        retryOnPrimaryException53.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray69);
        retryOnPrimaryException47.setResources("", strArray69);
        retryOnPrimaryException36.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.rest.RestStatus restStatus74 = retryOnPrimaryException36.status();
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        java.util.List<java.lang.String> strList76 = retryOnPrimaryException36.getResourceId();
        retryOnPrimaryException8.addHeader("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", strList76);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", strList76);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "retry_on_primary_exception" + "'", str29, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNull(index48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + restStatus74 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus74.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList76);
    }

    @Test
    public void test2531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2531");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test2532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2532");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("", strArray26);
        retryOnPrimaryException10.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        java.lang.String str29 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index33 = retryOnPrimaryException32.getIndex();
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.Index index35 = retryOnPrimaryException32.getIndex();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        retryOnPrimaryException39.setIndex("");
        java.lang.Throwable[] throwableArray42 = retryOnPrimaryException39.getSuppressed();
        java.lang.String[] strArray47 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException39.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray47);
        retryOnPrimaryException32.setResources("hi!", strArray47);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray47);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.common.io.stream.StreamInput streamInput52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException4, streamInput52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertNull(index35);
        org.junit.Assert.assertNotNull(throwableArray42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(strList51);
    }

    @Test
    public void test2533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2533");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        java.lang.Throwable[] throwableArray40 = retryOnPrimaryException21.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("", strArray52);
        java.lang.String str54 = retryOnPrimaryException43.toString();
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.Throwable throwable56 = retryOnPrimaryException43.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.String str58 = retryOnPrimaryException43.toString();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str54, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str58, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2534");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.lang.String str15 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException13.setResources("", strArray35);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException13.getHeaderKeys();
        java.lang.Throwable throwable41 = retryOnPrimaryException13.getRootCause();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder43 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params44 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder45 = retryOnPrimaryException13.toXContent(xContentBuilder43, params44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNotNull(params44);
    }

    @Test
    public void test2535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2535");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException18 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2536");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException4.setIndex(index6);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        java.lang.String[] strArray18 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        retryOnPrimaryException11.setShard(shardId20);
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException11.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str32 = retryOnPrimaryException28.getDetailedMessage();
        java.lang.Throwable throwable33 = retryOnPrimaryException28.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable33);
        org.elasticsearch.index.Index index35 = retryOnPrimaryException34.getIndex();
        java.lang.String str36 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        retryOnPrimaryException40.setIndex("");
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException40.setResources("", strArray49);
        retryOnPrimaryException34.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray49);
        retryOnPrimaryException11.addHeader("retry_on_primary_exception", strArray49);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray49);
        org.elasticsearch.index.Index index54 = retryOnPrimaryException4.getIndex();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable33.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "retry_on_primary_exception" + "'", str36, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNull(index54);
    }

    @Test
    public void test2537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2537");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException4.getSuppressed();
        retryOnPrimaryException4.setIndex("");
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String str11 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException14.getHeaderKeys();
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "");
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.rest.RestStatus restStatus23 = retryOnPrimaryException21.status();
        retryOnPrimaryException21.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable throwable27 = retryOnPrimaryException21.getRootCause();
        retryOnPrimaryException4.addSuppressed(throwable27);
        java.lang.String str29 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + restStatus23 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus23.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "");
        org.junit.Assert.assertEquals(throwable27.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2538");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException4.setShard(shardId24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException35.setResources("", strArray44);
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray44);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException28.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId49 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.index.shard.ShardId shardId50 = retryOnPrimaryException4.getShardId();
        java.lang.Throwable[] throwableArray51 = retryOnPrimaryException4.getSuppressed();
        java.lang.String str52 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId49);
        org.junit.Assert.assertNull(shardId50);
        org.junit.Assert.assertNotNull(throwableArray51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str52, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2539");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index15 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(index15);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2540");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        retryOnPrimaryException7.setIndex("");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException7.setResources("", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable20 = retryOnPrimaryException7.getRootCause();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId22 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.String str45 = retryOnPrimaryException26.getDetailedMessage();
        java.lang.String str46 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str47 = retryOnPrimaryException26.getDetailedMessage();
        org.elasticsearch.index.Index index48 = null;
        retryOnPrimaryException26.setIndex(index48);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.Throwable[] throwableArray56 = retryOnPrimaryException53.getSuppressed();
        java.lang.String[] strArray61 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException53.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray61);
        retryOnPrimaryException26.addHeader("hi!", strArray61);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray61);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray61);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray66 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass67 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "retry_on_primary_exception" + "'", str46, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray66);
        org.junit.Assert.assertNotNull(wildcardClass67);
    }

    @Test
    public void test2541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2541");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        retryOnPrimaryException6.setIndex("");
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException6.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        java.lang.Throwable throwable19 = retryOnPrimaryException13.getRootCause();
        retryOnPrimaryException6.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable[] throwableArray24 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2542");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String str7 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException4.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId8);
    }

    @Test
    public void test2543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2543");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("", strArray26);
        retryOnPrimaryException10.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException2.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray26);
        org.elasticsearch.common.io.stream.StreamInput streamInput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException31 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strArray26);
    }

    @Test
    public void test2544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2544");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        throwable5.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException19.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException30.getHeaderKeys();
        java.lang.Throwable throwable32 = retryOnPrimaryException30.getRootCause();
        java.lang.String[] strArray38 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        retryOnPrimaryException30.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList39);
        java.util.List<java.lang.String> strList43 = null;
        retryOnPrimaryException30.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList43);
        java.lang.String str45 = retryOnPrimaryException30.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus46 = retryOnPrimaryException30.status();
        org.elasticsearch.index.Index index47 = retryOnPrimaryException30.getIndex();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException19.writeTo(streamOutput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertTrue("'" + restStatus46 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus46.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index47);
    }

    @Test
    public void test2545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2545");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException12);
        java.util.List<java.lang.String> strList33 = retryOnPrimaryException12.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        retryOnPrimaryException12.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.rest.RestStatus restStatus36 = retryOnPrimaryException12.status();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str45 = retryOnPrimaryException41.getDetailedMessage();
        java.lang.Throwable throwable46 = retryOnPrimaryException41.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable46);
        org.elasticsearch.index.Index index48 = retryOnPrimaryException47.getIndex();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        java.util.Set<java.lang.String> strSet51 = retryOnPrimaryException12.getHeaderKeys();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNull(strList33);
        org.junit.Assert.assertTrue("'" + restStatus36 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus36.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable46.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strSet51);
    }

    @Test
    public void test2546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2546");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test2547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2547");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException15.setIndex(index18);
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException15.status();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable22 = retryOnPrimaryException15.getRootCause();
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException15.getHeaderKeys();
        java.lang.Throwable[] throwableArray24 = retryOnPrimaryException15.getSuppressed();
        java.lang.Throwable throwable25 = retryOnPrimaryException15.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2548");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = retryOnPrimaryException17.getResourceType();
        java.lang.Throwable throwable21 = retryOnPrimaryException17.getRootCause();
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException17.getSuppressed();
        java.lang.String str23 = retryOnPrimaryException17.getResourceType();
        java.lang.Throwable throwable24 = retryOnPrimaryException17.unwrapCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder25 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params26 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder27 = retryOnPrimaryException17.toXContent(xContentBuilder25, params26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable24.toString(), "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertNotNull(params26);
    }

    @Test
    public void test2549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2549");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str25 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) '4');
        java.lang.String str29 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "hi!");
        retryOnPrimaryException33.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        retryOnPrimaryException33.setShard(shardId37);
        org.elasticsearch.rest.RestStatus restStatus39 = retryOnPrimaryException33.status();
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException33);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        java.lang.Throwable throwable45 = retryOnPrimaryException44.unwrapCause();
        java.lang.String[] strArray49 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        retryOnPrimaryException44.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException33.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException2.addHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (byte) 10);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder58 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params59 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder60 = retryOnPrimaryException2.toXContent(xContentBuilder58, params59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str25, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + restStatus39 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus39.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(params59);
    }

    @Test
    public void test2550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2550");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        java.lang.String[] strArray16 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException9.setResources("rest.exception.cause.skip", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException9.getHeaderKeys();
        java.lang.String str21 = retryOnPrimaryException9.getDetailedMessage();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test2551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2551");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException17.getHeaderKeys();
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException17.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder24 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params25 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder26 = retryOnPrimaryException17.toXContent(xContentBuilder24, params25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(params25);
    }

    @Test
    public void test2552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2552");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        retryOnPrimaryException6.setIndex("");
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException6.setResources("", strArray15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        retryOnPrimaryException6.setShard(shardId19);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException6.getShardId();
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException26.getHeaderKeys();
        java.lang.Throwable throwable28 = retryOnPrimaryException26.getRootCause();
        java.lang.String[] strArray34 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException26.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList35);
        retryOnPrimaryException6.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList35);
        java.lang.String str39 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        retryOnPrimaryException43.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException43.setShard(shardId47);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index53 = retryOnPrimaryException52.getIndex();
        java.lang.String str54 = retryOnPrimaryException52.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index59 = retryOnPrimaryException58.getIndex();
        java.lang.String str60 = retryOnPrimaryException58.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        retryOnPrimaryException64.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        retryOnPrimaryException71.setIndex("");
        java.lang.String[] strArray80 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException71.setResources("", strArray80);
        retryOnPrimaryException64.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        retryOnPrimaryException58.setResources("", strArray80);
        retryOnPrimaryException52.setResources("", strArray80);
        retryOnPrimaryException43.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        retryOnPrimaryException6.setResources("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray80);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray80);
        org.elasticsearch.rest.RestStatus restStatus88 = retryOnPrimaryException2.status();
        java.lang.Class<?> wildcardClass89 = restStatus88.getClass();
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "retry_on_primary_exception" + "'", str39, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str54, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str60, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + restStatus88 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus88.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2553");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException9.setShard("", (int) (byte) 0);
        java.lang.Throwable throwable21 = retryOnPrimaryException9.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        org.elasticsearch.index.Index index29 = null;
        retryOnPrimaryException26.setIndex(index29);
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException26.getResourceId();
        java.lang.Throwable throwable32 = retryOnPrimaryException26.getRootCause();
        java.lang.String str33 = retryOnPrimaryException26.toString();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException26.getShardId();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.Throwable[] throwableArray55 = retryOnPrimaryException52.getSuppressed();
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        retryOnPrimaryException38.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index60 = null;
        retryOnPrimaryException38.setIndex(index60);
        java.util.List<java.lang.String> strList62 = retryOnPrimaryException38.getResourceId();
        retryOnPrimaryException26.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strList62);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.lang.Throwable) retryOnPrimaryException26);
        throwable21.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        org.elasticsearch.common.io.stream.StreamInput streamInput66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException67 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException64, streamInput66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[][[][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[][[][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "[][[][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str33, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(strList62);
    }

    @Test
    public void test2554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2554");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException41.getHeader("");
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
    }

    @Test
    public void test2555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2555");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException14.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException14.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException44.setResources("", strArray53);
        retryOnPrimaryException37.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray53);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray53);
        retryOnPrimaryException17.addHeader("", strArray53);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray53);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput59 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput59);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray53);
    }

    @Test
    public void test2556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2556");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        java.util.List<java.lang.String> strList46 = retryOnPrimaryException24.getHeader("hi!");
        java.lang.Throwable throwable47 = retryOnPrimaryException24.unwrapCause();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        org.elasticsearch.index.Index index54 = null;
        retryOnPrimaryException51.setIndex(index54);
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException51.getResourceId();
        java.lang.Throwable throwable57 = retryOnPrimaryException51.getRootCause();
        java.lang.String str58 = retryOnPrimaryException51.toString();
        org.elasticsearch.index.shard.ShardId shardId59 = retryOnPrimaryException51.getShardId();
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.cause.skip");
        retryOnPrimaryException63.setIndex("");
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException63.setResources("", strArray72);
        boolean boolean74 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException63);
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "rest.exception.cause.skip");
        retryOnPrimaryException77.setIndex("");
        java.lang.Throwable[] throwableArray80 = retryOnPrimaryException77.getSuppressed();
        retryOnPrimaryException63.addSuppressed((java.lang.Throwable) retryOnPrimaryException77);
        retryOnPrimaryException63.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index85 = null;
        retryOnPrimaryException63.setIndex(index85);
        java.util.List<java.lang.String> strList87 = retryOnPrimaryException63.getResourceId();
        retryOnPrimaryException51.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strList87);
        java.lang.String str89 = retryOnPrimaryException51.toString();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException51);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput91 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException24.writeTo(streamOutput91);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(strList46);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str58, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId59);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + false + "'", boolean74 == false);
        org.junit.Assert.assertNotNull(throwableArray80);
        org.junit.Assert.assertNotNull(strList87);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str89, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2557");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = retryOnPrimaryException24.getIndex();
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.String str29 = retryOnPrimaryException24.getDetailedMessage();
        org.elasticsearch.index.Index index30 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException24.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        java.lang.Throwable throwable36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.stacktrace.skip", throwable36);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException41.getHeaderKeys();
        retryOnPrimaryException41.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.cause.skip");
        retryOnPrimaryException56.setIndex("");
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException56.setResources("", strArray65);
        retryOnPrimaryException49.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray65);
        java.lang.String str68 = retryOnPrimaryException49.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException71 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId69, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index72 = retryOnPrimaryException71.getIndex();
        retryOnPrimaryException49.addSuppressed((java.lang.Throwable) retryOnPrimaryException71);
        retryOnPrimaryException71.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet80 = retryOnPrimaryException79.getHeaderKeys();
        java.lang.Throwable throwable81 = retryOnPrimaryException79.getRootCause();
        java.lang.String[] strArray87 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        retryOnPrimaryException79.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException71.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException41.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException37.addHeader("hi!", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException24.addHeader("", (java.util.List<java.lang.String>) strList88);
        java.util.List<java.lang.String> strList95 = retryOnPrimaryException24.getResourceId();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index30);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index72);
        org.junit.Assert.assertNotNull(strSet80);
        org.junit.Assert.assertNotNull(throwable81);
        org.junit.Assert.assertEquals(throwable81.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable81.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable81.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(strList95);
    }

    @Test
    public void test2558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2558");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable10 = retryOnPrimaryException8.getRootCause();
        java.lang.String[] strArray16 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        retryOnPrimaryException8.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList17);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList17);
        java.lang.Class<?> wildcardClass21 = strList17.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test2559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2559");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException2.setIndex(index19);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2560");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getResourceId();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test2561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2561");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable10 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test2562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2562");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet55 = retryOnPrimaryException54.getHeaderKeys();
        java.lang.Throwable throwable56 = retryOnPrimaryException54.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException54);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        java.lang.Throwable[] throwableArray59 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) '4');
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder63 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params64 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder65 = retryOnPrimaryException2.toXContent(xContentBuilder63, params64);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(params64);
    }

    @Test
    public void test2563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2563");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str22 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.getRootCause();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str25 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus26 = retryOnPrimaryException2.status();
        java.lang.String str27 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "retry_on_primary_exception");
        java.lang.String str32 = retryOnPrimaryException31.toString();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        retryOnPrimaryException36.setIndex("");
        java.lang.String[] strArray45 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException36.setResources("", strArray45);
        retryOnPrimaryException31.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[rest.exception.stacktrace.skip]", strArray45);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception50 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + restStatus26 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus26.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str32, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray45);
    }

    @Test
    public void test2564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2564");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index9 = retryOnPrimaryException8.getIndex();
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        retryOnPrimaryException8.setResources("", strArray30);
        retryOnPrimaryException2.setResources("", strArray30);
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index36 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setShard("[rest.exception.stacktrace.skip] RetryOnPrimaryException[rest.exception.cause.skip]", 0);
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNull(index36);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2565");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException4.guessRootCauses();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException21.getHeaderKeys();
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "");
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.rest.RestStatus restStatus30 = retryOnPrimaryException28.status();
        java.lang.String[] strArray35 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException28.setResources("rest.exception.cause.skip", strArray35);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray35);
        java.util.Set<java.lang.String> strSet39 = retryOnPrimaryException4.getHeaderKeys();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertTrue("'" + restStatus30 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus30.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strSet39);
    }

    @Test
    public void test2566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2566");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]", 10);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]][[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "retry_on_primary_exception" + "'", str5, "retry_on_primary_exception");
    }

    @Test
    public void test2567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2567");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index9 = retryOnPrimaryException8.getIndex();
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        retryOnPrimaryException8.setResources("", strArray30);
        retryOnPrimaryException2.setResources("", strArray30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable37 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2568");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray37);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException2.getHeader("");
        java.lang.Throwable throwable43 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable throwable44 = retryOnPrimaryException2.getRootCause();
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable44);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable44);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable44.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
    }

    @Test
    public void test2569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2569");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 0);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("[retry_on_primary_exception][[retry_on_primary_exception][32]] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2570");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet8);
    }

    @Test
    public void test2571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2571");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException4.setShard(shardId24);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException35.setResources("", strArray44);
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray44);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException28.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable[] throwableArray49 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray50 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus51 = retryOnPrimaryException4.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(throwableArray49);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray50);
        org.junit.Assert.assertTrue("'" + restStatus51 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus51.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2572");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException10.getHeaderKeys();
        java.lang.String str15 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException10.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str15, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test2573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2573");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        java.lang.Throwable throwable18 = retryOnPrimaryException16.getRootCause();
        java.lang.String[] strArray24 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        retryOnPrimaryException16.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList25);
        java.util.List<java.lang.String> strList29 = null;
        retryOnPrimaryException16.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "hi!");
        retryOnPrimaryException35.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        retryOnPrimaryException42.setIndex("");
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException42.setResources("", strArray51);
        retryOnPrimaryException35.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray51);
        retryOnPrimaryException16.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray51);
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException16.getHeader("");
        java.lang.Throwable throwable57 = retryOnPrimaryException16.unwrapCause();
        retryOnPrimaryException2.addSuppressed(throwable57);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        retryOnPrimaryException62.setIndex("");
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        java.lang.String str79 = retryOnPrimaryException68.toString();
        retryOnPrimaryException62.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        java.lang.String str81 = retryOnPrimaryException62.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId82 = null;
        retryOnPrimaryException62.setShard(shardId82);
        java.lang.String[] strArray94 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList95 = new java.util.ArrayList<java.lang.String>();
        boolean boolean96 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList95, strArray94);
        retryOnPrimaryException62.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList95);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList95);
        java.lang.String str99 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str79 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str79, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str81);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + true + "'", boolean96 == true);
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str99, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2574");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable19 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable[] throwableArray20 = throwable19.getSuppressed();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray20);
    }

    @Test
    public void test2575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2575");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException4.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException4.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
    }

    @Test
    public void test2576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2576");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.Index index14 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException2.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder18 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params19 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder20 = retryOnPrimaryException2.toXContent(xContentBuilder18, params19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params19);
    }

    @Test
    public void test2577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2577");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException2.status();
        java.lang.String str25 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2578");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException4.getHeaderKeys();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException13.setShard(shardId17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable20 = retryOnPrimaryException13.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException13.guessRootCauses();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "retry_on_primary_exception");
        java.lang.String str26 = retryOnPrimaryException25.toString();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable throwable43 = retryOnPrimaryException30.getRootCause();
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId45 = retryOnPrimaryException30.getShardId();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.cause.skip");
        retryOnPrimaryException56.setIndex("");
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException56.setResources("", strArray65);
        retryOnPrimaryException49.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray65);
        java.lang.String str68 = retryOnPrimaryException49.getDetailedMessage();
        java.lang.String str69 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String str70 = retryOnPrimaryException49.getDetailedMessage();
        org.elasticsearch.index.Index index71 = null;
        retryOnPrimaryException49.setIndex(index71);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "rest.exception.cause.skip");
        retryOnPrimaryException76.setIndex("");
        java.lang.Throwable[] throwableArray79 = retryOnPrimaryException76.getSuppressed();
        java.lang.String[] strArray84 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException76.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray84);
        retryOnPrimaryException49.addHeader("hi!", strArray84);
        retryOnPrimaryException30.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray84);
        retryOnPrimaryException25.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray84);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.rest.RestStatus restStatus90 = retryOnPrimaryException13.status();
        java.lang.String str91 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException92 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String[] strArray94 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException92.setResources("RetryOnPrimaryException[]", strArray94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str26, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "retry_on_primary_exception" + "'", str69, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str70, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + restStatus90 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus90.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str91, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2579");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        java.lang.String str11 = retryOnPrimaryException7.toString();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable[] throwableArray13 = retryOnPrimaryException7.getSuppressed();
        java.lang.String str14 = retryOnPrimaryException7.toString();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str11, "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(throwableArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
    }

    @Test
    public void test2580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2580");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException2.getShardId();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        retryOnPrimaryException2.setShard("", (int) (byte) 10);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNotNull(strList21);
    }

    @Test
    public void test2581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2581");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException4.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList13 = retryOnPrimaryException4.getHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(strList13);
    }

    @Test
    public void test2582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2582");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException2.setIndex(index12);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException23.setIndex(index26);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException23.status();
        java.lang.Throwable throwable29 = retryOnPrimaryException23.getRootCause();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable throwable31 = retryOnPrimaryException16.unwrapCause();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable34 = retryOnPrimaryException16.getRootCause();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder37 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params38 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder39 = retryOnPrimaryException2.toXContent(xContentBuilder37, params38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray35);
    }

    @Test
    public void test2583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2583");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable22 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet23);
    }

    @Test
    public void test2584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2584");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException2.getHeader("[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamInput streamInput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException33 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test2585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2585");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.index.Index index13 = null;
        retryOnPrimaryException4.setIndex(index13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str22 = retryOnPrimaryException18.getDetailedMessage();
        java.lang.Throwable throwable23 = retryOnPrimaryException18.unwrapCause();
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.Index index25 = null;
        retryOnPrimaryException18.setIndex(index25);
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException18.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList28);
    }

    @Test
    public void test2586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2586");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable12 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException4.status();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException18.getHeaderKeys();
        java.lang.Throwable throwable20 = retryOnPrimaryException18.getRootCause();
        java.lang.String[] strArray26 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        retryOnPrimaryException18.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList27);
        java.util.List<java.lang.String> strList31 = null;
        retryOnPrimaryException18.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList31);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException44.setResources("", strArray53);
        retryOnPrimaryException37.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray53);
        retryOnPrimaryException18.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray53);
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException18.getHeader("");
        java.lang.Throwable throwable59 = retryOnPrimaryException18.unwrapCause();
        retryOnPrimaryException4.addSuppressed(throwable59);
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = retryOnPrimaryException4.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable12.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
    }

    @Test
    public void test2587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2587");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException41.getHeader("");
        java.lang.Throwable throwable52 = retryOnPrimaryException41.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput53 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException41, streamOutput53);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2588");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.String[] strArray34 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList35);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params39 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = retryOnPrimaryException2.toXContent(xContentBuilder38, params39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(params39);
    }

    @Test
    public void test2589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2589");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2590");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        java.lang.String[] strArray16 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException9.setResources("rest.exception.cause.skip", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder21 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params22 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder23 = retryOnPrimaryException9.toXContent(xContentBuilder21, params22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(params22);
    }

    @Test
    public void test2591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2591");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId18 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.io.stream.StreamInput streamInput19 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(shardId18);
    }

    @Test
    public void test2592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2592");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.Index index39 = retryOnPrimaryException36.getIndex();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException43.getSuppressed();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray51);
        retryOnPrimaryException36.setResources("hi!", strArray51);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray51);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray55 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray55);
    }

    @Test
    public void test2593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2593");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable19 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass20 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass20);
    }

    @Test
    public void test2594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2594");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException2.status();
        java.lang.String str50 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str50, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2595");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException24.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = retryOnPrimaryException24.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException24.writeTo(streamOutput47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
    }

    @Test
    public void test2596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2596");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException19.getHeaderKeys();
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException26.status();
        java.lang.String[] strArray33 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException26.setResources("rest.exception.cause.skip", strArray33);
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray33);
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str38 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable40 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable[] throwableArray41 = throwable40.getSuppressed();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray41);
    }

    @Test
    public void test2597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2597");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.getResourceType();
        java.lang.String str14 = retryOnPrimaryException10.getDetailedMessage();
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException10.getSuppressed();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        retryOnPrimaryException34.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        retryOnPrimaryException34.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray50);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray50);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray54 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String str55 = retryOnPrimaryException19.getResourceType();
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.String str57 = retryOnPrimaryException19.getResourceType();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str14, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str55, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str57, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2598");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.Throwable[] throwableArray16 = retryOnPrimaryException13.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index22 = retryOnPrimaryException21.getIndex();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("", strArray41);
        java.lang.String str43 = retryOnPrimaryException32.toString();
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str45 = retryOnPrimaryException26.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        retryOnPrimaryException26.setShard(shardId46);
        java.lang.String[] strArray58 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        retryOnPrimaryException26.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException21.addHeader("", (java.util.List<java.lang.String>) strList59);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList59);
        java.util.List<java.lang.String> strList64 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus65 = retryOnPrimaryException13.status();
        java.lang.Class<?> wildcardClass66 = retryOnPrimaryException13.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(throwableArray16);
        org.junit.Assert.assertNull(index22);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str43, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNull(strList64);
        org.junit.Assert.assertTrue("'" + restStatus65 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus65.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2599");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException2.setIndex(index19);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray22 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput23 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable24 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput23);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray22);
    }

    @Test
    public void test2600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2600");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException41.getHeader("");
        java.lang.String str52 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException41);
        java.util.Set<java.lang.String> strSet53 = retryOnPrimaryException41.getHeaderKeys();
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException41.getHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException41.setIndex("");
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "retry_on_primary_exception" + "'", str52, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(strList55);
    }

    @Test
    public void test2601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2601");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable13 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strSet15);
    }

    @Test
    public void test2602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2602");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.lang.Throwable throwable10 = retryOnPrimaryException9.unwrapCause();
        java.lang.String[] strArray14 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList15);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        retryOnPrimaryException9.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray28);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException34.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        retryOnPrimaryException34.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray42 = retryOnPrimaryException34.guessRootCauses();
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException34);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2603");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.lang.String str16 = retryOnPrimaryException4.toString();
        java.lang.Throwable throwable17 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str16, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2604");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray37);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException2.getHeader("");
        java.lang.Throwable throwable43 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.stacktrace.skip", throwable47);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        retryOnPrimaryException54.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str58 = retryOnPrimaryException54.getDetailedMessage();
        java.lang.Throwable throwable59 = retryOnPrimaryException54.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable59);
        org.elasticsearch.index.Index index61 = retryOnPrimaryException60.getIndex();
        java.lang.String str62 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException60);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        retryOnPrimaryException66.setIndex("");
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException66.setResources("", strArray75);
        retryOnPrimaryException60.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray75);
        retryOnPrimaryException48.addHeader("retry_on_primary_exception", strArray75);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray75);
        java.util.List<java.lang.String> strList81 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str58, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable59.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "retry_on_primary_exception" + "'", str62, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNull(strList81);
    }

    @Test
    public void test2605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2605");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException2.getShardId();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test2606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2606");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable24 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setShard("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", 10);
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (int) (short) 0);
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test2607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2607");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException39.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        java.lang.Throwable throwable50 = retryOnPrimaryException49.unwrapCause();
        java.lang.String[] strArray54 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException49.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList55);
        java.util.List<java.lang.String> strList59 = retryOnPrimaryException49.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        retryOnPrimaryException39.addSuppressed((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Class<?> wildcardClass62 = retryOnPrimaryException49.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(wildcardClass62);
    }

    @Test
    public void test2608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2608");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException2.status();
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str24 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "hi!");
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException35.setResources("", strArray44);
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray44);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException28.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus48 = retryOnPrimaryException28.status();
        java.lang.String str49 = retryOnPrimaryException28.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet54 = retryOnPrimaryException53.getHeaderKeys();
        java.lang.Throwable throwable55 = retryOnPrimaryException53.getRootCause();
        java.lang.String[] strArray61 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        retryOnPrimaryException53.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList62);
        java.util.List<java.lang.String> strList66 = null;
        retryOnPrimaryException53.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList66);
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException72.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException79.setResources("", strArray88);
        retryOnPrimaryException72.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException53.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray88);
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", strArray88);
        java.lang.Class<?> wildcardClass94 = strArray88.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str24, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertTrue("'" + restStatus48 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus48.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertNotNull(wildcardClass94);
    }

    @Test
    public void test2609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2609");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException23.setIndex(index26);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException23.status();
        java.lang.Throwable throwable29 = retryOnPrimaryException23.getRootCause();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable throwable36 = retryOnPrimaryException34.getRootCause();
        java.lang.String[] strArray42 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        retryOnPrimaryException34.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException23.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        org.elasticsearch.rest.RestStatus restStatus48 = retryOnPrimaryException4.status();
        java.util.List<java.lang.String> strList49 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput50 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException4.writeTo(streamOutput50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertTrue("'" + restStatus48 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus48.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList49);
    }

    @Test
    public void test2610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2610");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.String str24 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str24, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2611");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException13.guessRootCauses();
        java.lang.String[] strArray22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException13.addHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
    }

    @Test
    public void test2612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2612");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException14.guessRootCauses();
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException14.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException38.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException45.setResources("", strArray54);
        retryOnPrimaryException38.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException14.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray54);
        retryOnPrimaryException10.setResources("hi!", strArray54);
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str61 = retryOnPrimaryException10.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray62 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray62);
    }

    @Test
    public void test2613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2613");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException32.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 10);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet44 = retryOnPrimaryException43.getHeaderKeys();
        retryOnPrimaryException43.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "");
        retryOnPrimaryException43.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        org.elasticsearch.index.Index index57 = null;
        retryOnPrimaryException54.setIndex(index57);
        org.elasticsearch.rest.RestStatus restStatus59 = retryOnPrimaryException54.status();
        retryOnPrimaryException43.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        java.lang.String[] strArray65 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException54.addHeader("rest.exception.stacktrace.skip", strArray65);
        retryOnPrimaryException32.addHeader("rest.exception.stacktrace.skip", strArray65);
        java.lang.String str68 = retryOnPrimaryException32.toString();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertTrue("'" + restStatus59 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus59.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str68, "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2614");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable13 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        java.lang.String str38 = retryOnPrimaryException19.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index42 = retryOnPrimaryException41.getIndex();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.rest.RestStatus restStatus44 = retryOnPrimaryException19.status();
        org.elasticsearch.rest.RestStatus restStatus45 = retryOnPrimaryException19.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.Throwable throwable47 = retryOnPrimaryException19.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException19.status();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str38, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertTrue("'" + restStatus44 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus44.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus45 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus45.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable47.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2615");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (byte) 10);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException2.status();
        java.lang.String[] strArray18 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2616");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        java.lang.String str36 = retryOnPrimaryException17.getDetailedMessage();
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str38 = retryOnPrimaryException17.getDetailedMessage();
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException17.setIndex(index39);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException44.getSuppressed();
        java.lang.String[] strArray52 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException44.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray52);
        retryOnPrimaryException17.addHeader("hi!", strArray52);
        retryOnPrimaryException2.setResources("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray52);
        java.lang.String str56 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str38, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "retry_on_primary_exception" + "'", str56, "retry_on_primary_exception");
    }

    @Test
    public void test2617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2617");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        java.lang.Throwable throwable11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.stacktrace.skip", throwable11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException31.setResources("", strArray40);
        retryOnPrimaryException24.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray40);
        java.lang.String str43 = retryOnPrimaryException24.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index47 = retryOnPrimaryException46.getIndex();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException46);
        retryOnPrimaryException46.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet55 = retryOnPrimaryException54.getHeaderKeys();
        java.lang.Throwable throwable56 = retryOnPrimaryException54.getRootCause();
        java.lang.String[] strArray62 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        retryOnPrimaryException54.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException46.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException16.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException12.addHeader("hi!", (java.util.List<java.lang.String>) strList63);
        retryOnPrimaryException4.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList63);
        org.elasticsearch.rest.RestStatus restStatus70 = retryOnPrimaryException4.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray71 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput72 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException73 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException4, streamOutput72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertTrue("'" + restStatus70 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus70.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray71);
    }

    @Test
    public void test2618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2618");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException10 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(str8);
    }

    @Test
    public void test2619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2619");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        java.lang.Throwable throwable4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException5 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.stacktrace.skip", throwable4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException9.getHeaderKeys();
        retryOnPrimaryException9.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        java.lang.String str36 = retryOnPrimaryException17.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index40 = retryOnPrimaryException39.getIndex();
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException39.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException47.getHeaderKeys();
        java.lang.Throwable throwable49 = retryOnPrimaryException47.getRootCause();
        java.lang.String[] strArray55 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        retryOnPrimaryException47.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList56);
        retryOnPrimaryException39.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList56);
        retryOnPrimaryException9.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList56);
        retryOnPrimaryException5.addHeader("hi!", (java.util.List<java.lang.String>) strList56);
        java.lang.String str62 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException5);
        org.elasticsearch.index.shard.ShardId shardId63 = retryOnPrimaryException5.getShardId();
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException5);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index40);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "retry_on_primary_exception" + "'", str62, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId63);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test2620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2620");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        java.lang.String str15 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
    }

    @Test
    public void test2621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2621");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException13.setResources("", strArray22);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray22);
        java.lang.Throwable throwable25 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException29.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str33 = retryOnPrimaryException29.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException29.unwrapCause();
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException29.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable throwable39 = retryOnPrimaryException29.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index44 = retryOnPrimaryException43.getIndex();
        java.lang.String str45 = retryOnPrimaryException43.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.cause.skip");
        retryOnPrimaryException56.setIndex("");
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException56.setResources("", strArray65);
        retryOnPrimaryException49.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray65);
        retryOnPrimaryException43.setResources("", strArray65);
        retryOnPrimaryException29.setResources("rest.exception.cause.skip", strArray65);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray65);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable34.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray65);
    }

    @Test
    public void test2622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2622");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[]");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable13 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "[RetryOnPrimaryException[]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2623");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
    }

    @Test
    public void test2624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2624");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable24 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setShard("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", 10);
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (int) (short) 0);
        java.lang.String str32 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder33 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params34 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder35 = retryOnPrimaryException2.toXContent(xContentBuilder33, params34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(params34);
    }

    @Test
    public void test2625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2625");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str50 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str51 = retryOnPrimaryException2.toString();
        java.lang.String str52 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str50, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str51, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str52, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2626");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException13.guessRootCauses();
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException13.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.String[] strArray53 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException44.setResources("", strArray53);
        retryOnPrimaryException37.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray53);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray53);
        retryOnPrimaryException13.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray53);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray53);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray59 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str61 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable62 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str63 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable62);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray59);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str61, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "retry_on_primary_exception" + "'", str63, "retry_on_primary_exception");
    }

    @Test
    public void test2627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2627");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException7.guessRootCauses();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException7.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException7.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test2628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2628");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException9.unwrapCause();
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException9.getResourceId();
        retryOnPrimaryException9.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];");
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException9.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput39 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception40 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException9, streamOutput39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2629");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable20 = retryOnPrimaryException13.getRootCause();
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException13.getHeaderKeys();
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException13.getSuppressed();
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException13.getShardId();
        java.lang.Throwable throwable25 = retryOnPrimaryException13.unwrapCause();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNull(shardId24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable25.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2630");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException2.setIndex(index22);
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str25 = retryOnPrimaryException2.toString();
        java.lang.String str26 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str25, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "" + "'", str26, "");
    }

    @Test
    public void test2631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2631");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str6 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params11 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = retryOnPrimaryException2.toXContent(xContentBuilder10, params11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str6, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(params11);
    }

    @Test
    public void test2632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2632");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamInput streamInput13 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception14 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test2633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2633");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable throwable22 = retryOnPrimaryException2.unwrapCause();
        java.lang.Class<?> wildcardClass23 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test2634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2634");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.Index index19 = null;
        retryOnPrimaryException2.setIndex(index19);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException26.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.Index index40 = null;
        retryOnPrimaryException26.setIndex(index40);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException45.getHeaderKeys();
        java.util.List<java.lang.String> strList47 = retryOnPrimaryException45.getResourceId();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException45);
        java.util.List<java.lang.String> strList50 = retryOnPrimaryException45.getHeader("");
        retryOnPrimaryException45.setIndex("rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet53 = retryOnPrimaryException45.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        java.lang.Throwable throwable57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.stacktrace.skip", throwable57);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        retryOnPrimaryException64.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str68 = retryOnPrimaryException64.getDetailedMessage();
        java.lang.Throwable throwable69 = retryOnPrimaryException64.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable69);
        org.elasticsearch.index.Index index71 = retryOnPrimaryException70.getIndex();
        java.lang.String str72 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException70);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "rest.exception.cause.skip");
        retryOnPrimaryException76.setIndex("");
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException76.setResources("", strArray85);
        retryOnPrimaryException70.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray85);
        retryOnPrimaryException58.addHeader("retry_on_primary_exception", strArray85);
        retryOnPrimaryException45.setResources("", strArray85);
        retryOnPrimaryException26.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray85);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray85);
        java.lang.Class<?> wildcardClass92 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNull(strList50);
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable69);
        org.junit.Assert.assertEquals(throwable69.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable69.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable69.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "retry_on_primary_exception" + "'", str72, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertNotNull(wildcardClass92);
    }

    @Test
    public void test2635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2635");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "retry_on_primary_exception");
        java.lang.String str20 = retryOnPrimaryException19.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str31 = retryOnPrimaryException27.getDetailedMessage();
        java.lang.Throwable throwable32 = retryOnPrimaryException27.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable32);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray41 = retryOnPrimaryException37.guessRootCauses();
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        java.lang.String[] strArray55 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException46.setResources("", strArray55);
        boolean boolean57 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        retryOnPrimaryException61.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException46.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException37.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray77);
        retryOnPrimaryException33.setResources("hi!", strArray77);
        retryOnPrimaryException19.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray77);
        retryOnPrimaryException2.addHeader("", strArray77);
        java.lang.String str85 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable86 = retryOnPrimaryException2.getRootCause();
        java.util.Set<java.lang.String> strSet87 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable88 = retryOnPrimaryException2.unwrapCause();
        java.lang.Class<?> wildcardClass89 = throwable88.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str20, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable32.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray41);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + false + "'", boolean57 == false);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str85, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable86);
        org.junit.Assert.assertEquals(throwable86.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable86.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet87);
        org.junit.Assert.assertNotNull(throwable88);
        org.junit.Assert.assertEquals(throwable88.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable88.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable88.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2636");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException9.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException9.guessRootCauses();
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException9.getHeaderKeys();
        java.lang.Class<?> wildcardClass38 = retryOnPrimaryException9.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test2637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2637");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException6.guessRootCauses();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException6.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.lang.Throwable throwable10 = retryOnPrimaryException6.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable10);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test2638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2638");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setIndex("rest.exception.cause.skip");
        java.lang.String str14 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException9.getShardId();
        java.lang.String str16 = retryOnPrimaryException9.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.lang.Throwable throwable21 = retryOnPrimaryException20.unwrapCause();
        java.lang.String[] strArray25 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        retryOnPrimaryException20.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList26);
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException20.status();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.String[] strArray41 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException32.setResources("", strArray41);
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.String str44 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        java.lang.Throwable throwable45 = retryOnPrimaryException32.getRootCause();
        retryOnPrimaryException20.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        retryOnPrimaryException50.setIndex("");
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException50);
        retryOnPrimaryException50.setShard("hi!", (int) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index61 = retryOnPrimaryException60.getIndex();
        java.lang.String str62 = retryOnPrimaryException60.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "hi!");
        retryOnPrimaryException66.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "rest.exception.cause.skip");
        retryOnPrimaryException73.setIndex("");
        java.lang.String[] strArray82 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException73.setResources("", strArray82);
        retryOnPrimaryException66.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray82);
        retryOnPrimaryException60.setResources("", strArray82);
        retryOnPrimaryException50.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray82);
        retryOnPrimaryException32.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray82);
        retryOnPrimaryException9.addHeader("[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]", strArray82);
        java.lang.Throwable throwable89 = retryOnPrimaryException9.unwrapCause();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str14, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "retry_on_primary_exception" + "'", str44, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNull(index61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str62, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertNotNull(throwable89);
        org.junit.Assert.assertEquals(throwable89.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable89.getMessage(), "");
        org.junit.Assert.assertEquals(throwable89.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[]");
    }

    @Test
    public void test2639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2639");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus6 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException9.getHeaderKeys();
        java.lang.Throwable throwable11 = retryOnPrimaryException9.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException9.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException9.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException9.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.lang.Throwable throwable21 = retryOnPrimaryException20.unwrapCause();
        java.lang.String[] strArray25 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        retryOnPrimaryException20.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList26);
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException20.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        retryOnPrimaryException35.setIndex("");
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException35.getSuppressed();
        java.lang.String[] strArray43 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException35.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray43);
        retryOnPrimaryException20.setResources("[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]", strArray43);
        retryOnPrimaryException9.addHeader("[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray43);
        java.lang.Throwable throwable47 = retryOnPrimaryException9.unwrapCause();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus6 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus6.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2640");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str10 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException12 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2641");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.String[] strArray34 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList35);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        java.lang.String str59 = retryOnPrimaryException40.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index63 = retryOnPrimaryException62.getIndex();
        retryOnPrimaryException40.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.Index index65 = null;
        retryOnPrimaryException40.setIndex(index65);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 100);
        java.util.Set<java.lang.String> strSet71 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet72 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str73 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str59, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index63);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(strSet72);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[RetryOnPrimaryException[rest.exception.cause.skip]][[RetryOnPrimaryException[rest.exception.cause.skip]][100]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str73, "[RetryOnPrimaryException[rest.exception.cause.skip]][[RetryOnPrimaryException[rest.exception.cause.skip]][100]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2642");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException11.getHeaderKeys();
        retryOnPrimaryException11.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "");
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        org.elasticsearch.index.Index index25 = null;
        retryOnPrimaryException22.setIndex(index25);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException22.status();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String[] strArray33 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException22.addHeader("rest.exception.stacktrace.skip", strArray33);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str37 = retryOnPrimaryException4.getResourceType();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNull(str37);
    }

    @Test
    public void test2643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2643");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException14.getSuppressed();
        java.lang.String[] strArray40 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("rest.exception.cause.skip", strArray40);
        retryOnPrimaryException4.addHeader("", strArray40);
        java.lang.Throwable[] throwableArray43 = retryOnPrimaryException4.getSuppressed();
        java.lang.String str44 = retryOnPrimaryException4.getDetailedMessage();
        retryOnPrimaryException4.setShard("rest.exception.stacktrace.skip", 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet52 = retryOnPrimaryException51.getHeaderKeys();
        retryOnPrimaryException51.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "");
        retryOnPrimaryException51.addSuppressed((java.lang.Throwable) retryOnPrimaryException58);
        org.elasticsearch.rest.RestStatus restStatus60 = retryOnPrimaryException58.status();
        retryOnPrimaryException58.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable[] throwableArray64 = retryOnPrimaryException58.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException58);
        java.lang.String str66 = retryOnPrimaryException58.getResourceType();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str44, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertTrue("'" + restStatus60 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus60.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNull(str66);
    }

    @Test
    public void test2644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2644");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException4.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index11 = null;
        retryOnPrimaryException4.setIndex(index11);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        retryOnPrimaryException16.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray32);
        java.lang.String str35 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index39 = retryOnPrimaryException38.getIndex();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.rest.RestStatus restStatus41 = retryOnPrimaryException16.status();
        java.lang.Throwable throwable42 = retryOnPrimaryException16.unwrapCause();
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException16.getResourceId();
        retryOnPrimaryException4.addHeader("rest.exception.stacktrace.skip", strList43);
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable46 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertTrue("'" + restStatus41 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus41.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable42.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2645");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException12.setShard(shardId25);
        org.elasticsearch.index.shard.ShardId shardId27 = retryOnPrimaryException12.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException12.setShard("hi!", (int) (byte) 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        java.lang.String[] strArray45 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException38.setShard(shardId47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = retryOnPrimaryException38.guessRootCauses();
        java.lang.String str50 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException38);
        java.lang.Throwable throwable52 = retryOnPrimaryException38.unwrapCause();
        retryOnPrimaryException38.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        retryOnPrimaryException58.setIndex("");
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException58.setResources("", strArray67);
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException58);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "hi!");
        retryOnPrimaryException73.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException80 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "rest.exception.cause.skip");
        retryOnPrimaryException80.setIndex("");
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException80.setResources("", strArray89);
        retryOnPrimaryException73.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray89);
        retryOnPrimaryException58.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray89);
        retryOnPrimaryException38.setResources("hi!", strArray89);
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray89);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", strArray89);
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput98 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput98);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "retry_on_primary_exception" + "'", str50, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test2646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2646");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        retryOnPrimaryException7.setIndex("");
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException13.setResources("", strArray22);
        java.lang.String str24 = retryOnPrimaryException13.toString();
        retryOnPrimaryException7.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str26 = retryOnPrimaryException7.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException7.setShard(shardId27);
        java.lang.String[] strArray39 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException7.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList40);
        retryOnPrimaryException2.addHeader("", (java.util.List<java.lang.String>) strList40);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList49 = retryOnPrimaryException48.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = retryOnPrimaryException50.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException50);
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException50);
        retryOnPrimaryException50.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        java.lang.Throwable throwable56 = retryOnPrimaryException50.getRootCause();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str24, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str26);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNull(strList49);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2647");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index11 = null;
        retryOnPrimaryException4.setIndex(index11);
        java.lang.String str13 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException4.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
    }

    @Test
    public void test2648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2648");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException4.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList13);
        java.util.List<java.lang.String> strList17 = null;
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList17);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        retryOnPrimaryException4.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray39);
        org.elasticsearch.index.Index index43 = retryOnPrimaryException4.getIndex();
        java.lang.String str44 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.shard.ShardId shardId45 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNull(index43);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str44, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
    }

    @Test
    public void test2649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2649");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(shardId11);
    }

    @Test
    public void test2650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2650");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput28 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable29 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test2651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2651");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException4.getShardId();
        java.lang.String str22 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException25 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException4, streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray23);
    }

    @Test
    public void test2652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2652");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException2.setIndex(index12);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException23.setIndex(index26);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException23.status();
        java.lang.Throwable throwable29 = retryOnPrimaryException23.getRootCause();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable throwable31 = retryOnPrimaryException16.unwrapCause();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable34 = retryOnPrimaryException16.getRootCause();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet41 = retryOnPrimaryException40.getHeaderKeys();
        java.lang.Throwable throwable42 = retryOnPrimaryException40.getRootCause();
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException47.getHeaderKeys();
        java.lang.Throwable throwable49 = retryOnPrimaryException47.getRootCause();
        java.lang.String[] strArray55 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        retryOnPrimaryException47.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList56);
        java.util.List<java.lang.String> strList60 = null;
        retryOnPrimaryException47.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList60);
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String str63 = retryOnPrimaryException47.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        retryOnPrimaryException74.setIndex("");
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException74.setResources("", strArray83);
        retryOnPrimaryException67.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray83);
        retryOnPrimaryException47.setResources("rest.exception.stacktrace.skip", strArray83);
        retryOnPrimaryException40.addHeader("[hi!][[hi!][0]] RetryOnPrimaryException[]", strArray83);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray83);
        java.lang.Class<?> wildcardClass89 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(wildcardClass89);
    }

    @Test
    public void test2653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2653");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException4.getShardId();
        java.lang.String str22 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", 10);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
    }

    @Test
    public void test2654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2654");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable6);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
    }

    @Test
    public void test2655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2655");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet9);
    }

    @Test
    public void test2656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2656");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = retryOnPrimaryException24.getIndex();
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException24.getSuppressed();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException24.getHeader("retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test2657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2657");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable13 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        java.lang.String str38 = retryOnPrimaryException19.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index42 = retryOnPrimaryException41.getIndex();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.rest.RestStatus restStatus44 = retryOnPrimaryException19.status();
        org.elasticsearch.rest.RestStatus restStatus45 = retryOnPrimaryException19.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        boolean boolean47 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str38, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertTrue("'" + restStatus44 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus44.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus45 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus45.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
    }

    @Test
    public void test2658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2658");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException10.getSuppressed();
        java.lang.Throwable throwable15 = retryOnPrimaryException10.getRootCause();
        java.lang.String str16 = retryOnPrimaryException10.getResourceType();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable15.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test2659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2659");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException9.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.Index index34 = null;
        retryOnPrimaryException20.setIndex(index34);
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException20.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId38 = retryOnPrimaryException20.getShardId();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "[hi!][[hi!][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNull(shardId38);
    }

    @Test
    public void test2660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2660");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.lang.String str15 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException13.setResources("", strArray35);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException13.getHeaderKeys();
        java.lang.Class<?> wildcardClass41 = strSet40.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test2661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2661");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setIndex("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(index4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
    }

    @Test
    public void test2662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2662");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.lang.Throwable throwable35 = retryOnPrimaryException34.unwrapCause();
        java.lang.String[] strArray39 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList40);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        java.lang.String str63 = retryOnPrimaryException52.toString();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str65 = retryOnPrimaryException46.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        retryOnPrimaryException46.setShard(shardId66);
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException46.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        java.util.List<java.lang.String> strList84 = retryOnPrimaryException2.getResourceId();
        java.lang.String str85 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder86 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params87 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder88 = retryOnPrimaryException2.toXContent(xContentBuilder86, params87);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[[] RetryOnPrimaryException[rest.exception.cause.skip]][[[] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str63, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str85, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params87);
    }

    @Test
    public void test2663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2663");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException2.setIndex(index18);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(throwableArray22);
    }

    @Test
    public void test2664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2664");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException2.setShard(shardId25);
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException2.getHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.String str29 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2665");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        java.lang.String[] strArray21 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray21);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        retryOnPrimaryException14.setShard(shardId23);
        org.elasticsearch.index.shard.ShardId shardId25 = retryOnPrimaryException14.getShardId();
        java.lang.String str26 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        org.elasticsearch.index.Index index33 = null;
        retryOnPrimaryException30.setIndex(index33);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException30.getHeader("");
        java.lang.String str37 = retryOnPrimaryException30.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException41.guessRootCauses();
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException41.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        retryOnPrimaryException50.setIndex("");
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException50.setResources("", strArray59);
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException50);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "hi!");
        retryOnPrimaryException65.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "rest.exception.cause.skip");
        retryOnPrimaryException72.setIndex("");
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException72.setResources("", strArray81);
        retryOnPrimaryException65.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray81);
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray81);
        retryOnPrimaryException41.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray81);
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray81);
        retryOnPrimaryException14.addHeader("retry_on_primary_exception", strArray81);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip] RetryOnPrimaryException[]", strArray81);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNull(shardId25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str26, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList36);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strArray81);
    }

    @Test
    public void test2666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2666");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException2.status();
        java.lang.String str18 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test2667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2667");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "rest.exception.cause.skip");
        java.lang.String[] strArray13 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException6.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray13);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException6.setShard(shardId15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException6.guessRootCauses();
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable20 = retryOnPrimaryException6.unwrapCause();
        retryOnPrimaryException6.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException48.setResources("", strArray57);
        retryOnPrimaryException41.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        retryOnPrimaryException6.setResources("hi!", strArray57);
        java.util.List<java.lang.String> strList63 = retryOnPrimaryException6.getHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.String str64 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable[] throwableArray65 = retryOnPrimaryException6.getSuppressed();
        java.lang.Throwable throwable66 = retryOnPrimaryException6.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "retry_on_primary_exception" + "'", str64, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(throwable66);
        org.junit.Assert.assertEquals(throwable66.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable66.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable66.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2668");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException4.getSuppressed();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException4.getHeader("rest.exception.cause.skip");
        java.lang.String str10 = retryOnPrimaryException4.toString();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException4.status();
        org.elasticsearch.index.Index index12 = retryOnPrimaryException4.getIndex();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str10, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index12);
    }

    @Test
    public void test2669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2669");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId18 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "");
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException29.status();
        retryOnPrimaryException29.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException29.getSuppressed();
        java.lang.Throwable throwable36 = retryOnPrimaryException29.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus37 = retryOnPrimaryException29.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.String[] strArray44 = new java.lang.String[] { "[hi!][[hi!][0]] RetryOnPrimaryException[]", "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", "retry_on_primary_exception", "[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException29.addHeader("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray44);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];", strArray44);
        java.lang.String str47 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList49 = retryOnPrimaryException2.getHeader("[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]][[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNull(shardId18);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "");
        org.junit.Assert.assertEquals(throwable36.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertTrue("'" + restStatus37 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus37.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str47, "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertNull(strList49);
    }

    @Test
    public void test2670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2670");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable17 = retryOnPrimaryException4.getRootCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException4.guessRootCauses();
        retryOnPrimaryException4.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
    }

    @Test
    public void test2671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2671");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable10 = retryOnPrimaryException8.getRootCause();
        java.lang.String[] strArray16 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        retryOnPrimaryException8.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList17);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList17);
        org.elasticsearch.index.Index index21 = retryOnPrimaryException2.getIndex();
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str24 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str24, "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2672");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList3 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        retryOnPrimaryException2.setShard(shardId4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException13.setResources("", strArray22);
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String str25 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException29);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "hi!");
        retryOnPrimaryException44.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException51.setResources("", strArray60);
        retryOnPrimaryException44.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray60);
        retryOnPrimaryException29.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray60);
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException29.status();
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException29.getResourceId();
        retryOnPrimaryException13.addHeader("rest.exception.stacktrace.skip", strList65);
        retryOnPrimaryException2.addHeader("", strList65);
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "retry_on_primary_exception" + "'", str25, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList65);
    }

    @Test
    public void test2673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2673");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable19 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str27 = retryOnPrimaryException23.getDetailedMessage();
        java.lang.Throwable throwable28 = retryOnPrimaryException23.unwrapCause();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException23.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str31 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException23);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable throwable33 = retryOnPrimaryException23.getRootCause();
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException23.getResourceId();
        org.elasticsearch.common.io.stream.StreamInput streamInput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException23, streamInput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "retry_on_primary_exception" + "'", str31, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable33.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList34);
    }

    @Test
    public void test2674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2674");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2675");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception27 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
    }

    @Test
    public void test2676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2676");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException9.getRootCause();
        java.util.Set<java.lang.String> strSet18 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException9.getShardId();
        java.lang.String str20 = retryOnPrimaryException9.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet18);
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str20, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2677");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test2678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2678");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        java.lang.Throwable throwable49 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput50 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable51 = org.elasticsearch.ElasticsearchException.readStackTrace(throwable49, streamInput50);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2679");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet55 = retryOnPrimaryException54.getHeaderKeys();
        java.lang.Throwable throwable56 = retryOnPrimaryException54.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException54);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        retryOnPrimaryException2.setShard("[] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 0);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "hi!");
        retryOnPrimaryException65.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "rest.exception.cause.skip");
        retryOnPrimaryException72.setIndex("");
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException72.setResources("", strArray81);
        retryOnPrimaryException65.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray81);
        java.lang.String str84 = retryOnPrimaryException65.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId85 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException87 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId85, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index88 = retryOnPrimaryException87.getIndex();
        retryOnPrimaryException65.addSuppressed((java.lang.Throwable) retryOnPrimaryException87);
        org.elasticsearch.rest.RestStatus restStatus90 = retryOnPrimaryException65.status();
        java.lang.Throwable throwable91 = retryOnPrimaryException65.unwrapCause();
        java.util.List<java.lang.String> strList92 = retryOnPrimaryException65.getResourceId();
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException65.getResourceId();
        retryOnPrimaryException2.addHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]", strList93);
        org.elasticsearch.common.io.stream.StreamInput streamInput95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException96 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strSet55);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertEquals("'" + str84 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str84, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index88);
        org.junit.Assert.assertTrue("'" + restStatus90 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus90.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable91);
        org.junit.Assert.assertEquals(throwable91.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable91.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable91.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList92);
        org.junit.Assert.assertNotNull(strList93);
    }

    @Test
    public void test2680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2680");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test2681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2681");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable18 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable[] throwableArray19 = throwable18.getSuppressed();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable18);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2682");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str14 = retryOnPrimaryException10.getResourceType();
        java.lang.Throwable throwable15 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException10.setIndex(index16);
        retryOnPrimaryException10.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException10.getResourceId();
        retryOnPrimaryException10.setShard("[rest.exception.cause.skip] RetryOnPrimaryException[]", (int) (byte) 0);
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException10.getHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput26 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException10.writeTo(streamOutput26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[rest.exception.cause.skip] RetryOnPrimaryException[]][[[rest.exception.cause.skip] RetryOnPrimaryException[]][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList25);
    }

    @Test
    public void test2683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2683");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException2.setShard("hi!", 0);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput20 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException21 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2684");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException39.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        java.lang.Throwable throwable50 = retryOnPrimaryException49.unwrapCause();
        java.lang.String[] strArray54 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        retryOnPrimaryException49.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList55);
        java.util.List<java.lang.String> strList59 = retryOnPrimaryException49.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        retryOnPrimaryException39.addSuppressed((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String str62 = retryOnPrimaryException49.getResourceType();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNull(strList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str62);
    }

    @Test
    public void test2685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2685");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.Index index4 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        boolean boolean22 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.String str23 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException11.setShard(shardId24);
        java.lang.String str26 = retryOnPrimaryException11.getDetailedMessage();
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException11.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        java.lang.String[] strArray37 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index42 = retryOnPrimaryException41.getIndex();
        java.lang.String str43 = retryOnPrimaryException41.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException54.setResources("", strArray63);
        retryOnPrimaryException47.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        retryOnPrimaryException41.setResources("", strArray63);
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.rest.RestStatus restStatus68 = retryOnPrimaryException30.status();
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        java.util.List<java.lang.String> strList70 = retryOnPrimaryException30.getResourceId();
        retryOnPrimaryException2.addHeader("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", strList70);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder72 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params73 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder74 = retryOnPrimaryException2.toXContent(xContentBuilder72, params73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(index4);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "retry_on_primary_exception" + "'", str23, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str26, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + restStatus68 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus68.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strList70);
        org.junit.Assert.assertNotNull(params73);
    }

    @Test
    public void test2686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2686");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList8 = null;
        retryOnPrimaryException2.addHeader("", strList8);
        java.lang.Class<?> wildcardClass10 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test2687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2687");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        retryOnPrimaryException8.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        retryOnPrimaryException2.setResources("", strArray24);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus31 = retryOnPrimaryException2.status();
        org.elasticsearch.index.Index index32 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput33 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput33);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertTrue("'" + restStatus31 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus31.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index32);
    }

    @Test
    public void test2688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2688");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        java.lang.String str41 = retryOnPrimaryException22.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index45 = retryOnPrimaryException44.getIndex();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.index.Index index47 = retryOnPrimaryException44.getIndex();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException51.getSuppressed();
        java.lang.String[] strArray59 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException51.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray59);
        retryOnPrimaryException44.setResources("hi!", strArray59);
        retryOnPrimaryException2.addHeader("", strArray59);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index67 = retryOnPrimaryException66.getIndex();
        java.lang.String str68 = retryOnPrimaryException66.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "hi!");
        retryOnPrimaryException72.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId77 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException79 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId77, "rest.exception.cause.skip");
        retryOnPrimaryException79.setIndex("");
        java.lang.String[] strArray88 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException79.setResources("", strArray88);
        retryOnPrimaryException72.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        retryOnPrimaryException66.setResources("", strArray88);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray88);
        java.lang.String str93 = retryOnPrimaryException2.toString();
        boolean boolean94 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean97 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNull(index47);
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNull(index67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray88);
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str93, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean94 + "' != '" + false + "'", boolean94 == false);
        org.junit.Assert.assertTrue("'" + boolean97 + "' != '" + false + "'", boolean97 == false);
    }

    @Test
    public void test2689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2689");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException10.getSuppressed();
        java.lang.Class<?> wildcardClass13 = retryOnPrimaryException10.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test2690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2690");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str29 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException2.setShard("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[retry_on_primary_exception]", 100);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput35 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput35);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2691");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String[] strArray15 = new java.lang.String[] { "rest.exception.stacktrace.skip", "", "rest.exception.stacktrace.skip", "hi!", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", "RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        retryOnPrimaryException2.addHeader("", (java.util.List<java.lang.String>) strList16);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass22 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test2692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2692");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable27 = retryOnPrimaryException14.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str29 = retryOnPrimaryException14.getDetailedMessage();
        java.lang.String str30 = retryOnPrimaryException14.getResourceType();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable27.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "" + "'", str30, "");
    }

    @Test
    public void test2693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2693");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        retryOnPrimaryException13.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray29);
        java.lang.String str32 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index36 = retryOnPrimaryException35.getIndex();
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException13.status();
        java.lang.Throwable throwable39 = retryOnPrimaryException13.unwrapCause();
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        boolean boolean47 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException44.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        boolean boolean55 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException52);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray56 = retryOnPrimaryException52.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        retryOnPrimaryException59.setIndex("");
        org.elasticsearch.index.Index index62 = null;
        retryOnPrimaryException59.setIndex(index62);
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException59.status();
        java.lang.Throwable throwable65 = retryOnPrimaryException59.getRootCause();
        retryOnPrimaryException52.addSuppressed((java.lang.Throwable) retryOnPrimaryException59);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet71 = retryOnPrimaryException70.getHeaderKeys();
        java.lang.Throwable throwable72 = retryOnPrimaryException70.getRootCause();
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException70.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException59.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException44.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException13.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList79);
        boolean boolean86 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray87 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray88 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index36);
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray56);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable65);
        org.junit.Assert.assertEquals(throwable65.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable65.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable65.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(throwable72);
        org.junit.Assert.assertEquals(throwable72.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable72.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable72.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + false + "'", boolean86 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray87);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray88);
    }

    @Test
    public void test2694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2694");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException55.getSuppressed();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        retryOnPrimaryException41.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String str64 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str65 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException67 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str64, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "retry_on_primary_exception" + "'", str65, "retry_on_primary_exception");
    }

    @Test
    public void test2695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2695");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test2696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2696");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException2.getShardId();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable[] throwableArray15 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str16 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) 'a');
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]][97]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNotNull(throwableArray15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test2697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2697");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 0);
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException2.getResourceId();
        retryOnPrimaryException2.setShard("rest.exception.stacktrace.skip", (int) 'a');
        java.lang.String str22 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str17, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList18);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][97]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str22, "[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][97]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2698");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception23 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
    }

    @Test
    public void test2699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2699");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2700");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable18 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException21.setIndex(index24);
        org.elasticsearch.rest.RestStatus restStatus26 = retryOnPrimaryException21.status();
        org.elasticsearch.index.Index index27 = null;
        retryOnPrimaryException21.setIndex(index27);
        org.elasticsearch.index.shard.ShardId shardId29 = retryOnPrimaryException21.getShardId();
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException21.setIndex(index30);
        throwable18.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder33 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params34 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder35 = retryOnPrimaryException21.toXContent(xContentBuilder33, params34);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus26 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus26.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(params34);
    }

    @Test
    public void test2701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2701");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        retryOnPrimaryException7.setIndex("");
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException7.setResources("", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable throwable20 = retryOnPrimaryException7.getRootCause();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException7);
        org.elasticsearch.index.shard.ShardId shardId22 = retryOnPrimaryException7.getShardId();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.String str45 = retryOnPrimaryException26.getDetailedMessage();
        java.lang.String str46 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str47 = retryOnPrimaryException26.getDetailedMessage();
        org.elasticsearch.index.Index index48 = null;
        retryOnPrimaryException26.setIndex(index48);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.Throwable[] throwableArray56 = retryOnPrimaryException53.getSuppressed();
        java.lang.String[] strArray61 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException53.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray61);
        retryOnPrimaryException26.addHeader("hi!", strArray61);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray61);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray61);
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) -1);
        java.lang.String str69 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(shardId22);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str45, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "retry_on_primary_exception" + "'", str46, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][[[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][-1]] RetryOnPrimaryException[retry_on_primary_exception]" + "'", str69, "[[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][[[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]][-1]] RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test2702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2702");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet22);
    }

    @Test
    public void test2703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2703");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.lang.String str23 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "hi!");
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        retryOnPrimaryException34.setIndex("");
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException34.setResources("", strArray43);
        retryOnPrimaryException27.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray43);
        java.lang.String str46 = retryOnPrimaryException27.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index50 = retryOnPrimaryException49.getIndex();
        retryOnPrimaryException27.addSuppressed((java.lang.Throwable) retryOnPrimaryException49);
        retryOnPrimaryException49.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet58 = retryOnPrimaryException57.getHeaderKeys();
        java.lang.Throwable throwable59 = retryOnPrimaryException57.getRootCause();
        java.lang.String[] strArray65 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        retryOnPrimaryException57.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList66);
        retryOnPrimaryException49.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList66);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray70 = retryOnPrimaryException49.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray71 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "hi!");
        retryOnPrimaryException75.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId79 = null;
        retryOnPrimaryException75.setShard(shardId79);
        java.util.Set<java.lang.String> strSet81 = retryOnPrimaryException75.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId83 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException85 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId83, "rest.exception.cause.skip");
        retryOnPrimaryException85.setIndex("");
        java.lang.String[] strArray94 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException85.setResources("", strArray94);
        retryOnPrimaryException75.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray94);
        retryOnPrimaryException49.addHeader("hi!", strArray94);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", strArray94);
        java.lang.Class<?> wildcardClass99 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str46, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index50);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray70);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray71);
        org.junit.Assert.assertNotNull(strSet81);
        org.junit.Assert.assertNotNull(strArray94);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test2704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2704");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException9.unwrapCause();
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException9.getResourceId();
        retryOnPrimaryException9.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];");
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException9.status();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index42 = retryOnPrimaryException41.getIndex();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        java.lang.String str63 = retryOnPrimaryException52.toString();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str65 = retryOnPrimaryException46.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        retryOnPrimaryException46.setShard(shardId66);
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException46.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException41.addHeader("", (java.util.List<java.lang.String>) strList79);
        org.elasticsearch.index.shard.ShardId shardId83 = null;
        org.elasticsearch.index.shard.ShardId shardId85 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException87 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId85, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList88 = retryOnPrimaryException87.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException89 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId83, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException87);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray90 = retryOnPrimaryException89.guessRootCauses();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException89);
        retryOnPrimaryException89.setShard("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", 10);
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException89);
        retryOnPrimaryException89.setIndex("[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index42);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str63, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNull(strList88);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray90);
    }

    @Test
    public void test2705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2705");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("");
        java.lang.String str11 = retryOnPrimaryException4.getResourceType();
        java.lang.String str12 = retryOnPrimaryException4.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str12, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2706");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.lang.String str12 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) 0);
        java.lang.String str16 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str16, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2707");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index5 = retryOnPrimaryException4.getIndex();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        java.lang.Throwable throwable7 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException10.getHeaderKeys();
        retryOnPrimaryException10.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "");
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException21.setIndex(index24);
        org.elasticsearch.rest.RestStatus restStatus26 = retryOnPrimaryException21.status();
        retryOnPrimaryException10.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        throwable7.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        java.util.Set<java.lang.String> strSet29 = retryOnPrimaryException21.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        java.util.List<java.lang.String> strList45 = null;
        retryOnPrimaryException32.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList45);
        java.lang.String str47 = retryOnPrimaryException32.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus48 = retryOnPrimaryException32.status();
        org.elasticsearch.index.Index index49 = retryOnPrimaryException32.getIndex();
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(index5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertTrue("'" + restStatus26 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus26.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertTrue("'" + restStatus48 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus48.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index49);
    }

    @Test
    public void test2708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2708");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        java.lang.String[] strArray16 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException9.setResources("rest.exception.cause.skip", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException23.setShard(shardId27);
        java.lang.String str29 = retryOnPrimaryException23.toString();
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException23.setIndex(index30);
        java.lang.String str32 = retryOnPrimaryException23.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException36);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        java.lang.String[] strArray46 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException41.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        java.lang.String[] strArray60 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray60);
        retryOnPrimaryException41.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray60);
        retryOnPrimaryException36.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray60);
        retryOnPrimaryException23.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strArray60);
        retryOnPrimaryException9.addHeader("RetryOnPrimaryException[]", strArray60);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder66 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params67 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder68 = retryOnPrimaryException9.toXContent(xContentBuilder66, params67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str29, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(str32);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(params67);
    }

    @Test
    public void test2709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2709");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("retry_on_primary_exception");
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getResourceId();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(strSet14);
    }

    @Test
    public void test2710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2710");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        java.lang.Throwable[] throwableArray40 = retryOnPrimaryException21.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("", strArray52);
        java.lang.String str54 = retryOnPrimaryException43.toString();
        retryOnPrimaryException21.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.Throwable throwable56 = retryOnPrimaryException43.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException43);
        java.lang.String str58 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet62 = retryOnPrimaryException61.getHeaderKeys();
        java.util.Set<java.lang.String> strSet63 = retryOnPrimaryException61.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException61.status();
        java.lang.Throwable throwable65 = retryOnPrimaryException61.getRootCause();
        java.lang.String str66 = retryOnPrimaryException61.getResourceType();
        java.lang.Throwable throwable67 = retryOnPrimaryException61.getRootCause();
        java.lang.String str68 = retryOnPrimaryException61.toString();
        java.lang.String str69 = retryOnPrimaryException61.getResourceType();
        java.lang.String str70 = retryOnPrimaryException61.getDetailedMessage();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException61);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput72 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException61.writeTo(streamOutput72);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(throwableArray40);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str54, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str58, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strSet62);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable65);
        org.junit.Assert.assertEquals(throwable65.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable65.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable65.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(throwable67);
        org.junit.Assert.assertEquals(throwable67.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable67.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable67.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str68, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str70, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2711");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("", strArray26);
        retryOnPrimaryException10.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException2.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException32.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        retryOnPrimaryException39.setIndex("");
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException39.setResources("", strArray48);
        retryOnPrimaryException32.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray48);
        java.lang.String str51 = retryOnPrimaryException32.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index55 = retryOnPrimaryException54.getIndex();
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.index.Index index57 = retryOnPrimaryException54.getIndex();
        java.lang.String str58 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException54);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException54);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str51, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index55);
        org.junit.Assert.assertNull(index57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "retry_on_primary_exception" + "'", str58, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2712");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException10.setIndex(index14);
        retryOnPrimaryException10.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str18 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException10.status();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str18, "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2713");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException10.getHeaderKeys();
        java.lang.String str15 = retryOnPrimaryException10.getDetailedMessage();
        java.lang.Throwable throwable16 = retryOnPrimaryException10.unwrapCause();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str15, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test2714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2714");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "retry_on_primary_exception");
        java.lang.String str7 = retryOnPrimaryException6.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        java.lang.String str31 = retryOnPrimaryException12.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index35 = retryOnPrimaryException34.getIndex();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        org.elasticsearch.index.Index index37 = retryOnPrimaryException34.getIndex();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.Throwable[] throwableArray44 = retryOnPrimaryException41.getSuppressed();
        java.lang.String[] strArray49 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException41.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray49);
        retryOnPrimaryException34.setResources("hi!", strArray49);
        retryOnPrimaryException6.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray49);
        java.lang.Throwable throwable53 = retryOnPrimaryException6.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str7, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index35);
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test2715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2715");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        java.lang.String str7 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable11 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
    }

    @Test
    public void test2716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2716");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable22 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str24 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable22.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str24, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2717");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException4.getHeaderKeys();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "hi!");
        retryOnPrimaryException13.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException13.setShard(shardId17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable20 = retryOnPrimaryException13.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray21 = retryOnPrimaryException13.guessRootCauses();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "retry_on_primary_exception");
        java.lang.String str26 = retryOnPrimaryException25.toString();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable throwable43 = retryOnPrimaryException30.getRootCause();
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId45 = retryOnPrimaryException30.getShardId();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.cause.skip");
        retryOnPrimaryException56.setIndex("");
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException56.setResources("", strArray65);
        retryOnPrimaryException49.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray65);
        java.lang.String str68 = retryOnPrimaryException49.getDetailedMessage();
        java.lang.String str69 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String str70 = retryOnPrimaryException49.getDetailedMessage();
        org.elasticsearch.index.Index index71 = null;
        retryOnPrimaryException49.setIndex(index71);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "rest.exception.cause.skip");
        retryOnPrimaryException76.setIndex("");
        java.lang.Throwable[] throwableArray79 = retryOnPrimaryException76.getSuppressed();
        java.lang.String[] strArray84 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException76.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray84);
        retryOnPrimaryException49.addHeader("hi!", strArray84);
        retryOnPrimaryException30.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray84);
        retryOnPrimaryException25.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray84);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        org.elasticsearch.rest.RestStatus restStatus90 = retryOnPrimaryException13.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable20.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray21);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str26, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "retry_on_primary_exception" + "'", str69, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str70 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str70, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray79);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + restStatus90 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus90.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2718");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[]");
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test2719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2719");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][-1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][-1]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
    }

    @Test
    public void test2720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2720");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setIndex("");
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
    }

    @Test
    public void test2721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2721");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str12 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNull(str12);
    }

    @Test
    public void test2722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2722");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException14.guessRootCauses();
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException14.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException38.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException45.setResources("", strArray54);
        retryOnPrimaryException38.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException14.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray54);
        retryOnPrimaryException10.setResources("hi!", strArray54);
        java.lang.String str60 = retryOnPrimaryException10.toString();
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException10, streamOutput62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str60, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
    }

    @Test
    public void test2723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2723");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test2724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2724");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException9.getResourceId();
        java.lang.String[] strArray38 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException9.setResources("[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]", strArray38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNull(strList36);
    }

    @Test
    public void test2725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2725");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        java.lang.String str13 = retryOnPrimaryException2.toString();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException18.setIndex(index21);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException18.getResourceId();
        java.lang.Throwable throwable24 = retryOnPrimaryException18.getRootCause();
        java.lang.String str25 = retryOnPrimaryException18.toString();
        org.elasticsearch.index.shard.ShardId shardId26 = retryOnPrimaryException18.getShardId();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException44.getSuppressed();
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        retryOnPrimaryException30.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index52 = null;
        retryOnPrimaryException30.setIndex(index52);
        java.util.List<java.lang.String> strList54 = retryOnPrimaryException30.getResourceId();
        retryOnPrimaryException18.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strList54);
        retryOnPrimaryException2.addHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]", strList54);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray57 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet61 = retryOnPrimaryException60.getHeaderKeys();
        java.lang.Throwable throwable62 = retryOnPrimaryException60.getRootCause();
        java.lang.String[] strArray68 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        retryOnPrimaryException60.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList69);
        java.util.List<java.lang.String> strList73 = null;
        retryOnPrimaryException60.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList73);
        boolean boolean75 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException60);
        java.lang.String str76 = retryOnPrimaryException60.getDetailedMessage();
        boolean boolean77 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException60);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException60);
        org.elasticsearch.rest.RestStatus restStatus79 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][10]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str25, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId26);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strList54);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray57);
        org.junit.Assert.assertNotNull(strSet61);
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + false + "'", boolean75 == false);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str76, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + false + "'", boolean77 == false);
        org.junit.Assert.assertTrue("'" + restStatus79 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus79.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2726");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getResourceId();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test2727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2727");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Class<?> wildcardClass8 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test2728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2728");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = null;
        retryOnPrimaryException10.setIndex(index11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException10);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
    }

    @Test
    public void test2729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2729");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(shardId17);
    }

    @Test
    public void test2730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2730");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException4.status();
        java.lang.Throwable throwable30 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        java.lang.Throwable throwable37 = retryOnPrimaryException36.unwrapCause();
        java.lang.String[] strArray41 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        retryOnPrimaryException36.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList42);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException48);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException54.setResources("", strArray63);
        java.lang.String str65 = retryOnPrimaryException54.toString();
        retryOnPrimaryException48.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        java.lang.String str67 = retryOnPrimaryException48.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        retryOnPrimaryException48.setShard(shardId68);
        java.lang.String[] strArray80 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        retryOnPrimaryException48.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException36.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList81);
        retryOnPrimaryException4.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList81);
        java.util.List<java.lang.String> strList86 = retryOnPrimaryException4.getResourceId();
        java.lang.String str87 = retryOnPrimaryException4.getResourceType();
        java.lang.String str88 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable30.toString(), "[[] RetryOnPrimaryException[rest.exception.cause.skip]][[[] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str65, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strList86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str87, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str88 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str88, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2731");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException2.setIndex(index9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test2732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2732");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("");
        java.lang.String str11 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException28.getSuppressed();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
    }

    @Test
    public void test2733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2733");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable25 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable26 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException30.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray38);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray38);
        java.lang.String str41 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput42 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(throwable25);
        org.junit.Assert.assertEquals(throwable25.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable25.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2734");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.unwrapCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2735");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("", (int) 'a');
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
    }

    @Test
    public void test2736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2736");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        java.lang.String str15 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "" + "'", str14, "");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertNotNull(strList16);
    }

    @Test
    public void test2737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2737");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        java.lang.String str10 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str12 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str10, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str12, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2738");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamInput streamInput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable18 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
    }

    @Test
    public void test2739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2739");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException2.setIndex(index24);
        java.lang.String str26 = retryOnPrimaryException2.toString();
        java.lang.String str27 = retryOnPrimaryException2.getResourceType();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass29 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str26, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str27, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test2740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2740");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet23 = retryOnPrimaryException22.getHeaderKeys();
        java.lang.Throwable throwable24 = retryOnPrimaryException22.getRootCause();
        java.lang.String[] strArray30 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        retryOnPrimaryException22.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList31);
        java.util.List<java.lang.String> strList35 = null;
        retryOnPrimaryException22.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList35);
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        retryOnPrimaryException22.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException22.getResourceId();
        boolean boolean41 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str42 = retryOnPrimaryException22.getResourceType();
        java.lang.Throwable throwable43 = retryOnPrimaryException22.getRootCause();
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str45 = retryOnPrimaryException22.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "hi!");
        retryOnPrimaryException49.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str53 = retryOnPrimaryException49.getDetailedMessage();
        java.lang.Throwable throwable54 = retryOnPrimaryException49.unwrapCause();
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException49.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.List<java.lang.String> strList57 = retryOnPrimaryException49.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId58 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId58, "rest.exception.cause.skip");
        retryOnPrimaryException60.setIndex("");
        java.lang.Throwable[] throwableArray63 = retryOnPrimaryException60.getSuppressed();
        retryOnPrimaryException49.addSuppressed((java.lang.Throwable) retryOnPrimaryException60);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException68);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "rest.exception.cause.skip");
        java.lang.Throwable throwable74 = retryOnPrimaryException73.unwrapCause();
        java.lang.String[] strArray78 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException73.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList79);
        org.elasticsearch.index.shard.ShardId shardId83 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException85 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId83, "rest.exception.cause.skip");
        java.lang.String[] strArray92 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException85.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray92);
        retryOnPrimaryException73.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray92);
        retryOnPrimaryException68.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray92);
        retryOnPrimaryException60.setResources("retry_on_primary_exception", strArray92);
        retryOnPrimaryException22.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray92);
        retryOnPrimaryException2.setResources("[rest.exception.stacktrace.skip] RetryOnPrimaryException[rest.exception.cause.skip]", strArray92);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet23);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable54);
        org.junit.Assert.assertEquals(throwable54.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable54.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable54.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertNotNull(throwableArray63);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(throwable74);
        org.junit.Assert.assertEquals(throwable74.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strArray92);
    }

    @Test
    public void test2741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2741");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        java.lang.String str36 = retryOnPrimaryException17.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index40 = retryOnPrimaryException39.getIndex();
        retryOnPrimaryException17.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException39.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException47.getHeaderKeys();
        java.lang.Throwable throwable49 = retryOnPrimaryException47.getRootCause();
        java.lang.String[] strArray55 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        retryOnPrimaryException47.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList56);
        retryOnPrimaryException39.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList56);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray60 = retryOnPrimaryException39.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray61 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "hi!");
        retryOnPrimaryException65.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId69 = null;
        retryOnPrimaryException65.setShard(shardId69);
        java.util.Set<java.lang.String> strSet71 = retryOnPrimaryException65.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId73 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException75 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId73, "rest.exception.cause.skip");
        retryOnPrimaryException75.setIndex("");
        java.lang.String[] strArray84 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException75.setResources("", strArray84);
        retryOnPrimaryException65.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray84);
        retryOnPrimaryException39.addHeader("hi!", strArray84);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]", strArray84);
        java.util.Set<java.lang.String> strSet89 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray90 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index40);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray60);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray61);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertNotNull(strSet89);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray90);
    }

    @Test
    public void test2742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2742");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable18 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder19 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params20 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder21 = retryOnPrimaryException2.toXContent(xContentBuilder19, params20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params20);
    }

    @Test
    public void test2743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2743");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        java.lang.String str42 = retryOnPrimaryException23.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index46 = retryOnPrimaryException45.getIndex();
        retryOnPrimaryException23.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        retryOnPrimaryException45.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet54 = retryOnPrimaryException53.getHeaderKeys();
        java.lang.Throwable throwable55 = retryOnPrimaryException53.getRootCause();
        java.lang.String[] strArray61 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        retryOnPrimaryException53.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList62);
        retryOnPrimaryException45.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList62);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray66 = retryOnPrimaryException45.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray67 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException45);
        java.lang.String str68 = retryOnPrimaryException45.getDetailedMessage();
        java.util.List<java.lang.String> strList69 = retryOnPrimaryException45.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.index.shard.ShardId shardId71 = retryOnPrimaryException45.getShardId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder72 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params73 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder74 = retryOnPrimaryException45.toXContent(xContentBuilder72, params73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str42, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray66);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList69);
        org.junit.Assert.assertNull(shardId71);
        org.junit.Assert.assertNotNull(params73);
    }

    @Test
    public void test2744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2744");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException23 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2745");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        java.lang.String str17 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setIndex("[hi!][[hi!][0]] RetryOnPrimaryException[]");
        java.lang.String str20 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException23 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[[hi!][[hi!][0]] RetryOnPrimaryException[]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str17, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "" + "'", str20, "");
        org.junit.Assert.assertNotNull(throwableArray21);
    }

    @Test
    public void test2746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2746");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]", (int) (byte) -1);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable12 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test2747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2747");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException10.setIndex(index14);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str25 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.Throwable throwable26 = retryOnPrimaryException21.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable26);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException31.guessRootCauses();
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException31.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        retryOnPrimaryException40.setIndex("");
        java.lang.String[] strArray49 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException40.setResources("", strArray49);
        boolean boolean51 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "hi!");
        retryOnPrimaryException55.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        retryOnPrimaryException62.setIndex("");
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException62.setResources("", strArray71);
        retryOnPrimaryException55.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException31.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray71);
        retryOnPrimaryException27.setResources("hi!", strArray71);
        retryOnPrimaryException10.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException10.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 100);
        boolean boolean81 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        retryOnPrimaryException10.setIndex("retry_on_primary_exception");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput84 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException10.writeTo(streamOutput84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable26.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
    }

    @Test
    public void test2748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2748");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        java.lang.String str36 = retryOnPrimaryException17.getDetailedMessage();
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str38 = retryOnPrimaryException17.getDetailedMessage();
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException17.setIndex(index39);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException44.getSuppressed();
        java.lang.String[] strArray52 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException44.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray52);
        retryOnPrimaryException17.addHeader("hi!", strArray52);
        retryOnPrimaryException2.setResources("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray52);
        java.lang.String str56 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str38, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str56, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2749");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException15.setIndex(index18);
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException15.status();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray26 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException15.addHeader("rest.exception.stacktrace.skip", strArray26);
        java.lang.Throwable throwable28 = retryOnPrimaryException15.getRootCause();
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException15.getResourceId();
        java.lang.Throwable throwable30 = retryOnPrimaryException15.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(throwable30);
        org.junit.Assert.assertEquals(throwable30.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable30.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable30.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2750");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId21);
    }

    @Test
    public void test2751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2751");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException14.guessRootCauses();
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException14.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "hi!");
        retryOnPrimaryException38.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException45.setResources("", strArray54);
        retryOnPrimaryException38.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        retryOnPrimaryException14.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray54);
        retryOnPrimaryException10.setResources("hi!", strArray54);
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str61 = retryOnPrimaryException10.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput62 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException63 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException10, streamOutput62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "hi!" + "'", str61, "hi!");
    }

    @Test
    public void test2752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2752");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setIndex("");
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("", strArray27);
        java.lang.String str29 = retryOnPrimaryException18.toString();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str31 = retryOnPrimaryException12.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        retryOnPrimaryException12.setShard(shardId32);
        java.lang.String[] strArray44 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        retryOnPrimaryException12.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList45);
        retryOnPrimaryException2.addHeader("hi!", (java.util.List<java.lang.String>) strList45);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus50 = retryOnPrimaryException2.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder51 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params52 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder53 = retryOnPrimaryException2.toXContent(xContentBuilder51, params52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertTrue("'" + restStatus50 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus50.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params52);
    }

    @Test
    public void test2753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2753");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str6 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str6, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2754");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException4.guessRootCauses();
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable41 = retryOnPrimaryException4.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, throwable41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2755");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.String[] strArray24 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException13.addHeader("rest.exception.stacktrace.skip", strArray24);
        java.lang.Throwable throwable26 = retryOnPrimaryException13.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = retryOnPrimaryException13.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException13);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        retryOnPrimaryException34.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str38 = retryOnPrimaryException34.getDetailedMessage();
        java.lang.Throwable throwable39 = retryOnPrimaryException34.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable39);
        org.elasticsearch.index.Index index41 = retryOnPrimaryException40.getIndex();
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException40);
        java.lang.String str43 = retryOnPrimaryException40.toString();
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException40.getHeader("hi!");
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str38, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str43, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test2756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2756");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "hi!");
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        retryOnPrimaryException25.setIndex("");
        java.lang.String[] strArray34 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException25.setResources("", strArray34);
        retryOnPrimaryException18.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray34);
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException18.getSuppressed();
        java.lang.String[] strArray44 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("rest.exception.cause.skip", strArray44);
        retryOnPrimaryException9.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray44);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        java.lang.String[] strArray57 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index62 = retryOnPrimaryException61.getIndex();
        java.lang.String str63 = retryOnPrimaryException61.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        retryOnPrimaryException74.setIndex("");
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException74.setResources("", strArray83);
        retryOnPrimaryException67.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray83);
        retryOnPrimaryException61.setResources("", strArray83);
        retryOnPrimaryException50.addSuppressed((java.lang.Throwable) retryOnPrimaryException61);
        java.util.Set<java.lang.String> strSet88 = retryOnPrimaryException61.getHeaderKeys();
        java.lang.Throwable throwable89 = retryOnPrimaryException61.getRootCause();
        java.util.List<java.lang.String> strList90 = retryOnPrimaryException61.getResourceId();
        retryOnPrimaryException9.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strList90);
        boolean boolean92 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(throwableArray37);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNull(index62);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strSet88);
        org.junit.Assert.assertNotNull(throwable89);
        org.junit.Assert.assertEquals(throwable89.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable89.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable89.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList90);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
    }

    @Test
    public void test2757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2757");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index9 = retryOnPrimaryException8.getIndex();
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        retryOnPrimaryException8.setResources("", strArray30);
        retryOnPrimaryException2.setResources("", strArray30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2758");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable36 = retryOnPrimaryException9.getRootCause();
        java.lang.String str37 = retryOnPrimaryException9.toString();
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException9.getHeader("");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList39);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
    }

    @Test
    public void test2759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2759");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        retryOnPrimaryException15.setShard(shardId28);
        org.elasticsearch.index.shard.ShardId shardId30 = retryOnPrimaryException15.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId32 = retryOnPrimaryException15.getShardId();
        java.lang.String str33 = retryOnPrimaryException15.getDetailedMessage();
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException15.getSuppressed();
        retryOnPrimaryException15.setIndex("");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput38 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception39 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException15, streamOutput38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId30);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwableArray34);
    }

    @Test
    public void test2760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2760");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.getResourceType();
        retryOnPrimaryException10.setShard("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];", (int) (short) -1);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException10.getSuppressed();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test2761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2761");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        java.lang.String str17 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException2.status();
        java.lang.String str19 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.Index index20 = retryOnPrimaryException2.getIndex();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index20);
    }

    @Test
    public void test2762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2762");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str16 = retryOnPrimaryException12.getDetailedMessage();
        java.lang.Throwable throwable17 = retryOnPrimaryException12.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable17);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException22.guessRootCauses();
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException22.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException31.setResources("", strArray40);
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException31);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("", strArray62);
        retryOnPrimaryException46.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException31.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        retryOnPrimaryException22.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray62);
        retryOnPrimaryException18.setResources("hi!", strArray62);
        retryOnPrimaryException4.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray62);
        org.elasticsearch.rest.RestStatus restStatus69 = retryOnPrimaryException4.status();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str16, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable17.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + restStatus69 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus69.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2763");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException4.getShardId();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException4.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException12 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException4, streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2764");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setShard("hi!", (int) '4');
        java.lang.Throwable throwable21 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2765");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray38);
        java.lang.String str42 = retryOnPrimaryException2.toString();
        java.util.Set<java.lang.String> strSet43 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str42, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet43);
    }

    @Test
    public void test2766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2766");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index12 = retryOnPrimaryException11.getIndex();
        java.lang.String str13 = retryOnPrimaryException11.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index18 = retryOnPrimaryException17.getIndex();
        java.lang.String str19 = retryOnPrimaryException17.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException30.setResources("", strArray39);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        retryOnPrimaryException17.setResources("", strArray39);
        retryOnPrimaryException11.setResources("", strArray39);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray39);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("", strArray62);
        java.lang.String str64 = retryOnPrimaryException53.toString();
        retryOnPrimaryException47.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.String str66 = retryOnPrimaryException47.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        retryOnPrimaryException47.setShard(shardId67);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray69 = retryOnPrimaryException47.guessRootCauses();
        java.util.List<java.lang.String> strList71 = retryOnPrimaryException47.getHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException47);
        retryOnPrimaryException47.setIndex("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Throwable throwable75 = retryOnPrimaryException47.getRootCause();
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str19, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str64 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str64, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray69);
        org.junit.Assert.assertNull(strList71);
        org.junit.Assert.assertNotNull(throwable75);
        org.junit.Assert.assertEquals(throwable75.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable75.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable75.toString(), "[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2767");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("hi!", (int) (short) 1);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException2.status();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2768");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable17 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable18 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable18);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
    }

    @Test
    public void test2769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2769");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException19.getHeaderKeys();
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException26.status();
        java.lang.String[] strArray33 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException26.setResources("rest.exception.cause.skip", strArray33);
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray33);
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
    }

    @Test
    public void test2770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2770");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
    }

    @Test
    public void test2771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2771");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException2.status();
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException2.setIndex(index18);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
    }

    @Test
    public void test2772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2772");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList3 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        retryOnPrimaryException2.setShard(shardId4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNull(strList3);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2773");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        java.lang.String str11 = retryOnPrimaryException7.toString();
        java.lang.Throwable throwable12 = retryOnPrimaryException7.unwrapCause();
        retryOnPrimaryException7.setIndex("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException7, streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str11, "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable12.toString(), "[RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
    }

    @Test
    public void test2774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2774");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("retry_on_primary_exception");
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getResourceId();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput11 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception12 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException2, streamOutput11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
    }

    @Test
    public void test2775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2775");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException4.status();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        java.lang.String str33 = retryOnPrimaryException22.toString();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException22);
        java.lang.String str35 = retryOnPrimaryException16.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        retryOnPrimaryException16.setShard(shardId36);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        java.lang.Throwable[] throwableArray59 = retryOnPrimaryException40.getSuppressed();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable62 = retryOnPrimaryException4.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str33, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertNotNull(throwableArray59);
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.toString(), "[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2776");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput16 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException17 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2777");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException4.getShardId();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable23 = retryOnPrimaryException4.unwrapCause();
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable23);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test2778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2778");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException15.setIndex(index18);
        org.elasticsearch.rest.RestStatus restStatus20 = retryOnPrimaryException15.status();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String[] strArray26 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException15.addHeader("rest.exception.stacktrace.skip", strArray26);
        java.lang.Throwable throwable28 = retryOnPrimaryException15.getRootCause();
        java.util.List<java.lang.String> strList29 = retryOnPrimaryException15.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        java.lang.Throwable throwable33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.stacktrace.skip", throwable33);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet39 = retryOnPrimaryException38.getHeaderKeys();
        retryOnPrimaryException38.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        retryOnPrimaryException53.setIndex("");
        java.lang.String[] strArray62 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("", strArray62);
        retryOnPrimaryException46.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
        java.lang.String str65 = retryOnPrimaryException46.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index69 = retryOnPrimaryException68.getIndex();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException68);
        retryOnPrimaryException68.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet77 = retryOnPrimaryException76.getHeaderKeys();
        java.lang.Throwable throwable78 = retryOnPrimaryException76.getRootCause();
        java.lang.String[] strArray84 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        retryOnPrimaryException76.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList85);
        retryOnPrimaryException68.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList85);
        retryOnPrimaryException38.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList85);
        retryOnPrimaryException34.addHeader("hi!", (java.util.List<java.lang.String>) strList85);
        retryOnPrimaryException15.addHeader("", (java.util.List<java.lang.String>) strList85);
        boolean boolean92 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable throwable93 = retryOnPrimaryException15.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + restStatus20 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus20.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable28.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList29);
        org.junit.Assert.assertNotNull(strSet39);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str65, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index69);
        org.junit.Assert.assertNotNull(strSet77);
        org.junit.Assert.assertNotNull(throwable78);
        org.junit.Assert.assertEquals(throwable78.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable78.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable78.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertTrue("'" + boolean92 + "' != '" + false + "'", boolean92 == false);
        org.junit.Assert.assertNotNull(throwable93);
        org.junit.Assert.assertEquals(throwable93.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable93.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable93.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2779");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2780");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException13.setIndex(index16);
        org.elasticsearch.rest.RestStatus restStatus18 = retryOnPrimaryException13.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.lang.Throwable throwable20 = retryOnPrimaryException13.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException23.getHeaderKeys();
        java.util.Set<java.lang.String> strSet25 = retryOnPrimaryException23.getHeaderKeys();
        java.lang.Throwable[] throwableArray26 = retryOnPrimaryException23.getSuppressed();
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException23.getHeader("rest.exception.cause.skip");
        java.lang.String str29 = retryOnPrimaryException23.getDetailedMessage();
        retryOnPrimaryException23.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable32 = retryOnPrimaryException23.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId33 = retryOnPrimaryException23.getShardId();
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException23.getSuppressed();
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException23);
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder38 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params39 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = retryOnPrimaryException13.toXContent(xContentBuilder38, params39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus18 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus18.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(throwableArray26);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(params39);
    }

    @Test
    public void test2781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2781");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException9 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test2782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2782");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        java.lang.String str18 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.rest.RestStatus restStatus19 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException2.status();
        java.lang.String str23 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertTrue("'" + restStatus19 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus19.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNotNull(strList21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "" + "'", str23, "");
    }

    @Test
    public void test2783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2783");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.getRootCause();
        retryOnPrimaryException4.setIndex("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException4.getHeaderKeys();
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strSet10);
    }

    @Test
    public void test2784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2784");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        java.lang.String str19 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable20 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "retry_on_primary_exception" + "'", str19, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2785");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "retry_on_primary_exception");
        java.lang.String str7 = retryOnPrimaryException6.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException6);
        java.lang.Throwable throwable9 = retryOnPrimaryException6.unwrapCause();
        retryOnPrimaryException6.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str7, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[retry_on_primary_exception]");
    }

    @Test
    public void test2786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2786");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("retry_on_primary_exception");
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getResourceId();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str10 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str15 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "retry_on_primary_exception" + "'", str15, "retry_on_primary_exception");
    }

    @Test
    public void test2787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2787");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException6.setIndex(index7);
        org.elasticsearch.index.Index index9 = null;
        retryOnPrimaryException6.setIndex(index9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException6);
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        retryOnPrimaryException6.setIndex("");
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
    }

    @Test
    public void test2788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2788");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        retryOnPrimaryException36.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException44.getHeaderKeys();
        java.lang.Throwable throwable46 = retryOnPrimaryException44.getRootCause();
        java.lang.String[] strArray52 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        retryOnPrimaryException44.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException36.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput58 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput58);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
    }

    @Test
    public void test2789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2789");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "");
        retryOnPrimaryException4.setShard("hi!", (-1));
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str9 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId10 = retryOnPrimaryException4.getShardId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(shardId10);
    }

    @Test
    public void test2790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2790");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException31);
        boolean boolean36 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException31);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException42 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
    }

    @Test
    public void test2791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2791");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable11 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable11);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException12.getIndex();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str15 = retryOnPrimaryException12.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str15, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test2792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2792");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        java.lang.String str7 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str7, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(strList10);
    }

    @Test
    public void test2793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2793");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 100);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException9.getHeaderKeys();
        java.lang.String str16 = retryOnPrimaryException9.getResourceType();
        org.elasticsearch.common.io.stream.StreamInput streamInput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException9, streamInput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test2794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2794");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException9.getHeaderKeys();
        java.util.Set<java.lang.String> strSet11 = retryOnPrimaryException9.getHeaderKeys();
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException9.getSuppressed();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException9.getHeader("rest.exception.cause.skip");
        java.lang.String str15 = retryOnPrimaryException9.getDetailedMessage();
        retryOnPrimaryException9.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable18 = retryOnPrimaryException9.getRootCause();
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.String str20 = retryOnPrimaryException9.toString();
        java.lang.String str21 = retryOnPrimaryException9.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strSet11);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str20, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
    }

    @Test
    public void test2795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2795");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.Throwable throwable24 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray31 = retryOnPrimaryException27.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId32 = retryOnPrimaryException27.getShardId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException36.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str40 = retryOnPrimaryException36.getDetailedMessage();
        java.util.Set<java.lang.String> strSet41 = retryOnPrimaryException36.getHeaderKeys();
        java.lang.String str42 = retryOnPrimaryException36.getDetailedMessage();
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException36);
        java.lang.Throwable[] throwableArray44 = retryOnPrimaryException36.getSuppressed();
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException36.getSuppressed();
        retryOnPrimaryException27.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException36.getSuppressed();
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException36);
        java.lang.Throwable throwable49 = retryOnPrimaryException36.getRootCause();
        java.lang.String str50 = org.elasticsearch.ElasticsearchException.getExceptionName(throwable49);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable24.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray31);
        org.junit.Assert.assertNull(shardId32);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str40, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str42, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(throwableArray44);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable49.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "retry_on_primary_exception" + "'", str50, "retry_on_primary_exception");
    }

    @Test
    public void test2796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2796");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException26.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable throwable36 = retryOnPrimaryException34.getRootCause();
        java.lang.String[] strArray42 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        retryOnPrimaryException34.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException26.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = retryOnPrimaryException26.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray48 = retryOnPrimaryException26.guessRootCauses();
        java.lang.String str49 = retryOnPrimaryException26.getDetailedMessage();
        retryOnPrimaryException26.setShard("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", 10);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str49, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2797");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Class<?> wildcardClass16 = strSet15.getClass();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test2798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2798");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        org.elasticsearch.rest.RestStatus restStatus8 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str10 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + restStatus8 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus8.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2799");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        java.lang.String str10 = retryOnPrimaryException2.toString();
        java.lang.String str11 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str16 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str10, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str11, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test2800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2800");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException2.getSuppressed();
        java.lang.Throwable[] throwableArray28 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus29 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertNotNull(throwableArray28);
        org.junit.Assert.assertTrue("'" + restStatus29 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus29.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2801");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException2.getResourceId();
        java.lang.String str23 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException27.getHeaderKeys();
        retryOnPrimaryException27.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException27.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "hi!");
        retryOnPrimaryException39.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str43 = retryOnPrimaryException39.getDetailedMessage();
        java.lang.Throwable throwable44 = retryOnPrimaryException39.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable44);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray53 = retryOnPrimaryException49.guessRootCauses();
        java.util.Set<java.lang.String> strSet54 = retryOnPrimaryException49.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        retryOnPrimaryException58.setIndex("");
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException58.setResources("", strArray67);
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException58);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "hi!");
        retryOnPrimaryException73.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException80 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "rest.exception.cause.skip");
        retryOnPrimaryException80.setIndex("");
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException80.setResources("", strArray89);
        retryOnPrimaryException73.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray89);
        retryOnPrimaryException58.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray89);
        retryOnPrimaryException49.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray89);
        retryOnPrimaryException45.setResources("hi!", strArray89);
        java.util.List<java.lang.String> strList95 = retryOnPrimaryException45.getResourceId();
        retryOnPrimaryException27.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]", strList95);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];", strList95);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str23, "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable44.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray53);
        org.junit.Assert.assertNotNull(strSet54);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertNotNull(strList95);
    }

    @Test
    public void test2802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2802");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        retryOnPrimaryException8.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        retryOnPrimaryException2.setResources("", strArray24);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable29 = retryOnPrimaryException2.unwrapCause();
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable29);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
    }

    @Test
    public void test2803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2803");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        java.lang.Throwable throwable11 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Class<?> wildcardClass14 = strSet13.getClass();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2804");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str14 = retryOnPrimaryException10.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index19 = retryOnPrimaryException18.getIndex();
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException18.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet25 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.Throwable throwable26 = retryOnPrimaryException24.getRootCause();
        java.lang.String[] strArray32 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        retryOnPrimaryException24.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList33);
        retryOnPrimaryException18.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList33);
        retryOnPrimaryException10.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList33);
        java.lang.Throwable throwable38 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus39 = retryOnPrimaryException10.status();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(index19);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable38.toString(), "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertTrue("'" + restStatus39 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus39.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2805");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException4.getHeaderKeys();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test2806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2806");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException55.getSuppressed();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        retryOnPrimaryException41.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.Throwable[] throwableArray65 = retryOnPrimaryException41.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput66 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException41.writeTo(streamOutput66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
        org.junit.Assert.assertNotNull(throwableArray65);
    }

    @Test
    public void test2807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2807");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException37.getHeaderKeys();
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "");
        retryOnPrimaryException37.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        org.elasticsearch.rest.RestStatus restStatus46 = retryOnPrimaryException44.status();
        java.lang.String[] strArray51 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException44.setResources("rest.exception.cause.skip", strArray51);
        retryOnPrimaryException9.addHeader("", strArray51);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.lang.String[] strArray64 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException57.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        retryOnPrimaryException9.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray64);
        java.lang.String str67 = retryOnPrimaryException9.getDetailedMessage();
        boolean boolean68 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + restStatus46 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus46.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str67, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
    }

    @Test
    public void test2808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2808");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId48 = retryOnPrimaryException2.getShardId();
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable50 = retryOnPrimaryException2.getRootCause();
        java.util.Set<java.lang.String> strSet51 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNull(shardId48);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable50.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet51);
    }

    @Test
    public void test2809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2809");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException19.getHeaderKeys();
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "");
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException26.status();
        java.lang.String[] strArray33 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException26.setResources("rest.exception.cause.skip", strArray33);
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray33);
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "hi!");
        retryOnPrimaryException41.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "rest.exception.cause.skip");
        retryOnPrimaryException48.setIndex("");
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException48.setResources("", strArray57);
        retryOnPrimaryException41.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray57);
        java.lang.String str60 = retryOnPrimaryException41.getDetailedMessage();
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String str62 = retryOnPrimaryException41.getDetailedMessage();
        java.lang.Throwable throwable63 = retryOnPrimaryException41.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException41.status();
        java.lang.String str65 = retryOnPrimaryException41.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "rest.exception.cause.skip");
        boolean boolean70 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException69);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        java.lang.Throwable throwable75 = retryOnPrimaryException74.unwrapCause();
        java.lang.String[] strArray79 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        retryOnPrimaryException74.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList80);
        org.elasticsearch.index.shard.ShardId shardId84 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException86 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId84, "rest.exception.cause.skip");
        java.lang.String[] strArray93 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException86.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray93);
        retryOnPrimaryException74.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray93);
        retryOnPrimaryException69.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray93);
        retryOnPrimaryException41.setResources("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray93);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray93);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str60, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str62, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable63.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str65, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + false + "'", boolean70 == false);
        org.junit.Assert.assertNotNull(throwable75);
        org.junit.Assert.assertEquals(throwable75.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable75.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable75.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strArray93);
    }

    @Test
    public void test2810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2810");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput3 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test2811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2811");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        java.lang.String[] strArray16 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException9.setResources("rest.exception.cause.skip", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException9.setShard("RetryOnPrimaryException[retry_on_primary_exception]", (int) (byte) 10);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException9.writeTo(streamOutput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test2812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2812");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String str44 = retryOnPrimaryException41.getDetailedMessage();
        org.elasticsearch.index.Index index45 = null;
        retryOnPrimaryException41.setIndex(index45);
        java.util.List<java.lang.String> strList47 = retryOnPrimaryException41.getResourceId();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str44, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList47);
    }

    @Test
    public void test2813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2813");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = retryOnPrimaryException24.getIndex();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        retryOnPrimaryException31.setIndex("");
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException31.getSuppressed();
        java.lang.String[] strArray39 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException31.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray39);
        retryOnPrimaryException24.setResources("hi!", strArray39);
        java.lang.String str42 = retryOnPrimaryException24.toString();
        java.lang.String str43 = retryOnPrimaryException24.toString();
        java.util.List<java.lang.String> strList45 = retryOnPrimaryException24.getHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str42, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str43, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList45);
    }

    @Test
    public void test2814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2814");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "hi!");
        retryOnPrimaryException6.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str10 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.Throwable throwable11 = retryOnPrimaryException6.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable11);
        org.elasticsearch.index.Index index13 = retryOnPrimaryException12.getIndex();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str15 = retryOnPrimaryException12.getResourceType();
        java.lang.String str16 = retryOnPrimaryException12.getDetailedMessage();
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException12.getSuppressed();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str16, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray17);
    }

    @Test
    public void test2815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2815");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params13 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = retryOnPrimaryException2.toXContent(xContentBuilder12, params13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(params13);
    }

    @Test
    public void test2816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2816");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException9);
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException9.guessRootCauses();
        java.lang.Throwable throwable36 = retryOnPrimaryException9.unwrapCause();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2817");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray38);
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.Index index44 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.shard.ShardId shardId46 = null;
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException50.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str54 = retryOnPrimaryException50.getDetailedMessage();
        java.lang.Throwable throwable55 = retryOnPrimaryException50.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId46, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable55);
        org.elasticsearch.index.Index index57 = retryOnPrimaryException56.getIndex();
        boolean boolean58 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException56);
        boolean boolean59 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException56);
        java.lang.String str60 = retryOnPrimaryException56.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index65 = retryOnPrimaryException64.getIndex();
        java.util.List<java.lang.String> strList66 = retryOnPrimaryException64.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet71 = retryOnPrimaryException70.getHeaderKeys();
        java.lang.Throwable throwable72 = retryOnPrimaryException70.getRootCause();
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException70.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException64.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException56.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException2.addHeader("[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (java.util.List<java.lang.String>) strList79);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder85 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params86 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder87 = retryOnPrimaryException2.toXContent(xContentBuilder85, params86);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNull(index44);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str54, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable55.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index57);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + false + "'", boolean59 == false);
        org.junit.Assert.assertNull(str60);
        org.junit.Assert.assertNull(index65);
        org.junit.Assert.assertNull(strList66);
        org.junit.Assert.assertNotNull(strSet71);
        org.junit.Assert.assertNotNull(throwable72);
        org.junit.Assert.assertEquals(throwable72.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable72.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable72.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(params86);
    }

    @Test
    public void test2818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2818");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[retry_on_primary_exception]", (int) (byte) 100);
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder11 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params12 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder13 = retryOnPrimaryException2.toXContent(xContentBuilder11, params12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable10.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][100]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(params12);
    }

    @Test
    public void test2819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2819");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getResourceId();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
    }

    @Test
    public void test2820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2820");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        retryOnPrimaryException8.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray24);
        retryOnPrimaryException2.setResources("", strArray24);
        org.elasticsearch.index.Index index28 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", 0);
        java.lang.Throwable throwable32 = retryOnPrimaryException2.getRootCause();
        java.lang.Class<?> wildcardClass33 = throwable32.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNull(index28);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test2821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2821");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException4.setShard(shardId8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index16 = retryOnPrimaryException15.getIndex();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException15.getResourceId();
        java.lang.Throwable throwable18 = retryOnPrimaryException15.unwrapCause();
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException15.getHeader("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        java.lang.String str34 = retryOnPrimaryException23.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException23.guessRootCauses();
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException23.getHeaderKeys();
        java.lang.Throwable throwable37 = retryOnPrimaryException23.getRootCause();
        retryOnPrimaryException15.addSuppressed(throwable37);
        retryOnPrimaryException4.addSuppressed(throwable37);
        retryOnPrimaryException4.setShard("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", 100);
        java.lang.Throwable throwable43 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str34, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable43.toString(), "[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][100]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2822");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable16 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strSet13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2823");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException11.setShard(shardId15);
        java.lang.String str17 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable18 = retryOnPrimaryException11.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException11.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "retry_on_primary_exception");
        java.lang.String str24 = retryOnPrimaryException23.toString();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable41 = retryOnPrimaryException28.getRootCause();
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException28.getShardId();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "hi!");
        retryOnPrimaryException47.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException54.setResources("", strArray63);
        retryOnPrimaryException47.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        java.lang.String str66 = retryOnPrimaryException47.getDetailedMessage();
        java.lang.String str67 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String str68 = retryOnPrimaryException47.getDetailedMessage();
        org.elasticsearch.index.Index index69 = null;
        retryOnPrimaryException47.setIndex(index69);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        retryOnPrimaryException74.setIndex("");
        java.lang.Throwable[] throwableArray77 = retryOnPrimaryException74.getSuppressed();
        java.lang.String[] strArray82 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException74.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray82);
        retryOnPrimaryException47.addHeader("hi!", strArray82);
        retryOnPrimaryException28.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray82);
        retryOnPrimaryException23.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray82);
        retryOnPrimaryException11.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.rest.RestStatus restStatus88 = retryOnPrimaryException11.status();
        boolean boolean89 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray90 = retryOnPrimaryException11.guessRootCauses();
        boolean boolean91 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException11);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "retry_on_primary_exception" + "'", str17, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable18.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str24, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str66, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "retry_on_primary_exception" + "'", str67, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray77);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + restStatus88 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus88.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + false + "'", boolean89 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray90);
        org.junit.Assert.assertTrue("'" + boolean91 + "' != '" + false + "'", boolean91 == false);
    }

    @Test
    public void test2824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2824");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException2.getShardId();
        java.lang.String str13 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException18.getHeaderKeys();
        retryOnPrimaryException18.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "");
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException25);
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException18.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        java.lang.Throwable throwable32 = retryOnPrimaryException31.unwrapCause();
        java.lang.String[] strArray36 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException31.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList37);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.lang.String[] strArray50 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray50);
        retryOnPrimaryException31.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray50);
        retryOnPrimaryException18.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray50);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[retry_on_primary_exception]", strArray50);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder55 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params56 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder57 = retryOnPrimaryException2.toXContent(xContentBuilder55, params56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "retry_on_primary_exception" + "'", str13, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNotNull(throwable32);
        org.junit.Assert.assertEquals(throwable32.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable32.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(params56);
    }

    @Test
    public void test2825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2825");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamInput streamInput22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException2, streamInput22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2826");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.Throwable throwable5 = retryOnPrimaryException4.unwrapCause();
        java.lang.String[] strArray9 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        retryOnPrimaryException4.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException19.getHeaderKeys();
        java.lang.Throwable throwable21 = retryOnPrimaryException19.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray23 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException27.setResources("", strArray36);
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException42.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        retryOnPrimaryException42.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray58);
        retryOnPrimaryException27.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray58);
        retryOnPrimaryException22.addHeader("", strArray58);
        retryOnPrimaryException4.setResources("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray58);
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertNotNull(throwable21);
        org.junit.Assert.assertEquals(throwable21.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable21.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray23);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test2827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2827");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable36 = retryOnPrimaryException9.getRootCause();
        java.lang.Throwable throwable37 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index41 = retryOnPrimaryException40.getIndex();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException40.getResourceId();
        java.lang.Throwable throwable43 = retryOnPrimaryException40.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet47 = retryOnPrimaryException46.getHeaderKeys();
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        retryOnPrimaryException57.setIndex("");
        org.elasticsearch.index.Index index60 = null;
        retryOnPrimaryException57.setIndex(index60);
        org.elasticsearch.rest.RestStatus restStatus62 = retryOnPrimaryException57.status();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        throwable43.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = retryOnPrimaryException57.guessRootCauses();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput67 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception68 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException9, streamOutput67);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + restStatus62 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus62.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
    }

    @Test
    public void test2828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2828");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        retryOnPrimaryException4.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray28);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "hi!");
        retryOnPrimaryException34.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        retryOnPrimaryException34.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray50);
        java.lang.String str53 = retryOnPrimaryException34.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index57 = retryOnPrimaryException56.getIndex();
        retryOnPrimaryException34.addSuppressed((java.lang.Throwable) retryOnPrimaryException56);
        org.elasticsearch.index.Index index59 = retryOnPrimaryException56.getIndex();
        java.lang.String str60 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException56);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException56);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str53, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index57);
        org.junit.Assert.assertNull(index59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "retry_on_primary_exception" + "'", str60, "retry_on_primary_exception");
    }

    @Test
    public void test2829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2829");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder10 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params11 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = retryOnPrimaryException2.toXContent(xContentBuilder10, params11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params11);
    }

    @Test
    public void test2830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2830");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamInput streamInput14 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception15 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
    }

    @Test
    public void test2831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2831");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException4.status();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
    }

    @Test
    public void test2832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2832");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException24.getSuppressed();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwableArray27);
    }

    @Test
    public void test2833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2833");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable8 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        retryOnPrimaryException13.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!", (java.lang.Throwable) retryOnPrimaryException13);
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException13.status();
        retryOnPrimaryException13.setIndex("");
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException13.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException13.guessRootCauses();
        throwable8.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder28 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder30 = retryOnPrimaryException13.toXContent(xContentBuilder28, params29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
    }

    @Test
    public void test2834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2834");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        org.elasticsearch.index.Index index3 = null;
        retryOnPrimaryException2.setIndex(index3);
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (-1));
        boolean boolean8 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str12 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + false + "'", boolean8 == false);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
    }

    @Test
    public void test2835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2835");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "hi!");
        retryOnPrimaryException10.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        retryOnPrimaryException17.setIndex("");
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException17.setResources("", strArray26);
        retryOnPrimaryException10.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException2.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "hi!");
        retryOnPrimaryException32.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        retryOnPrimaryException39.setIndex("");
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException39.setResources("", strArray48);
        retryOnPrimaryException32.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray48);
        java.lang.String str51 = retryOnPrimaryException32.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index55 = retryOnPrimaryException54.getIndex();
        retryOnPrimaryException32.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.index.Index index57 = retryOnPrimaryException54.getIndex();
        java.lang.String str58 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException54);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException54);
        java.lang.Throwable throwable60 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput61 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertEquals("'" + str51 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str51, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index55);
        org.junit.Assert.assertNull(index57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "retry_on_primary_exception" + "'", str58, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable60);
        org.junit.Assert.assertEquals(throwable60.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable60.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable60.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2836");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        java.lang.Throwable throwable10 = retryOnPrimaryException8.getRootCause();
        java.lang.String[] strArray16 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        retryOnPrimaryException8.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList17);
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.util.List<java.lang.String>) strList17);
        org.elasticsearch.index.Index index21 = retryOnPrimaryException2.getIndex();
        java.lang.Throwable throwable22 = retryOnPrimaryException2.unwrapCause();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId24 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNull(index21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNull(shardId24);
    }

    @Test
    public void test2837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2837");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str10 = retryOnPrimaryException2.toString();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet16 = retryOnPrimaryException15.getHeaderKeys();
        java.lang.Throwable throwable17 = retryOnPrimaryException15.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException15.guessRootCauses();
        java.util.Set<java.lang.String> strSet19 = retryOnPrimaryException15.getHeaderKeys();
        java.lang.Throwable[] throwableArray20 = retryOnPrimaryException15.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str36 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable throwable37 = retryOnPrimaryException24.getRootCause();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.Index index41 = null;
        retryOnPrimaryException24.setIndex(index41);
        java.lang.Throwable[] throwableArray43 = retryOnPrimaryException24.getSuppressed();
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException24.getResourceId();
        retryOnPrimaryException15.addHeader("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", strList44);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strList44);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput47 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput47);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str10, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strSet16);
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertNotNull(strSet19);
        org.junit.Assert.assertNotNull(throwableArray20);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "retry_on_primary_exception" + "'", str36, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[RetryOnPrimaryException[retry_on_primary_exception]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(throwableArray43);
        org.junit.Assert.assertNotNull(strList44);
    }

    @Test
    public void test2838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2838");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException10.getResourceId();
        java.lang.Throwable throwable13 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException16.getHeaderKeys();
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "");
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        retryOnPrimaryException27.setIndex("");
        org.elasticsearch.index.Index index30 = null;
        retryOnPrimaryException27.setIndex(index30);
        org.elasticsearch.rest.RestStatus restStatus32 = retryOnPrimaryException27.status();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        throwable13.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException27);
        java.util.List<java.lang.String> strList37 = retryOnPrimaryException2.getHeader("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Throwable throwable38 = retryOnPrimaryException2.unwrapCause();
        java.lang.String str39 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertTrue("'" + restStatus32 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus32.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList37);
        org.junit.Assert.assertNotNull(throwable38);
        org.junit.Assert.assertEquals(throwable38.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable38.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str39, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2839");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.String[] strArray27 = new java.lang.String[] { "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[rest.exception.cause.skip]", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[rest.exception.cause.skip]", "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "retry_on_primary_exception" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (java.util.List<java.lang.String>) strList28);
        java.lang.String str31 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException35.getHeaderKeys();
        java.lang.Throwable throwable37 = retryOnPrimaryException35.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException35.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        retryOnPrimaryException42.setIndex("");
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException42.getSuppressed();
        java.lang.String[] strArray50 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException42.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray50);
        retryOnPrimaryException35.addHeader("rest.exception.cause.skip", strArray50);
        retryOnPrimaryException4.addHeader("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray50);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "retry_on_primary_exception" + "'", str31, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(strArray50);
    }

    @Test
    public void test2840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2840");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "hi!");
        retryOnPrimaryException12.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("", strArray28);
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException12.getSuppressed();
        java.lang.String[] strArray38 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("rest.exception.cause.skip", strArray38);
        retryOnPrimaryException2.addHeader("", strArray38);
        java.lang.Throwable[] throwableArray41 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus42 = retryOnPrimaryException2.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder43 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params44 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder45 = retryOnPrimaryException2.toXContent(xContentBuilder43, params44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertTrue("'" + restStatus42 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus42.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params44);
    }

    @Test
    public void test2841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2841");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray13 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId14 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        java.lang.Throwable[] throwableArray38 = retryOnPrimaryException19.getSuppressed();
        retryOnPrimaryException19.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index46 = retryOnPrimaryException45.getIndex();
        java.util.List<java.lang.String> strList47 = retryOnPrimaryException45.getResourceId();
        java.lang.Throwable throwable48 = retryOnPrimaryException45.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus49 = retryOnPrimaryException45.status();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index54 = retryOnPrimaryException53.getIndex();
        java.lang.String str55 = retryOnPrimaryException53.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId57 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException59 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId57, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index60 = retryOnPrimaryException59.getIndex();
        java.lang.String str61 = retryOnPrimaryException59.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId63 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException65 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId63, "hi!");
        retryOnPrimaryException65.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId70 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException72 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId70, "rest.exception.cause.skip");
        retryOnPrimaryException72.setIndex("");
        java.lang.String[] strArray81 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException72.setResources("", strArray81);
        retryOnPrimaryException65.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray81);
        retryOnPrimaryException59.setResources("", strArray81);
        retryOnPrimaryException53.setResources("", strArray81);
        retryOnPrimaryException45.setResources("", strArray81);
        retryOnPrimaryException19.setResources("retry_on_primary_exception", strArray81);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.stacktrace.skip]", strArray81);
        java.util.List<java.lang.String> strList90 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.util.List<java.lang.String> strList91 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput92 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray13);
        org.junit.Assert.assertNull(shardId14);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(throwableArray38);
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNull(strList47);
        org.junit.Assert.assertNotNull(throwable48);
        org.junit.Assert.assertEquals(throwable48.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable48.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable48.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus49 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus49.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str55, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index60);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str61, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertNull(strList90);
        org.junit.Assert.assertNotNull(strList91);
    }

    @Test
    public void test2842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2842");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "retry_on_primary_exception");
        java.lang.String str7 = retryOnPrimaryException6.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException6);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException6.getResourceId();
        retryOnPrimaryException6.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 1);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str7, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
    }

    @Test
    public void test2843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2843");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException4.status();
        java.lang.Throwable throwable8 = retryOnPrimaryException4.getRootCause();
        java.lang.String str9 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException13.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        org.elasticsearch.index.Index index23 = null;
        retryOnPrimaryException20.setIndex(index23);
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException20.status();
        java.lang.Throwable throwable26 = retryOnPrimaryException20.getRootCause();
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException31.getHeaderKeys();
        java.lang.Throwable throwable33 = retryOnPrimaryException31.getRootCause();
        java.lang.String[] strArray39 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException31.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList40);
        retryOnPrimaryException20.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList40);
        java.lang.String str44 = retryOnPrimaryException20.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId45 = retryOnPrimaryException20.getShardId();
        org.elasticsearch.rest.RestStatus restStatus46 = retryOnPrimaryException20.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet52 = retryOnPrimaryException51.getHeaderKeys();
        java.lang.Throwable throwable53 = retryOnPrimaryException51.getRootCause();
        java.lang.String[] strArray59 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        retryOnPrimaryException51.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList60);
        retryOnPrimaryException20.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList60);
        retryOnPrimaryException4.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList60);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = retryOnPrimaryException4.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertEquals("'" + str44 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str44, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId45);
        org.junit.Assert.assertTrue("'" + restStatus46 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus46.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertNotNull(strSet52);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
    }

    @Test
    public void test2844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2844");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput5 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable6 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2845");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setShard("", (int) (byte) 0);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[][[][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2846");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        retryOnPrimaryException2.setShard("hi!", (int) ' ');
        java.lang.Throwable[] throwableArray9 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.common.io.stream.StreamInput streamInput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException13 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray9);
        org.junit.Assert.assertNull(strList11);
    }

    @Test
    public void test2847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2847");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        boolean boolean6 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index12 = retryOnPrimaryException11.getIndex();
        java.lang.String str13 = retryOnPrimaryException11.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        java.lang.String str36 = retryOnPrimaryException17.getDetailedMessage();
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str38 = retryOnPrimaryException17.getDetailedMessage();
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException17.setIndex(index39);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        retryOnPrimaryException44.setIndex("");
        java.lang.Throwable[] throwableArray47 = retryOnPrimaryException44.getSuppressed();
        java.lang.String[] strArray52 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException44.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray52);
        retryOnPrimaryException17.addHeader("hi!", strArray52);
        retryOnPrimaryException11.addHeader("", strArray52);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray52);
        java.lang.String str57 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str58 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + false + "'", boolean6 == false);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(index12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str38, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray47);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception" + "'", str57, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str58, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2848");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index27 = retryOnPrimaryException26.getIndex();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        retryOnPrimaryException26.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable throwable36 = retryOnPrimaryException34.getRootCause();
        java.lang.String[] strArray42 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        retryOnPrimaryException34.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException26.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray47 = retryOnPrimaryException26.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus48 = retryOnPrimaryException26.status();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray47);
        org.junit.Assert.assertTrue("'" + restStatus48 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus48.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2849");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.String str24 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNull(str24);
    }

    @Test
    public void test2850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2850");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.Throwable[] throwableArray33 = retryOnPrimaryException14.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus34 = retryOnPrimaryException14.status();
        java.lang.String str35 = retryOnPrimaryException14.getDetailedMessage();
        retryOnPrimaryException14.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", 0);
        java.util.List<java.lang.String> strList39 = retryOnPrimaryException14.getResourceId();
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];", strList39);
        retryOnPrimaryException2.setShard("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (short) 10);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(throwableArray33);
        org.junit.Assert.assertTrue("'" + restStatus34 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus34.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strList39);
    }

    @Test
    public void test2851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2851");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
    }

    @Test
    public void test2852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2852");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str5 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException2.getShardId();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "retry_on_primary_exception" + "'", str5, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(shardId8);
    }

    @Test
    public void test2853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2853");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        java.lang.String str10 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2854");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray27 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str28 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder29 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params30 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder31 = retryOnPrimaryException2.toXContent(xContentBuilder29, params30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "retry_on_primary_exception" + "'", str28, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(params30);
    }

    @Test
    public void test2855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2855");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("rest.exception.stacktrace.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test2856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2856");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str15 = retryOnPrimaryException2.getResourceType();
        java.lang.String str16 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "" + "'", str15, "");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str16, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2857");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.lang.String str15 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException13.setResources("", strArray35);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException13.getHeaderKeys();
        java.lang.Throwable throwable41 = retryOnPrimaryException13.getRootCause();
        java.lang.Throwable throwable42 = retryOnPrimaryException13.unwrapCause();
        java.lang.Throwable[] throwableArray43 = throwable42.getSuppressed();
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray43);
    }

    @Test
    public void test2858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2858");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId21 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "rest.exception.cause.skip");
        java.lang.String[] strArray34 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException27.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray34);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        retryOnPrimaryException27.setShard(shardId36);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException27.guessRootCauses();
        java.lang.String str39 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException27);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException27);
        java.lang.Throwable throwable41 = retryOnPrimaryException27.unwrapCause();
        retryOnPrimaryException27.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        boolean boolean58 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "hi!");
        retryOnPrimaryException62.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "rest.exception.cause.skip");
        retryOnPrimaryException69.setIndex("");
        java.lang.String[] strArray78 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException69.setResources("", strArray78);
        retryOnPrimaryException62.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray78);
        retryOnPrimaryException47.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray78);
        retryOnPrimaryException27.setResources("hi!", strArray78);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", strArray78);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray84 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId85 = retryOnPrimaryException4.getShardId();
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(shardId21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "retry_on_primary_exception" + "'", str39, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray84);
        org.junit.Assert.assertNull(shardId85);
    }

    @Test
    public void test2859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2859");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable24 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet26 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet26);
    }

    @Test
    public void test2860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2860");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2861");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str28 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException2.getHeader("[RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput32 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException33 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str28, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNull(strList31);
    }

    @Test
    public void test2862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2862");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable throwable34 = retryOnPrimaryException32.getRootCause();
        java.lang.String[] strArray40 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        retryOnPrimaryException32.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList41);
        retryOnPrimaryException24.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray45 = retryOnPrimaryException24.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index51 = retryOnPrimaryException50.getIndex();
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        boolean boolean58 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "rest.exception.cause.skip");
        retryOnPrimaryException61.setIndex("");
        java.lang.String[] strArray70 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException61.setResources("", strArray70);
        java.lang.String str72 = retryOnPrimaryException61.toString();
        retryOnPrimaryException55.addSuppressed((java.lang.Throwable) retryOnPrimaryException61);
        java.lang.String str74 = retryOnPrimaryException55.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        retryOnPrimaryException55.setShard(shardId75);
        java.lang.String[] strArray87 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList88 = new java.util.ArrayList<java.lang.String>();
        boolean boolean89 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList88, strArray87);
        retryOnPrimaryException55.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException50.addHeader("", (java.util.List<java.lang.String>) strList88);
        retryOnPrimaryException24.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList88);
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException24.getResourceId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder94 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params95 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder96 = retryOnPrimaryException24.toXContent(xContentBuilder94, params95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertNull(index51);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str72, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str74);
        org.junit.Assert.assertNotNull(strArray87);
        org.junit.Assert.assertTrue("'" + boolean89 + "' != '" + true + "'", boolean89 == true);
        org.junit.Assert.assertNull(strList93);
        org.junit.Assert.assertNotNull(params95);
    }

    @Test
    public void test2863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2863");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str14 = retryOnPrimaryException10.getResourceType();
        java.lang.Throwable throwable15 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.Index index16 = null;
        retryOnPrimaryException10.setIndex(index16);
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable19 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException10, streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable15.toString(), "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test2864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2864");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException4.setShard(shardId8);
        java.lang.String str10 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable11 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        throwable11.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.Throwable throwable16 = retryOnPrimaryException14.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable16);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "retry_on_primary_exception" + "'", str10, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test2865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2865");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray16);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException9.setShard(shardId18);
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str30 = retryOnPrimaryException26.getDetailedMessage();
        java.lang.Throwable throwable31 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable31);
        org.elasticsearch.index.Index index33 = retryOnPrimaryException32.getIndex();
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        retryOnPrimaryException32.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray47);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", strArray47);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray47);
        java.lang.String str52 = retryOnPrimaryException2.toString();
        boolean boolean53 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str52, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + false + "'", boolean53 == false);
    }

    @Test
    public void test2866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2866");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getHeader("retry_on_primary_exception");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray16 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray16);
    }

    @Test
    public void test2867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2867");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]][[[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test2868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2868");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = retryOnPrimaryException17.getResourceType();
        retryOnPrimaryException17.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Throwable throwable23 = retryOnPrimaryException17.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException17.guessRootCauses();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
    }

    @Test
    public void test2869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2869");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable[] throwableArray7 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable9 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwableArray7);
    }

    @Test
    public void test2870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2870");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str13 = retryOnPrimaryException10.toString();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException10.getHeaderKeys();
        retryOnPrimaryException10.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.rest.RestStatus restStatus17 = retryOnPrimaryException10.status();
        java.lang.String str18 = retryOnPrimaryException10.toString();
        java.lang.Throwable throwable19 = retryOnPrimaryException10.unwrapCause();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str13, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + restStatus17 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus17.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str18, "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable19.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
    }

    @Test
    public void test2871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2871");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.lang.Throwable throwable35 = retryOnPrimaryException34.unwrapCause();
        java.lang.String[] strArray39 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        retryOnPrimaryException34.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList40);
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        retryOnPrimaryException46.setIndex("");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException46);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.String[] strArray61 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException52.setResources("", strArray61);
        java.lang.String str63 = retryOnPrimaryException52.toString();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.String str65 = retryOnPrimaryException46.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        retryOnPrimaryException46.setShard(shardId66);
        java.lang.String[] strArray78 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        retryOnPrimaryException46.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException34.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", (java.util.List<java.lang.String>) strList79);
        java.util.List<java.lang.String> strList84 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId85 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException87 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId85, "rest.exception.cause.skip");
        retryOnPrimaryException87.setIndex("");
        java.lang.Throwable[] throwableArray90 = retryOnPrimaryException87.getSuppressed();
        java.lang.String[] strArray95 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException87.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray95);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException87);
        java.lang.String str98 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str99 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[[] RetryOnPrimaryException[rest.exception.cause.skip]][[[] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str63, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str65);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strList84);
        org.junit.Assert.assertNotNull(throwableArray90);
        org.junit.Assert.assertNotNull(strArray95);
        org.junit.Assert.assertEquals("'" + str98 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str98, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str99 + "' != '" + "[[] RetryOnPrimaryException[rest.exception.cause.skip]][[[] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]" + "'", str99, "[[] RetryOnPrimaryException[rest.exception.cause.skip]][[[] RetryOnPrimaryException[rest.exception.cause.skip]][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2872");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Class<?> wildcardClass6 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(wildcardClass6);
    }

    @Test
    public void test2873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2873");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index5 = retryOnPrimaryException4.getIndex();
        java.util.List<java.lang.String> strList6 = retryOnPrimaryException4.getResourceId();
        java.lang.Throwable throwable7 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        java.lang.String str10 = retryOnPrimaryException4.getResourceType();
        java.lang.Throwable throwable11 = retryOnPrimaryException4.unwrapCause();
        retryOnPrimaryException4.setShard("[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) '#');
        java.lang.Throwable throwable15 = retryOnPrimaryException4.getRootCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(index5);
        org.junit.Assert.assertNull(strList6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][35]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][35]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][[[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]][35]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2874");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.lang.String[] strArray16 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray16);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        retryOnPrimaryException9.setShard(shardId18);
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException9.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str30 = retryOnPrimaryException26.getDetailedMessage();
        java.lang.Throwable throwable31 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable31);
        org.elasticsearch.index.Index index33 = retryOnPrimaryException32.getIndex();
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        retryOnPrimaryException32.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray47);
        retryOnPrimaryException9.addHeader("retry_on_primary_exception", strArray47);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray47);
        java.lang.String str52 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setShard("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];", (int) (short) 0);
        java.lang.Class<?> wildcardClass56 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str30, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable31.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index33);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str52, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test2875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2875");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput10 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test2876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2876");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput15 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
    }

    @Test
    public void test2877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2877");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException21.setIndex(index24);
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException21.getHeader("");
        java.lang.String str28 = retryOnPrimaryException21.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = retryOnPrimaryException32.guessRootCauses();
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException32.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "hi!");
        retryOnPrimaryException56.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "rest.exception.cause.skip");
        retryOnPrimaryException63.setIndex("");
        java.lang.String[] strArray72 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException63.setResources("", strArray72);
        retryOnPrimaryException56.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray72);
        retryOnPrimaryException41.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray72);
        retryOnPrimaryException32.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray72);
        retryOnPrimaryException21.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray72);
        retryOnPrimaryException2.addHeader("rest.exception.cause.skip", strArray72);
        org.elasticsearch.rest.RestStatus restStatus79 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray80 = retryOnPrimaryException2.guessRootCauses();
        java.lang.Class<?> wildcardClass81 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertNull(strList27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + restStatus79 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus79.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray80);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test2878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2878");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException2.setIndex(index21);
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException2.setIndex(index24);
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str35 = retryOnPrimaryException31.getDetailedMessage();
        java.lang.Throwable throwable36 = retryOnPrimaryException31.unwrapCause();
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException31.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable39 = retryOnPrimaryException31.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException31.status();
        java.lang.Throwable throwable41 = retryOnPrimaryException31.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        java.lang.String[] strArray51 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException44.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray51);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index56 = retryOnPrimaryException55.getIndex();
        java.lang.String str57 = retryOnPrimaryException55.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId59 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException61 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId59, "hi!");
        retryOnPrimaryException61.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId66 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException68 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId66, "rest.exception.cause.skip");
        retryOnPrimaryException68.setIndex("");
        java.lang.String[] strArray77 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException68.setResources("", strArray77);
        retryOnPrimaryException61.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        retryOnPrimaryException55.setResources("", strArray77);
        retryOnPrimaryException44.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        throwable41.addSuppressed((java.lang.Throwable) retryOnPrimaryException44);
        retryOnPrimaryException44.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.util.List<java.lang.String> strList85 = retryOnPrimaryException44.getResourceId();
        retryOnPrimaryException2.addHeader("[hi!][[hi!][0]] RetryOnPrimaryException[]", strList85);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder87 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params88 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder89 = retryOnPrimaryException2.toXContent(xContentBuilder87, params88);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[][[][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable36.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNotNull(throwable39);
        org.junit.Assert.assertEquals(throwable39.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable39.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable41.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNull(index56);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str57, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertNotNull(strList85);
        org.junit.Assert.assertNotNull(params88);
    }

    @Test
    public void test2879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2879");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException7.guessRootCauses();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        java.lang.Throwable[] throwableArray10 = retryOnPrimaryException7.getSuppressed();
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNotNull(throwableArray10);
    }

    @Test
    public void test2880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2880");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput30 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray29);
    }

    @Test
    public void test2881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2881");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        retryOnPrimaryException10.setIndex("");
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException10.setResources("", strArray19);
        java.lang.String str21 = retryOnPrimaryException10.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException10);
        java.lang.String str23 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        retryOnPrimaryException4.setShard(shardId24);
        java.lang.String[] strArray36 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        retryOnPrimaryException4.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList37);
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "hi!");
        retryOnPrimaryException42.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        retryOnPrimaryException42.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray58);
        java.lang.String str61 = retryOnPrimaryException42.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index65 = retryOnPrimaryException64.getIndex();
        retryOnPrimaryException42.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        org.elasticsearch.index.Index index67 = null;
        retryOnPrimaryException42.setIndex(index67);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException42);
        java.lang.Throwable throwable70 = retryOnPrimaryException42.unwrapCause();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str21, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str61, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index65);
        org.junit.Assert.assertNotNull(throwable70);
        org.junit.Assert.assertEquals(throwable70.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable70.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable70.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2882");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        java.lang.Throwable throwable2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException3 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.stacktrace.skip", throwable2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException7.getHeaderKeys();
        retryOnPrimaryException7.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException15.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        retryOnPrimaryException15.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray31);
        java.lang.String str34 = retryOnPrimaryException15.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index38 = retryOnPrimaryException37.getIndex();
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        retryOnPrimaryException37.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet46 = retryOnPrimaryException45.getHeaderKeys();
        java.lang.Throwable throwable47 = retryOnPrimaryException45.getRootCause();
        java.lang.String[] strArray53 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        retryOnPrimaryException45.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList54);
        retryOnPrimaryException37.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList54);
        retryOnPrimaryException7.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList54);
        retryOnPrimaryException3.addHeader("hi!", (java.util.List<java.lang.String>) strList54);
        java.lang.String str60 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException3);
        java.lang.String str61 = retryOnPrimaryException3.getDetailedMessage();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException3, streamOutput62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index38);
        org.junit.Assert.assertNotNull(strSet46);
        org.junit.Assert.assertNotNull(throwable47);
        org.junit.Assert.assertEquals(throwable47.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable47.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "retry_on_primary_exception" + "'", str60, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip" + "'", str61, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip");
    }

    @Test
    public void test2883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2883");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        retryOnPrimaryException4.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException4.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException4.getResourceId();
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException30.getResourceId();
        java.lang.Throwable throwable33 = retryOnPrimaryException30.unwrapCause();
        retryOnPrimaryException30.setIndex("rest.exception.cause.skip");
        java.lang.String str36 = retryOnPrimaryException30.getResourceType();
        java.lang.Throwable throwable37 = retryOnPrimaryException30.unwrapCause();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable37);
        retryOnPrimaryException4.addSuppressed(throwable37);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertNull(strList23);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable33.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
    }

    @Test
    public void test2884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2884");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.index.shard.ShardId shardId4 = null;
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "hi!");
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str12 = retryOnPrimaryException8.getDetailedMessage();
        java.lang.Throwable throwable13 = retryOnPrimaryException8.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId4, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable13);
        org.elasticsearch.index.Index index15 = retryOnPrimaryException14.getIndex();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        retryOnPrimaryException14.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray29);
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray29);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[hi!]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
    }

    @Test
    public void test2885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2885");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "");
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException11.status();
        retryOnPrimaryException11.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (int) (short) 100);
        java.lang.Throwable[] throwableArray17 = retryOnPrimaryException11.getSuppressed();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = retryOnPrimaryException11.guessRootCauses();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwableArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
    }

    @Test
    public void test2886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2886");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str9, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable10.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test2887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2887");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException4.setShard(shardId8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        retryOnPrimaryException4.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray23);
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException4.setIndex(index26);
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str29 = retryOnPrimaryException4.toString();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str29, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2888");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException10.getHeader("[[hi!] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[] RetryOnPrimaryException[rest.exception.cause.skip]]");
        java.lang.Throwable throwable16 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable16);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test2889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2889");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        java.lang.String str7 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.String str9 = retryOnPrimaryException2.toString();
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str9, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
    }

    @Test
    public void test2890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2890");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.rest.RestStatus restStatus27 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setIndex("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertTrue("'" + restStatus27 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus27.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(strList32);
    }

    @Test
    public void test2891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2891");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2892");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String str5 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("rest.exception.stacktrace.skip");
        org.elasticsearch.rest.RestStatus restStatus10 = retryOnPrimaryException2.status();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params13 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = retryOnPrimaryException2.toXContent(xContentBuilder12, params13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str5, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertTrue("'" + restStatus10 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus10.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(params13);
    }

    @Test
    public void test2893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2893");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable7 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "hi!");
        retryOnPrimaryException11.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str15 = retryOnPrimaryException11.getDetailedMessage();
        java.lang.Throwable throwable16 = retryOnPrimaryException11.unwrapCause();
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException11.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        retryOnPrimaryException11.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray31);
        retryOnPrimaryException4.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray31);
        retryOnPrimaryException4.setIndex("[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        java.util.List<java.lang.String> strList38 = retryOnPrimaryException4.getHeader("[][[][1]] RetryOnPrimaryException[hi!]");
        org.elasticsearch.index.shard.ShardId shardId39 = retryOnPrimaryException4.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "[[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable16.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertNull(strList38);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
    }

    @Test
    public void test2894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2894");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId8 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        java.lang.String[] strArray19 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray19);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        retryOnPrimaryException12.setShard(shardId21);
        org.elasticsearch.index.shard.ShardId shardId23 = retryOnPrimaryException12.getShardId();
        java.lang.String str24 = retryOnPrimaryException12.getResourceType();
        retryOnPrimaryException12.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        retryOnPrimaryException30.setIndex("");
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray34 = retryOnPrimaryException30.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        org.elasticsearch.index.Index index40 = null;
        retryOnPrimaryException37.setIndex(index40);
        org.elasticsearch.rest.RestStatus restStatus42 = retryOnPrimaryException37.status();
        java.lang.Throwable throwable43 = retryOnPrimaryException37.getRootCause();
        retryOnPrimaryException30.addSuppressed((java.lang.Throwable) retryOnPrimaryException37);
        java.lang.Throwable throwable45 = retryOnPrimaryException30.unwrapCause();
        java.lang.String str46 = retryOnPrimaryException30.getResourceType();
        java.lang.String str47 = retryOnPrimaryException30.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "hi!");
        retryOnPrimaryException51.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        retryOnPrimaryException58.setIndex("");
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException58.setResources("", strArray67);
        retryOnPrimaryException51.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray67);
        java.lang.Throwable[] throwableArray70 = retryOnPrimaryException51.getSuppressed();
        java.lang.String[] strArray77 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException51.setResources("rest.exception.cause.skip", strArray77);
        retryOnPrimaryException30.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray77);
        retryOnPrimaryException12.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray77);
        retryOnPrimaryException2.addHeader("[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][1]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray77);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(shardId8);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNull(shardId23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str24, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray34);
        org.junit.Assert.assertTrue("'" + restStatus42 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus42.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertNotNull(throwableArray70);
        org.junit.Assert.assertNotNull(strArray77);
    }

    @Test
    public void test2895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2895");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(index4);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertNull(strList7);
    }

    @Test
    public void test2896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2896");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.Throwable[] throwableArray12 = retryOnPrimaryException9.getSuppressed();
        java.lang.String[] strArray17 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray17);
        retryOnPrimaryException2.addHeader("rest.exception.cause.skip", strArray17);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        boolean boolean34 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        retryOnPrimaryException23.setShard(shardId36);
        org.elasticsearch.index.shard.ShardId shardId38 = retryOnPrimaryException23.getShardId();
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet44 = retryOnPrimaryException43.getHeaderKeys();
        java.lang.Throwable throwable45 = retryOnPrimaryException43.getRootCause();
        java.lang.String[] strArray51 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        retryOnPrimaryException43.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList52);
        retryOnPrimaryException23.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList52);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];", (java.util.List<java.lang.String>) strList52);
        java.lang.Throwable throwable57 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(throwableArray12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNotNull(strSet44);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2897");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException26.setShard(shardId47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        boolean boolean50 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index54 = retryOnPrimaryException53.getIndex();
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException53.getResourceId();
        java.lang.Throwable throwable56 = retryOnPrimaryException53.unwrapCause();
        retryOnPrimaryException53.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable59 = retryOnPrimaryException53.unwrapCause();
        retryOnPrimaryException26.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder61 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params62 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder63 = retryOnPrimaryException53.toXContent(xContentBuilder61, params62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(index54);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(throwable56);
        org.junit.Assert.assertEquals(throwable56.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable56.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable59.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(params62);
    }

    @Test
    public void test2898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2898");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        java.lang.String str9 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        retryOnPrimaryException2.setShard(shardId10);
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder12 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params13 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder14 = retryOnPrimaryException2.toXContent(xContentBuilder12, params13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str9, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(params13);
    }

    @Test
    public void test2899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2899");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException4.setIndex(index7);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException4.getHeader("");
        java.lang.String str11 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException28.getSuppressed();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException14);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(throwableArray31);
    }

    @Test
    public void test2900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2900");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        retryOnPrimaryException41.setIndex("");
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException41.setResources("", strArray50);
        boolean boolean52 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException41);
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        retryOnPrimaryException55.setIndex("");
        java.lang.Throwable[] throwableArray58 = retryOnPrimaryException55.getSuppressed();
        retryOnPrimaryException41.addSuppressed((java.lang.Throwable) retryOnPrimaryException55);
        retryOnPrimaryException41.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList65 = retryOnPrimaryException41.getHeader("[][[][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + false + "'", boolean52 == false);
        org.junit.Assert.assertNotNull(throwableArray58);
        org.junit.Assert.assertNull(strList65);
    }

    @Test
    public void test2901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2901");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException14.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException14.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable16);
        retryOnPrimaryException2.addSuppressed(throwable16);
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2902");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray15 = retryOnPrimaryException4.guessRootCauses();
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index18 = null;
        retryOnPrimaryException17.setIndex(index18);
        java.lang.String str20 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException17);
        retryOnPrimaryException17.setShard("[][[][1]] RetryOnPrimaryException[hi!]", (int) 'a');
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "retry_on_primary_exception" + "'", str20, "retry_on_primary_exception");
    }

    @Test
    public void test2903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2903");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException2.status();
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet14 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.String str37 = retryOnPrimaryException18.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        retryOnPrimaryException18.setShard(shardId38);
        java.lang.String[] strArray50 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        retryOnPrimaryException18.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList51);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "hi!");
        retryOnPrimaryException57.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        retryOnPrimaryException57.setShard(shardId61);
        java.util.Set<java.lang.String> strSet63 = retryOnPrimaryException57.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "rest.exception.cause.skip");
        retryOnPrimaryException67.setIndex("");
        java.lang.String[] strArray76 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException67.setResources("", strArray76);
        retryOnPrimaryException57.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray76);
        retryOnPrimaryException18.setResources("", strArray76);
        java.lang.String str80 = retryOnPrimaryException18.getResourceType();
        retryOnPrimaryException18.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (int) (byte) -1);
        org.elasticsearch.index.shard.ShardId shardId85 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException87 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId85, "rest.exception.cause.skip");
        retryOnPrimaryException87.setIndex("");
        java.lang.String[] strArray96 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException87.setResources("", strArray96);
        retryOnPrimaryException18.addHeader("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray96);
        retryOnPrimaryException2.setResources("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray96);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet14);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strSet63);
        org.junit.Assert.assertNotNull(strArray76);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertNotNull(strArray96);
    }

    @Test
    public void test2904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2904");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList8 = retryOnPrimaryException2.getHeader("");
        java.lang.String str9 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        java.lang.String str33 = retryOnPrimaryException14.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index37 = retryOnPrimaryException36.getIndex();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException36);
        retryOnPrimaryException36.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet45 = retryOnPrimaryException44.getHeaderKeys();
        java.lang.Throwable throwable46 = retryOnPrimaryException44.getRootCause();
        java.lang.String[] strArray52 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        retryOnPrimaryException44.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException36.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList53);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList53);
        java.util.List<java.lang.String> strList58 = retryOnPrimaryException2.getResourceId();
        java.lang.String str59 = retryOnPrimaryException2.toString();
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String[] strArray62 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.addHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strArray62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList8);
        org.junit.Assert.assertNull(str9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index37);
        org.junit.Assert.assertNotNull(strSet45);
        org.junit.Assert.assertNotNull(throwable46);
        org.junit.Assert.assertEquals(throwable46.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable46.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNull(strList58);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str59, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
    }

    @Test
    public void test2905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2905");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray10 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        retryOnPrimaryException13.setIndex("");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException13.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        org.elasticsearch.index.Index index23 = null;
        retryOnPrimaryException20.setIndex(index23);
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException20.status();
        java.lang.Throwable throwable26 = retryOnPrimaryException20.getRootCause();
        retryOnPrimaryException13.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.util.Set<java.lang.String> strSet29 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable[] throwableArray30 = retryOnPrimaryException20.getSuppressed();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray10);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(throwableArray30);
    }

    @Test
    public void test2906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2906");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        java.lang.String str11 = retryOnPrimaryException10.toString();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException10.getResourceId();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str11, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList12);
    }

    @Test
    public void test2907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2907");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException9.unwrapCause();
        java.util.List<java.lang.String> strList35 = retryOnPrimaryException9.getResourceId();
        retryOnPrimaryException9.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];");
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setIndex("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "[[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList35);
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2908");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet9 = retryOnPrimaryException8.getHeaderKeys();
        retryOnPrimaryException8.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "");
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        retryOnPrimaryException19.setIndex("");
        org.elasticsearch.index.Index index22 = null;
        retryOnPrimaryException19.setIndex(index22);
        org.elasticsearch.rest.RestStatus restStatus24 = retryOnPrimaryException19.status();
        retryOnPrimaryException8.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        throwable5.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        retryOnPrimaryException19.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) '4');
        retryOnPrimaryException19.setShard("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 1);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet9);
        org.junit.Assert.assertTrue("'" + restStatus24 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus24.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2909");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable19 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet20 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "hi!");
        retryOnPrimaryException23.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str27 = retryOnPrimaryException23.getDetailedMessage();
        java.lang.Throwable throwable28 = retryOnPrimaryException23.unwrapCause();
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException23.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str31 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException23);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "hi!");
        retryOnPrimaryException36.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("", strArray52);
        retryOnPrimaryException36.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray52);
        java.lang.Throwable[] throwableArray55 = retryOnPrimaryException36.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        retryOnPrimaryException58.setIndex("");
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException58.setResources("", strArray67);
        java.lang.String str69 = retryOnPrimaryException58.toString();
        retryOnPrimaryException36.addSuppressed((java.lang.Throwable) retryOnPrimaryException58);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "rest.exception.cause.skip");
        java.lang.Throwable throwable74 = retryOnPrimaryException73.unwrapCause();
        retryOnPrimaryException36.addSuppressed((java.lang.Throwable) retryOnPrimaryException73);
        java.lang.String[] strArray79 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException73.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray79);
        retryOnPrimaryException23.setResources("[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray79);
        java.lang.Class<?> wildcardClass82 = strArray79.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet20);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "retry_on_primary_exception" + "'", str31, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str69, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable74);
        org.junit.Assert.assertEquals(throwable74.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(wildcardClass82);
    }

    @Test
    public void test2910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2910");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.rest.RestStatus restStatus9 = retryOnPrimaryException2.status();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception", (int) (short) 0);
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", (-1));
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("", strArray27);
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException18);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        retryOnPrimaryException32.setIndex("");
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException18.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        retryOnPrimaryException18.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index40 = null;
        retryOnPrimaryException18.setIndex(index40);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException18.getResourceId();
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException18.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException18.setShard("RetryOnPrimaryException[rest.exception.stacktrace.skip]", (int) (byte) 1);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][-1]] RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + restStatus9 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus9.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(strList42);
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test2911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2911");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        retryOnPrimaryException10.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", 0);
        java.lang.String str14 = retryOnPrimaryException10.toString();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException10.status();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str14, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2912");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("");
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        boolean boolean10 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException14.setResources("", strArray23);
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        retryOnPrimaryException14.setShard(shardId27);
        org.elasticsearch.index.shard.ShardId shardId29 = retryOnPrimaryException14.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray30 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException14);
        java.lang.String str31 = retryOnPrimaryException14.getDetailedMessage();
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException14.getResourceId();
        retryOnPrimaryException2.addHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strList32);
        java.lang.Class<?> wildcardClass34 = strList32.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + false + "'", boolean10 == false);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId29);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str31, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strList32);
        org.junit.Assert.assertNotNull(wildcardClass34);
    }

    @Test
    public void test2913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2913");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable16 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index20 = retryOnPrimaryException19.getIndex();
        java.lang.String str21 = retryOnPrimaryException19.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId23 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException25 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId23, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index26 = retryOnPrimaryException25.getIndex();
        java.lang.String str27 = retryOnPrimaryException25.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "hi!");
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        retryOnPrimaryException31.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        retryOnPrimaryException25.setResources("", strArray47);
        retryOnPrimaryException19.setResources("", strArray47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray52 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException19);
        java.util.List<java.lang.String> strList53 = retryOnPrimaryException19.getResourceId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet58 = retryOnPrimaryException57.getHeaderKeys();
        java.util.Set<java.lang.String> strSet59 = retryOnPrimaryException57.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus60 = retryOnPrimaryException57.status();
        java.lang.Throwable throwable61 = retryOnPrimaryException57.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId62 = retryOnPrimaryException57.getShardId();
        java.lang.Throwable throwable63 = retryOnPrimaryException57.unwrapCause();
        retryOnPrimaryException19.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        retryOnPrimaryException19.setShard("RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];", (int) (short) 100);
        org.elasticsearch.common.io.stream.StreamInput streamInput68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = org.elasticsearch.ElasticsearchException.readStackTrace(retryOnPrimaryException19, streamInput68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertNotNull(throwable16);
        org.junit.Assert.assertEquals(throwable16.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable16.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index26);
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray52);
        org.junit.Assert.assertNotNull(strList53);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertNotNull(strSet59);
        org.junit.Assert.assertTrue("'" + restStatus60 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus60.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable61);
        org.junit.Assert.assertEquals(throwable61.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable61.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId62);
        org.junit.Assert.assertNotNull(throwable63);
        org.junit.Assert.assertEquals(throwable63.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable63.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable63.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2914");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str22 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable24 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus25 = retryOnPrimaryException2.status();
        java.lang.String str26 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "hi!");
        retryOnPrimaryException30.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str34 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean35 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException30);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        retryOnPrimaryException39.setIndex("");
        boolean boolean42 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = retryOnPrimaryException39.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        java.lang.String[] strArray54 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray54);
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        retryOnPrimaryException47.setShard(shardId56);
        java.util.Set<java.lang.String> strSet58 = retryOnPrimaryException47.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "hi!");
        retryOnPrimaryException64.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str68 = retryOnPrimaryException64.getDetailedMessage();
        java.lang.Throwable throwable69 = retryOnPrimaryException64.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable69);
        org.elasticsearch.index.Index index71 = retryOnPrimaryException70.getIndex();
        java.lang.String str72 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException70);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "rest.exception.cause.skip");
        retryOnPrimaryException76.setIndex("");
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException76.setResources("", strArray85);
        retryOnPrimaryException70.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray85);
        retryOnPrimaryException47.addHeader("retry_on_primary_exception", strArray85);
        retryOnPrimaryException39.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray85);
        retryOnPrimaryException30.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strArray85);
        retryOnPrimaryException2.setResources("rest.exception.cause.skip", strArray85);
        java.lang.String str92 = retryOnPrimaryException2.getResourceType();
        java.lang.String str93 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str94 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "retry_on_primary_exception" + "'", str22, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus25 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus25.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str26, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "retry_on_primary_exception" + "'", str34, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + false + "'", boolean35 == false);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strSet58);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str68, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable69);
        org.junit.Assert.assertEquals(throwable69.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable69.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable69.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index71);
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "retry_on_primary_exception" + "'", str72, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "rest.exception.cause.skip" + "'", str92, "rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str93, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str94 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str94, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
    }

    @Test
    public void test2915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2915");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.Index index27 = retryOnPrimaryException24.getIndex();
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.String str29 = retryOnPrimaryException24.getDetailedMessage();
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId31 = retryOnPrimaryException24.getShardId();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNull(index27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str29, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNull(shardId31);
    }

    @Test
    public void test2916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2916");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.lang.String str7 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "retry_on_primary_exception" + "'", str7, "retry_on_primary_exception");
    }

    @Test
    public void test2917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2917");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test2918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2918");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList14 = retryOnPrimaryException4.getHeader("rest.exception.cause.skip");
        org.elasticsearch.index.Index index15 = null;
        retryOnPrimaryException4.setIndex(index15);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException21);
        java.lang.String str33 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException21.setShard(shardId34);
        org.elasticsearch.index.shard.ShardId shardId36 = retryOnPrimaryException21.getShardId();
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException21);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException41.getHeaderKeys();
        java.lang.Throwable throwable43 = retryOnPrimaryException41.getRootCause();
        java.lang.String[] strArray49 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException21.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList50);
        retryOnPrimaryException4.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList50);
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException4.getResourceId();
        java.util.Set<java.lang.String> strSet56 = retryOnPrimaryException4.getHeaderKeys();
        java.util.List<java.lang.String> strList57 = retryOnPrimaryException4.getResourceId();
        java.lang.String str58 = retryOnPrimaryException4.toString();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNull(strList14);
        org.junit.Assert.assertNotNull(strSet17);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "retry_on_primary_exception" + "'", str33, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(strSet56);
        org.junit.Assert.assertNull(strList57);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str58, "[hi!][[hi!][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2919");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet29 = retryOnPrimaryException28.getHeaderKeys();
        java.util.Set<java.lang.String> strSet30 = retryOnPrimaryException28.getHeaderKeys();
        java.lang.Throwable[] throwableArray31 = retryOnPrimaryException28.getSuppressed();
        retryOnPrimaryException28.setIndex("");
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException28.getHeaderKeys();
        java.lang.String str35 = retryOnPrimaryException28.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        boolean boolean40 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        java.lang.Throwable throwable45 = retryOnPrimaryException44.unwrapCause();
        java.lang.String[] strArray49 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        retryOnPrimaryException44.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList50);
        org.elasticsearch.index.shard.ShardId shardId54 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException56 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId54, "rest.exception.cause.skip");
        java.lang.String[] strArray63 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException56.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        retryOnPrimaryException44.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray63);
        retryOnPrimaryException39.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        retryOnPrimaryException28.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray63);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray63);
        java.lang.Throwable throwable69 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertNotNull(strSet30);
        org.junit.Assert.assertNotNull(throwableArray31);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + false + "'", boolean40 == false);
        org.junit.Assert.assertNotNull(throwable45);
        org.junit.Assert.assertEquals(throwable45.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable45.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(throwable69);
        org.junit.Assert.assertEquals(throwable69.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable69.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable69.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2920");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        boolean boolean3 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId5 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId5, "rest.exception.cause.skip");
        java.lang.Throwable throwable8 = retryOnPrimaryException7.unwrapCause();
        java.lang.String[] strArray12 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        retryOnPrimaryException7.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList13);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "rest.exception.cause.skip");
        java.lang.String[] strArray26 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        retryOnPrimaryException7.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray26);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray26);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException32 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId30, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet33 = retryOnPrimaryException32.getHeaderKeys();
        java.util.Set<java.lang.String> strSet34 = retryOnPrimaryException32.getHeaderKeys();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException32.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = retryOnPrimaryException32.guessRootCauses();
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException32);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException32.guessRootCauses();
        org.junit.Assert.assertTrue("'" + boolean3 + "' != '" + false + "'", boolean3 == false);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strSet33);
        org.junit.Assert.assertNotNull(strSet34);
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
    }

    @Test
    public void test2921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2921");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.lang.String str4 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index9 = retryOnPrimaryException8.getIndex();
        java.lang.String str10 = retryOnPrimaryException8.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "hi!");
        retryOnPrimaryException14.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        retryOnPrimaryException21.setIndex("");
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("", strArray30);
        retryOnPrimaryException14.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray30);
        retryOnPrimaryException8.setResources("", strArray30);
        retryOnPrimaryException2.setResources("", strArray30);
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str36 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable[] throwableArray37 = retryOnPrimaryException2.getSuppressed();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str4, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str10, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "" + "'", str36, "");
        org.junit.Assert.assertNotNull(throwableArray37);
    }

    @Test
    public void test2922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2922");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException2.setResources("rest.exception.stacktrace.skip", strArray38);
        java.lang.String str42 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.Index index44 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.common.io.stream.StreamInput streamInput45 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException46 = org.elasticsearch.ElasticsearchException.readStackTrace((org.elasticsearch.ElasticsearchException) retryOnPrimaryException2, streamInput45);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "retry_on_primary_exception" + "'", str42, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertNull(index44);
    }

    @Test
    public void test2923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2923");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        java.lang.String[] strArray34 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        retryOnPrimaryException2.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList35);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "hi!");
        retryOnPrimaryException40.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        retryOnPrimaryException47.setIndex("");
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException47.setResources("", strArray56);
        retryOnPrimaryException40.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray56);
        java.lang.String str59 = retryOnPrimaryException40.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId60 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException62 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId60, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index63 = retryOnPrimaryException62.getIndex();
        retryOnPrimaryException40.addSuppressed((java.lang.Throwable) retryOnPrimaryException62);
        org.elasticsearch.index.Index index65 = null;
        retryOnPrimaryException40.setIndex(index65);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException40);
        java.util.Set<java.lang.String> strSet68 = retryOnPrimaryException40.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput69 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception70 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Exception) retryOnPrimaryException40, streamOutput69);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str59, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index63);
        org.junit.Assert.assertNotNull(strSet68);
    }

    @Test
    public void test2924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2924");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        retryOnPrimaryException2.setShard("[] RetryOnPrimaryException[rest.exception.cause.skip]", (int) 'a');
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str32 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException20);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        retryOnPrimaryException20.setShard(shardId33);
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException20.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray36 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setShard("hi!", (int) (byte) 0);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.Throwable[] throwableArray41 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder42 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params43 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder44 = retryOnPrimaryException2.toXContent(xContentBuilder42, params43);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "retry_on_primary_exception" + "'", str32, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray36);
        org.junit.Assert.assertNotNull(throwableArray41);
        org.junit.Assert.assertNotNull(params43);
    }

    @Test
    public void test2925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2925");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException4.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        boolean boolean26 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        java.util.List<java.lang.String> strList28 = retryOnPrimaryException15.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean29 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException15);
        java.util.List<java.lang.String> strList30 = retryOnPrimaryException15.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        retryOnPrimaryException34.setIndex("");
        org.elasticsearch.index.Index index37 = null;
        retryOnPrimaryException34.setIndex(index37);
        java.util.List<java.lang.String> strList40 = retryOnPrimaryException34.getHeader("");
        java.lang.String str41 = retryOnPrimaryException34.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId43 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException45 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId43, "rest.exception.cause.skip");
        retryOnPrimaryException45.setIndex("");
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException45);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = retryOnPrimaryException45.guessRootCauses();
        java.util.Set<java.lang.String> strSet50 = retryOnPrimaryException45.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "rest.exception.cause.skip");
        retryOnPrimaryException54.setIndex("");
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException54.setResources("", strArray63);
        boolean boolean65 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException54);
        org.elasticsearch.index.shard.ShardId shardId67 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId67, "hi!");
        retryOnPrimaryException69.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId74 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException76 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId74, "rest.exception.cause.skip");
        retryOnPrimaryException76.setIndex("");
        java.lang.String[] strArray85 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException76.setResources("", strArray85);
        retryOnPrimaryException69.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray85);
        retryOnPrimaryException54.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray85);
        retryOnPrimaryException45.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray85);
        retryOnPrimaryException34.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray85);
        retryOnPrimaryException15.addHeader("rest.exception.cause.skip", strArray85);
        retryOnPrimaryException4.setResources("[rest.exception.stacktrace.skip][[rest.exception.stacktrace.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray85);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + false + "'", boolean26 == false);
        org.junit.Assert.assertNull(strList28);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + false + "'", boolean29 == false);
        org.junit.Assert.assertNotNull(strList30);
        org.junit.Assert.assertNull(strList40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(strSet50);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNotNull(strArray85);
    }

    @Test
    public void test2926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2926");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        retryOnPrimaryException2.setShard(shardId11);
        java.lang.String str13 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str14 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId16 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getResourceId();
        java.lang.String str18 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str19 = retryOnPrimaryException2.getResourceType();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str13, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList15);
        org.junit.Assert.assertNull(shardId16);
        org.junit.Assert.assertNotNull(strList17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test2927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2927");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.lang.Throwable throwable31 = retryOnPrimaryException2.unwrapCause();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "rest.exception.cause.skip");
        retryOnPrimaryException37.setIndex("");
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException37.setResources("", strArray46);
        java.lang.String str48 = retryOnPrimaryException37.toString();
        java.util.Set<java.lang.String> strSet49 = retryOnPrimaryException37.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "rest.exception.cause.skip");
        java.lang.String[] strArray60 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException53.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray60);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index65 = retryOnPrimaryException64.getIndex();
        java.lang.String str66 = retryOnPrimaryException64.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "hi!");
        retryOnPrimaryException70.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "rest.exception.cause.skip");
        retryOnPrimaryException77.setIndex("");
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException77.setResources("", strArray86);
        retryOnPrimaryException70.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray86);
        retryOnPrimaryException64.setResources("", strArray86);
        retryOnPrimaryException53.addSuppressed((java.lang.Throwable) retryOnPrimaryException64);
        java.util.Set<java.lang.String> strSet91 = retryOnPrimaryException64.getHeaderKeys();
        java.lang.Throwable throwable92 = retryOnPrimaryException64.getRootCause();
        java.util.List<java.lang.String> strList93 = retryOnPrimaryException64.getResourceId();
        retryOnPrimaryException37.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: retry_on_primary_exception][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strList93);
        retryOnPrimaryException2.addHeader("[hi!][[hi!][52]] RetryOnPrimaryException[rest.exception.cause.skip]", strList93);
        java.lang.String[] strArray97 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.setResources("[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][1]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str48, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet49);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNull(index65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str66, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertNotNull(strSet91);
        org.junit.Assert.assertNotNull(throwable92);
        org.junit.Assert.assertEquals(throwable92.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable92.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable92.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList93);
    }

    @Test
    public void test2928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2928");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.Index index4 = retryOnPrimaryException2.getIndex();
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (byte) 10);
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable9 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(str3);
        org.junit.Assert.assertNull(index4);
    }

    @Test
    public void test2929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2929");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList15 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet17 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException19 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNull(strList15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strSet17);
    }

    @Test
    public void test2930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2930");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.lang.String str12 = retryOnPrimaryException2.toString();
        java.lang.String str13 = retryOnPrimaryException2.toString();
        java.lang.Throwable[] throwableArray14 = retryOnPrimaryException2.getSuppressed();
        java.lang.String str15 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str12, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray14);
        org.junit.Assert.assertNull(str15);
    }

    @Test
    public void test2931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2931");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getResourceId();
        boolean boolean21 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str22 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        java.lang.String[] strArray35 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        retryOnPrimaryException28.setShard(shardId37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray39 = retryOnPrimaryException28.guessRootCauses();
        java.lang.String str40 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException28);
        java.lang.Throwable throwable42 = retryOnPrimaryException28.unwrapCause();
        retryOnPrimaryException28.setIndex("rest.exception.cause.skip");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException28);
        boolean boolean46 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str47 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable23.toString(), "[retry_on_primary_exception] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "retry_on_primary_exception" + "'", str40, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "retry_on_primary_exception" + "'", str47, "retry_on_primary_exception");
    }

    @Test
    public void test2932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2932");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.String str23 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str25 = retryOnPrimaryException4.getDetailedMessage();
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException4.setIndex(index26);
        java.lang.String str28 = retryOnPrimaryException4.toString();
        java.lang.String str29 = retryOnPrimaryException4.getResourceType();
        boolean boolean30 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException36 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException36.getHeaderKeys();
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException36.getHeaderKeys();
        java.lang.Throwable[] throwableArray39 = retryOnPrimaryException36.getSuppressed();
        retryOnPrimaryException36.setIndex("");
        java.util.Set<java.lang.String> strSet42 = retryOnPrimaryException36.getHeaderKeys();
        java.lang.String str43 = retryOnPrimaryException36.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        boolean boolean48 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException47);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        java.lang.Throwable throwable53 = retryOnPrimaryException52.unwrapCause();
        java.lang.String[] strArray57 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        retryOnPrimaryException52.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList58);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException64 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip");
        java.lang.String[] strArray71 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException64.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException52.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray71);
        retryOnPrimaryException47.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        retryOnPrimaryException36.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strArray71);
        java.lang.String str76 = retryOnPrimaryException36.getDetailedMessage();
        java.util.List<java.lang.String> strList78 = retryOnPrimaryException36.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        retryOnPrimaryException4.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", strList78);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str28, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + false + "'", boolean30 == false);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertNotNull(throwableArray39);
        org.junit.Assert.assertNotNull(strSet42);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str43, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(throwable53);
        org.junit.Assert.assertEquals(throwable53.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable53.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str76, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strList78);
    }

    @Test
    public void test2933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2933");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setShard("hi!", (int) (short) 1);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException4.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException23.setIndex(index26);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException23.status();
        java.lang.Throwable throwable29 = retryOnPrimaryException23.getRootCause();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet35 = retryOnPrimaryException34.getHeaderKeys();
        java.lang.Throwable throwable36 = retryOnPrimaryException34.getRootCause();
        java.lang.String[] strArray42 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        retryOnPrimaryException34.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException23.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        retryOnPrimaryException4.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList43);
        java.lang.Throwable[] throwableArray48 = retryOnPrimaryException4.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet35);
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(throwableArray48);
    }

    @Test
    public void test2934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2934");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet21 = retryOnPrimaryException20.getHeaderKeys();
        java.lang.Throwable throwable22 = retryOnPrimaryException20.getRootCause();
        java.lang.String[] strArray28 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        retryOnPrimaryException20.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList29);
        retryOnPrimaryException9.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (java.util.List<java.lang.String>) strList29);
        java.lang.String str33 = retryOnPrimaryException9.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId34 = retryOnPrimaryException9.getShardId();
        org.elasticsearch.rest.RestStatus restStatus35 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable36 = retryOnPrimaryException9.getRootCause();
        java.lang.Throwable throwable37 = retryOnPrimaryException9.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index41 = retryOnPrimaryException40.getIndex();
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException40.getResourceId();
        java.lang.Throwable throwable43 = retryOnPrimaryException40.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet47 = retryOnPrimaryException46.getHeaderKeys();
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "");
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        retryOnPrimaryException57.setIndex("");
        org.elasticsearch.index.Index index60 = null;
        retryOnPrimaryException57.setIndex(index60);
        org.elasticsearch.rest.RestStatus restStatus62 = retryOnPrimaryException57.status();
        retryOnPrimaryException46.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        throwable43.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray65 = retryOnPrimaryException57.guessRootCauses();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        java.lang.String str67 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException9);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet21);
        org.junit.Assert.assertNotNull(throwable22);
        org.junit.Assert.assertEquals(throwable22.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable22.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(shardId34);
        org.junit.Assert.assertTrue("'" + restStatus35 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus35.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable36);
        org.junit.Assert.assertEquals(throwable36.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable36.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(index41);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet47);
        org.junit.Assert.assertTrue("'" + restStatus62 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus62.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray65);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "retry_on_primary_exception" + "'", str67, "retry_on_primary_exception");
    }

    @Test
    public void test2935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2935");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.lang.String str12 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "hi!");
        retryOnPrimaryException15.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        java.lang.String[] strArray31 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException22.setResources("", strArray31);
        retryOnPrimaryException15.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray31);
        java.lang.String str34 = retryOnPrimaryException15.getDetailedMessage();
        java.lang.String str35 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str36 = retryOnPrimaryException15.getDetailedMessage();
        java.lang.Throwable throwable37 = retryOnPrimaryException15.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException15.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        java.lang.String str40 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("[rest.exception.stacktrace.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.Throwable throwable43 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "[[rest.exception.stacktrace.skip] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str34, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "retry_on_primary_exception" + "'", str35, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str36, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable37.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "[[rest.exception.stacktrace.skip] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2936");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException17);
        java.lang.String str22 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Class<?> wildcardClass24 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str22, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test2937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2937");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.unwrapCause();
        java.util.List<java.lang.String> strList9 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.Throwable throwable10 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable13 = retryOnPrimaryException2.unwrapCause();
        boolean boolean14 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.rest.RestStatus restStatus15 = retryOnPrimaryException2.status();
        java.lang.String str16 = retryOnPrimaryException2.toString();
        java.lang.Class<?> wildcardClass17 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable7.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(strList9);
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable10.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable13.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + restStatus15 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus15.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]" + "'", str16, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test2938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2938");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "hi!");
        retryOnPrimaryException24.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str28 = retryOnPrimaryException24.getDetailedMessage();
        java.lang.Throwable throwable29 = retryOnPrimaryException24.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable29);
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        boolean boolean33 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException30);
        java.lang.Throwable[] throwableArray34 = retryOnPrimaryException30.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException30);
        retryOnPrimaryException2.setIndex("hi!");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray38 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId39 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder40 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params41 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder42 = retryOnPrimaryException2.toXContent(xContentBuilder40, params41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str28, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable29.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + false + "'", boolean33 == false);
        org.junit.Assert.assertNotNull(throwableArray34);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray38);
        org.junit.Assert.assertNull(shardId39);
        org.junit.Assert.assertNotNull(params41);
    }

    @Test
    public void test2939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2939");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        java.lang.Throwable[] throwableArray19 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        retryOnPrimaryException2.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException2.setIndex(index24);
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean27 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException31 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId29, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException31.getHeaderKeys();
        retryOnPrimaryException31.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "");
        retryOnPrimaryException31.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.rest.RestStatus restStatus40 = retryOnPrimaryException38.status();
        retryOnPrimaryException38.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable throwable44 = retryOnPrimaryException38.getRootCause();
        retryOnPrimaryException38.setIndex("hi!");
        java.lang.String str47 = retryOnPrimaryException38.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId49, "rest.exception.cause.skip");
        retryOnPrimaryException51.setIndex("");
        java.lang.Throwable[] throwableArray54 = retryOnPrimaryException51.getSuppressed();
        java.lang.String[] strArray59 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException51.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray59);
        retryOnPrimaryException38.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray59);
        retryOnPrimaryException2.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", strArray59);
        retryOnPrimaryException2.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]", (int) ' ');
        org.elasticsearch.common.io.stream.StreamOutput streamOutput66 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable67 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput66);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(throwableArray19);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strSet32);
        org.junit.Assert.assertTrue("'" + restStatus40 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus40.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable44);
        org.junit.Assert.assertEquals(throwable44.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable44.getMessage(), "");
        org.junit.Assert.assertEquals(throwable44.toString(), "[hi!][[hi!][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str47, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
        org.junit.Assert.assertNotNull(throwableArray54);
        org.junit.Assert.assertNotNull(strArray59);
    }

    @Test
    public void test2940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2940");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String[] strArray45 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException39.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        retryOnPrimaryException39.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException39);
        retryOnPrimaryException39.setIndex("RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray52 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException39);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "[RetryOnPrimaryException[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!]; nested: RetryOnPrimaryException[retry_on_primary_exception];] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray52);
    }

    @Test
    public void test2941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2941");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.Index index7 = null;
        retryOnPrimaryException6.setIndex(index7);
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException6);
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2942");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str4 = retryOnPrimaryException2.getResourceType();
        retryOnPrimaryException2.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        java.lang.String str7 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception9 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException2, streamInput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNull(str4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str7, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2943");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet5 = retryOnPrimaryException4.getHeaderKeys();
        java.lang.Throwable throwable6 = retryOnPrimaryException4.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException7 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException7);
        retryOnPrimaryException7.setIndex("");
        retryOnPrimaryException7.setIndex("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        retryOnPrimaryException7.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        java.util.Set<java.lang.String> strSet15 = retryOnPrimaryException7.getHeaderKeys();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException7);
        org.junit.Assert.assertNotNull(strSet5);
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertNotNull(strSet15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
    }

    @Test
    public void test2944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2944");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException4.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        org.elasticsearch.index.Index index14 = null;
        retryOnPrimaryException11.setIndex(index14);
        org.elasticsearch.rest.RestStatus restStatus16 = retryOnPrimaryException11.status();
        java.lang.Throwable throwable17 = retryOnPrimaryException11.getRootCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException11);
        java.lang.Throwable throwable19 = retryOnPrimaryException4.unwrapCause();
        java.lang.String str20 = retryOnPrimaryException4.toString();
        java.lang.String str21 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
        org.junit.Assert.assertTrue("'" + restStatus16 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus16.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable19);
        org.junit.Assert.assertEquals(throwable19.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable19.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str20, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "retry_on_primary_exception" + "'", str21, "retry_on_primary_exception");
    }

    @Test
    public void test2945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2945");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        retryOnPrimaryException4.setShard(shardId8);
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setIndex("RetryOnPrimaryException[retry_on_primary_exception]");
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index16 = retryOnPrimaryException15.getIndex();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException15.getResourceId();
        java.lang.Throwable throwable18 = retryOnPrimaryException15.unwrapCause();
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException15.getHeader("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        java.lang.String str34 = retryOnPrimaryException23.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray35 = retryOnPrimaryException23.guessRootCauses();
        java.util.Set<java.lang.String> strSet36 = retryOnPrimaryException23.getHeaderKeys();
        java.lang.Throwable throwable37 = retryOnPrimaryException23.getRootCause();
        retryOnPrimaryException15.addSuppressed(throwable37);
        retryOnPrimaryException4.addSuppressed(throwable37);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray40 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable37);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, throwable37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(index16);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(throwable18);
        org.junit.Assert.assertEquals(throwable18.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable18.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str34 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str34, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray35);
        org.junit.Assert.assertNotNull(strSet36);
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray40);
    }

    @Test
    public void test2946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2946");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.lang.String[] strArray11 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray11);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        retryOnPrimaryException4.setShard(shardId13);
        org.elasticsearch.index.shard.ShardId shardId15 = retryOnPrimaryException4.getShardId();
        java.lang.String str16 = retryOnPrimaryException4.getResourceType();
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "rest.exception.cause.skip");
        retryOnPrimaryException22.setIndex("");
        boolean boolean25 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray26 = retryOnPrimaryException22.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        org.elasticsearch.index.Index index32 = null;
        retryOnPrimaryException29.setIndex(index32);
        org.elasticsearch.rest.RestStatus restStatus34 = retryOnPrimaryException29.status();
        java.lang.Throwable throwable35 = retryOnPrimaryException29.getRootCause();
        retryOnPrimaryException22.addSuppressed((java.lang.Throwable) retryOnPrimaryException29);
        java.lang.Throwable throwable37 = retryOnPrimaryException22.unwrapCause();
        java.lang.String str38 = retryOnPrimaryException22.getResourceType();
        java.lang.String str39 = retryOnPrimaryException22.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "hi!");
        retryOnPrimaryException43.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "rest.exception.cause.skip");
        retryOnPrimaryException50.setIndex("");
        java.lang.String[] strArray59 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException50.setResources("", strArray59);
        retryOnPrimaryException43.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray59);
        java.lang.Throwable[] throwableArray62 = retryOnPrimaryException43.getSuppressed();
        java.lang.String[] strArray69 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException43.setResources("rest.exception.cause.skip", strArray69);
        retryOnPrimaryException22.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray69);
        retryOnPrimaryException4.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ", strArray69);
        java.lang.String str73 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str75 = retryOnPrimaryException4.getResourceType();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNull(shardId15);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str16, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + false + "'", boolean25 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray26);
        org.junit.Assert.assertTrue("'" + restStatus34 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus34.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable37);
        org.junit.Assert.assertEquals(throwable37.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable37.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertNotNull(throwableArray62);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str73, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: " + "'", str75, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ");
    }

    @Test
    public void test2947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2947");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 10);
        java.lang.String str25 = retryOnPrimaryException2.getDetailedMessage();
        java.util.List<java.lang.String> strList26 = retryOnPrimaryException2.getResourceId();
        java.util.List<java.lang.String> strList27 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable28 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray29 = org.elasticsearch.ElasticsearchException.guessRootCauses(throwable28);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str25, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strList26);
        org.junit.Assert.assertNotNull(strList27);
        org.junit.Assert.assertNotNull(throwable28);
        org.junit.Assert.assertEquals(throwable28.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable28.toString(), "[[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]][[[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]][10]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray29);
    }

    @Test
    public void test2948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2948");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.String str9 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        retryOnPrimaryException4.setIndex("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException4.status();
        java.util.Set<java.lang.String> strSet13 = retryOnPrimaryException4.getHeaderKeys();
        retryOnPrimaryException4.setShard("[[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", 100);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.renderThrowable(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "retry_on_primary_exception" + "'", str9, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet13);
    }

    @Test
    public void test2949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2949");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        org.elasticsearch.index.Index index5 = null;
        retryOnPrimaryException2.setIndex(index5);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getResourceId();
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId9 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getHeader("[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNull(shardId9);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
    }

    @Test
    public void test2950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2950");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str16 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        retryOnPrimaryException4.setShard(shardId17);
        org.elasticsearch.index.shard.ShardId shardId19 = retryOnPrimaryException4.getShardId();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet25 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.Throwable throwable26 = retryOnPrimaryException24.getRootCause();
        java.lang.String[] strArray32 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        retryOnPrimaryException24.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList33);
        retryOnPrimaryException4.addHeader("rest.exception.cause.skip", (java.util.List<java.lang.String>) strList33);
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId38 = retryOnPrimaryException4.getShardId();
        java.lang.String str39 = retryOnPrimaryException4.getResourceType();
        java.util.List<java.lang.String> strList41 = null;
        retryOnPrimaryException4.addHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strList41);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray43 = retryOnPrimaryException4.guessRootCauses();
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "retry_on_primary_exception" + "'", str16, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertNull(shardId38);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test2951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2951");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        java.lang.String str11 = retryOnPrimaryException10.toString();
        java.lang.Throwable throwable12 = retryOnPrimaryException10.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList18 = retryOnPrimaryException17.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException17);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException19.guessRootCauses();
        java.util.List<java.lang.String> strList22 = retryOnPrimaryException19.getHeader("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        throwable12.addSuppressed((java.lang.Throwable) retryOnPrimaryException19);
        java.lang.Throwable[] throwableArray24 = retryOnPrimaryException19.getSuppressed();
        java.lang.Throwable[] throwableArray25 = retryOnPrimaryException19.getSuppressed();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str11, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable12);
        org.junit.Assert.assertEquals(throwable12.getLocalizedMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable12.getMessage(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals(throwable12.toString(), "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNull(strList18);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertNull(strList22);
        org.junit.Assert.assertNotNull(throwableArray24);
        org.junit.Assert.assertNotNull(throwableArray25);
    }

    @Test
    public void test2952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2952");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.getRootCause();
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException2.getHeaderKeys();
        java.util.List<java.lang.String> strList11 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray19 = retryOnPrimaryException15.guessRootCauses();
        boolean boolean20 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException15.setIndex(index21);
        java.lang.String str23 = retryOnPrimaryException15.toString();
        java.lang.String str24 = retryOnPrimaryException15.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException28);
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException34 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId32, "rest.exception.cause.skip");
        retryOnPrimaryException34.setIndex("");
        java.lang.String[] strArray43 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException34.setResources("", strArray43);
        java.lang.String str45 = retryOnPrimaryException34.toString();
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException34);
        java.lang.String str47 = retryOnPrimaryException28.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        retryOnPrimaryException28.setShard(shardId48);
        java.lang.String[] strArray60 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        retryOnPrimaryException28.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList61);
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        retryOnPrimaryException67.setShard(shardId71);
        java.util.Set<java.lang.String> strSet73 = retryOnPrimaryException67.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId75 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException77 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId75, "rest.exception.cause.skip");
        retryOnPrimaryException77.setIndex("");
        java.lang.String[] strArray86 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException77.setResources("", strArray86);
        retryOnPrimaryException67.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray86);
        retryOnPrimaryException28.setResources("", strArray86);
        retryOnPrimaryException15.addHeader("[][[][1]] RetryOnPrimaryException[hi!]", strArray86);
        retryOnPrimaryException2.addHeader("[hi!][[hi!][0]] RetryOnPrimaryException[]", strArray86);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput92 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable93 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.Throwable) retryOnPrimaryException2, streamOutput92);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNull(strList11);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str23, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str24, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str45, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str47);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strSet73);
        org.junit.Assert.assertNotNull(strArray86);
    }

    @Test
    public void test2953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2953");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str47 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.String str48 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "retry_on_primary_exception" + "'", str47, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "retry_on_primary_exception" + "'", str48, "retry_on_primary_exception");
    }

    @Test
    public void test2954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2954");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setIndex("");
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException18.setResources("", strArray27);
        java.lang.String str29 = retryOnPrimaryException18.toString();
        retryOnPrimaryException12.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        java.lang.String str31 = retryOnPrimaryException12.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId32 = null;
        retryOnPrimaryException12.setShard(shardId32);
        java.lang.String[] strArray44 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        retryOnPrimaryException12.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList45);
        retryOnPrimaryException2.addHeader("hi!", (java.util.List<java.lang.String>) strList45);
        org.elasticsearch.index.shard.ShardId shardId49 = null;
        retryOnPrimaryException2.setShard(shardId49);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException53 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "hi!");
        retryOnPrimaryException53.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str57 = retryOnPrimaryException53.getDetailedMessage();
        java.lang.Throwable throwable58 = retryOnPrimaryException53.unwrapCause();
        java.lang.String str59 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException53);
        org.elasticsearch.index.Index index60 = null;
        retryOnPrimaryException53.setIndex(index60);
        java.util.List<java.lang.String> strList63 = retryOnPrimaryException53.getHeader("RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.rest.RestStatus restStatus64 = retryOnPrimaryException53.status();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException53);
        java.lang.Class<?> wildcardClass66 = retryOnPrimaryException53.getClass();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str29, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertEquals("'" + str57 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str57, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable58);
        org.junit.Assert.assertEquals(throwable58.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable58.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable58.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "retry_on_primary_exception" + "'", str59, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList63);
        org.junit.Assert.assertTrue("'" + restStatus64 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus64.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test2955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2955");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", (java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str7 = retryOnPrimaryException4.getResourceType();
        org.elasticsearch.index.Index index8 = retryOnPrimaryException4.getIndex();
        org.elasticsearch.common.io.stream.StreamInput streamInput9 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception10 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException4, streamInput9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNull(str7);
        org.junit.Assert.assertNull(index8);
    }

    @Test
    public void test2956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2956");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        boolean boolean12 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException15.setResources("", strArray24);
        java.lang.String str26 = retryOnPrimaryException15.toString();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.lang.Throwable throwable31 = retryOnPrimaryException2.unwrapCause();
        java.util.Set<java.lang.String> strSet32 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + false + "'", boolean12 == false);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str26, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][10]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strSet32);
    }

    @Test
    public void test2957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2957");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus6 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId8 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId8, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.lang.String str12 = retryOnPrimaryException10.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index17 = retryOnPrimaryException16.getIndex();
        java.lang.String str18 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId20 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException22 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId20, "hi!");
        retryOnPrimaryException22.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "rest.exception.cause.skip");
        retryOnPrimaryException29.setIndex("");
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException29.setResources("", strArray38);
        retryOnPrimaryException22.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray38);
        retryOnPrimaryException16.setResources("", strArray38);
        retryOnPrimaryException10.setResources("", strArray38);
        retryOnPrimaryException2.setResources("", strArray38);
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index45 = retryOnPrimaryException2.getIndex();
        org.elasticsearch.index.Index index46 = retryOnPrimaryException2.getIndex();
        java.lang.Class<?> wildcardClass47 = retryOnPrimaryException2.getClass();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus6 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus6.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str12, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str18, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertNull(index46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test2958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2958");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray9 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "retry_on_primary_exception");
        java.lang.String str14 = retryOnPrimaryException13.toString();
        org.elasticsearch.index.Index index15 = null;
        retryOnPrimaryException13.setIndex(index15);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        java.lang.String[] strArray27 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray27);
        org.elasticsearch.index.shard.ShardId shardId29 = null;
        retryOnPrimaryException20.setShard(shardId29);
        java.util.Set<java.lang.String> strSet31 = retryOnPrimaryException20.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.index.shard.ShardId shardId35 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException37 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId35, "hi!");
        retryOnPrimaryException37.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str41 = retryOnPrimaryException37.getDetailedMessage();
        java.lang.Throwable throwable42 = retryOnPrimaryException37.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable42);
        org.elasticsearch.index.Index index44 = retryOnPrimaryException43.getIndex();
        java.lang.String str45 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException43);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        retryOnPrimaryException43.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray58);
        retryOnPrimaryException20.addHeader("retry_on_primary_exception", strArray58);
        retryOnPrimaryException13.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray58);
        retryOnPrimaryException2.setResources("retry_on_primary_exception", strArray58);
        boolean boolean64 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        retryOnPrimaryException2.setIndex("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: ][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray9);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str14, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strSet31);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str41, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable42.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "retry_on_primary_exception" + "'", str45, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + false + "'", boolean64 == false);
    }

    @Test
    public void test2959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2959");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        retryOnPrimaryException2.setShard(shardId15);
        org.elasticsearch.index.shard.ShardId shardId17 = retryOnPrimaryException2.getShardId();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.util.List<java.lang.String> strList21 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        java.lang.Throwable[] throwableArray22 = retryOnPrimaryException2.getSuppressed();
        retryOnPrimaryException2.setShard("", (int) (short) 10);
        java.lang.String str26 = retryOnPrimaryException2.getDetailedMessage();
        java.lang.String str27 = retryOnPrimaryException2.getDetailedMessage();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId17);
        org.junit.Assert.assertNull(strList21);
        org.junit.Assert.assertNotNull(throwableArray22);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str26, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str27, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2960");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable23 = retryOnPrimaryException2.getRootCause();
        java.util.Set<java.lang.String> strSet24 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        org.elasticsearch.index.shard.ShardId shardId27 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException29 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId27, "hi!");
        retryOnPrimaryException29.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str33 = retryOnPrimaryException29.getDetailedMessage();
        java.lang.Throwable throwable34 = retryOnPrimaryException29.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId25, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable34);
        org.elasticsearch.index.Index index36 = retryOnPrimaryException35.getIndex();
        boolean boolean37 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException35);
        boolean boolean38 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.Index index39 = null;
        retryOnPrimaryException35.setIndex(index39);
        retryOnPrimaryException35.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        java.util.List<java.lang.String> strList43 = retryOnPrimaryException35.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId44 = retryOnPrimaryException35.getShardId();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        java.lang.String[] strArray58 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException49.setResources("", strArray58);
        boolean boolean60 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.String str61 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Throwable throwable62 = retryOnPrimaryException49.getRootCause();
        boolean boolean63 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Throwable[] throwableArray64 = retryOnPrimaryException49.getSuppressed();
        java.lang.Throwable[] throwableArray65 = retryOnPrimaryException49.getSuppressed();
        java.util.List<java.lang.String> strList66 = retryOnPrimaryException49.getResourceId();
        retryOnPrimaryException35.addHeader("RetryOnPrimaryException[]", strList66);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput68 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException35.writeTo(streamOutput68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet24);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str33, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable34.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNull(strList43);
        org.junit.Assert.assertNull(shardId44);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + false + "'", boolean60 == false);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "retry_on_primary_exception" + "'", str61, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable62);
        org.junit.Assert.assertEquals(throwable62.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable62.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(throwableArray64);
        org.junit.Assert.assertNotNull(throwableArray65);
        org.junit.Assert.assertNotNull(strList66);
    }

    @Test
    public void test2961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2961");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        retryOnPrimaryException2.setShard(shardId6);
        java.util.Set<java.lang.String> strSet8 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Class<?> wildcardClass9 = strSet8.getClass();
        org.junit.Assert.assertNotNull(strSet8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test2962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2962");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str18 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList19 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable20 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        java.util.Set<java.lang.String> strSet22 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet27 = retryOnPrimaryException26.getHeaderKeys();
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException26.getHeaderKeys();
        java.lang.Throwable[] throwableArray29 = retryOnPrimaryException26.getSuppressed();
        java.util.List<java.lang.String> strList31 = retryOnPrimaryException26.getHeader("rest.exception.cause.skip");
        java.lang.String str32 = retryOnPrimaryException26.getDetailedMessage();
        retryOnPrimaryException26.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable35 = retryOnPrimaryException26.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId36 = retryOnPrimaryException26.getShardId();
        java.lang.String str37 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.rest.RestStatus restStatus38 = retryOnPrimaryException26.status();
        org.elasticsearch.index.shard.ShardId shardId40 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException42 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId40, "rest.exception.cause.skip");
        retryOnPrimaryException42.setIndex("");
        boolean boolean45 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException42);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray46 = retryOnPrimaryException42.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId47, "rest.exception.cause.skip");
        retryOnPrimaryException49.setIndex("");
        org.elasticsearch.index.Index index52 = null;
        retryOnPrimaryException49.setIndex(index52);
        org.elasticsearch.rest.RestStatus restStatus54 = retryOnPrimaryException49.status();
        java.lang.Throwable throwable55 = retryOnPrimaryException49.getRootCause();
        retryOnPrimaryException42.addSuppressed((java.lang.Throwable) retryOnPrimaryException49);
        java.lang.Throwable throwable57 = retryOnPrimaryException42.unwrapCause();
        java.lang.String str58 = retryOnPrimaryException42.getResourceType();
        java.lang.String str59 = retryOnPrimaryException42.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId61 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException63 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId61, "hi!");
        retryOnPrimaryException63.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId68 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException70 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId68, "rest.exception.cause.skip");
        retryOnPrimaryException70.setIndex("");
        java.lang.String[] strArray79 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException70.setResources("", strArray79);
        retryOnPrimaryException63.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray79);
        java.lang.Throwable[] throwableArray82 = retryOnPrimaryException63.getSuppressed();
        java.lang.String[] strArray89 = new java.lang.String[] { "retry_on_primary_exception", "retry_on_primary_exception", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "rest.exception.cause.skip" };
        retryOnPrimaryException63.setResources("rest.exception.cause.skip", strArray89);
        retryOnPrimaryException42.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray89);
        retryOnPrimaryException26.addHeader("rest.exception.stacktrace.skip", strArray89);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.stacktrace.skip", strArray89);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException95 = org.elasticsearch.ElasticsearchException.writeStackTraces(retryOnPrimaryException2, streamOutput94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "retry_on_primary_exception" + "'", str18, "retry_on_primary_exception");
        org.junit.Assert.assertNull(strList19);
        org.junit.Assert.assertNotNull(throwable20);
        org.junit.Assert.assertEquals(throwable20.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable20.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strSet22);
        org.junit.Assert.assertNotNull(strSet27);
        org.junit.Assert.assertNotNull(strSet28);
        org.junit.Assert.assertNotNull(throwableArray29);
        org.junit.Assert.assertNull(strList31);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable35);
        org.junit.Assert.assertEquals(throwable35.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable35.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId36);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "retry_on_primary_exception" + "'", str37, "retry_on_primary_exception");
        org.junit.Assert.assertTrue("'" + restStatus38 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus38.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray46);
        org.junit.Assert.assertTrue("'" + restStatus54 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus54.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable55);
        org.junit.Assert.assertEquals(throwable55.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable55.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable57);
        org.junit.Assert.assertEquals(throwable57.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable57.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNull(str59);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertNotNull(throwableArray82);
        org.junit.Assert.assertNotNull(strArray89);
    }

    @Test
    public void test2963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2963");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray5 = retryOnPrimaryException2.guessRootCauses();
        java.util.Set<java.lang.String> strSet6 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray8 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray5);
        org.junit.Assert.assertNotNull(strSet6);
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray8);
    }

    @Test
    public void test2964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2964");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        retryOnPrimaryException4.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][10]] RetryOnPrimaryException[rest.exception.cause.skip]", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId28 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException30 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId28, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index31 = retryOnPrimaryException30.getIndex();
        java.util.List<java.lang.String> strList32 = retryOnPrimaryException30.getResourceId();
        java.lang.Throwable throwable33 = retryOnPrimaryException30.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus34 = retryOnPrimaryException30.status();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index39 = retryOnPrimaryException38.getIndex();
        java.lang.String str40 = retryOnPrimaryException38.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException44 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index45 = retryOnPrimaryException44.getIndex();
        java.lang.String str46 = retryOnPrimaryException44.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId48 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException50 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId48, "hi!");
        retryOnPrimaryException50.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId55 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId55, "rest.exception.cause.skip");
        retryOnPrimaryException57.setIndex("");
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException57.setResources("", strArray66);
        retryOnPrimaryException50.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray66);
        retryOnPrimaryException44.setResources("", strArray66);
        retryOnPrimaryException38.setResources("", strArray66);
        retryOnPrimaryException30.setResources("", strArray66);
        retryOnPrimaryException4.setResources("retry_on_primary_exception", strArray66);
        java.util.List<java.lang.String> strList74 = retryOnPrimaryException4.getHeader("rest.exception.stacktrace.skip");
        java.lang.String str75 = retryOnPrimaryException4.getDetailedMessage();
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNull(index31);
        org.junit.Assert.assertNull(strList32);
        org.junit.Assert.assertNotNull(throwable33);
        org.junit.Assert.assertEquals(throwable33.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable33.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable33.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus34 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus34.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNull(index39);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str40, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNull(index45);
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str46, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNull(strList74);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str75, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
    }

    @Test
    public void test2965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2965");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.unwrapCause();
        retryOnPrimaryException2.setIndex("");
        retryOnPrimaryException2.setShard("[hi!][[hi!][0]] RetryOnPrimaryException[]", (int) (byte) 0);
        java.lang.String str15 = retryOnPrimaryException2.getResourceType();
        java.util.List<java.lang.String> strList17 = retryOnPrimaryException2.getHeader("[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray18 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "[[hi!][[hi!][0]] RetryOnPrimaryException[]][[[hi!][[hi!][0]] RetryOnPrimaryException[]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str8);
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable9.toString(), "[[hi!][[hi!][0]] RetryOnPrimaryException[]][[[hi!][[hi!][0]] RetryOnPrimaryException[]][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNull(strList17);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray18);
    }

    @Test
    public void test2966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2966");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException2.setIndex(index21);
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.Index index24 = null;
        retryOnPrimaryException2.setIndex(index24);
        org.elasticsearch.rest.RestStatus restStatus26 = retryOnPrimaryException2.status();
        java.lang.String str27 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet28 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setIndex("[[hi!][[hi!][0]] RetryOnPrimaryException[]][[[hi!][[hi!][0]] RetryOnPrimaryException[]][100]] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[[[hi!][[hi!][0]] RetryOnPrimaryException[]][[[hi!][[hi!][0]] RetryOnPrimaryException[]][100]] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[[[hi!][[hi!][0]] RetryOnPrimaryException[]][[[hi!][[hi!][0]] RetryOnPrimaryException[]][100]] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + restStatus26 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus26.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "retry_on_primary_exception" + "'", str27, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet28);
    }

    @Test
    public void test2967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2967");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        java.lang.String str35 = retryOnPrimaryException24.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        org.elasticsearch.index.shard.ShardId shardId37 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException39 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId37, "rest.exception.cause.skip");
        java.lang.Throwable throwable40 = retryOnPrimaryException39.unwrapCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException39);
        java.lang.String str42 = retryOnPrimaryException39.getDetailedMessage();
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException39);
        org.elasticsearch.common.io.stream.StreamInput streamInput44 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Exception exception45 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Exception) retryOnPrimaryException39, streamInput44);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str35, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable40);
        org.junit.Assert.assertEquals(throwable40.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable40.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str42, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
    }

    @Test
    public void test2968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2968");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException2.getShardId();
        java.lang.String str13 = retryOnPrimaryException2.toString();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str13, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2969");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.String str21 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index25 = retryOnPrimaryException24.getIndex();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        java.lang.Throwable[] throwableArray27 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException2.status();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder29 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params30 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder31 = retryOnPrimaryException2.toXContent(xContentBuilder29, params30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str21, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNull(index25);
        org.junit.Assert.assertNotNull(throwableArray27);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(params30);
    }

    @Test
    public void test2970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2970");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        org.elasticsearch.index.Index index11 = retryOnPrimaryException10.getIndex();
        java.util.List<java.lang.String> strList12 = retryOnPrimaryException10.getResourceId();
        org.elasticsearch.rest.RestStatus restStatus13 = retryOnPrimaryException10.status();
        java.lang.Class<?> wildcardClass14 = retryOnPrimaryException10.getClass();
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index11);
        org.junit.Assert.assertNull(strList12);
        org.junit.Assert.assertTrue("'" + restStatus13 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus13.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test2971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2971");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index3 = retryOnPrimaryException2.getIndex();
        java.util.List<java.lang.String> strList4 = retryOnPrimaryException2.getResourceId();
        java.lang.Throwable throwable5 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.rest.RestStatus restStatus6 = retryOnPrimaryException2.status();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet10 = retryOnPrimaryException9.getHeaderKeys();
        java.lang.Throwable throwable11 = retryOnPrimaryException9.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException9.guessRootCauses();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException2.status();
        org.junit.Assert.assertNull(index3);
        org.junit.Assert.assertNull(strList4);
        org.junit.Assert.assertNotNull(throwable5);
        org.junit.Assert.assertEquals(throwable5.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable5.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + restStatus6 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus6.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet10);
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
    }

    @Test
    public void test2972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2972");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.Throwable throwable3 = retryOnPrimaryException2.unwrapCause();
        java.lang.String[] strArray7 = new java.lang.String[] { "rest.exception.cause.skip", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        retryOnPrimaryException2.addHeader("retry_on_primary_exception", (java.util.List<java.lang.String>) strList8);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException2.status();
        java.lang.String str12 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId13 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(throwable3);
        org.junit.Assert.assertEquals(throwable3.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable3.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str12, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId13);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
    }

    @Test
    public void test2973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2973");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        java.lang.String[] strArray16 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException9.setResources("rest.exception.cause.skip", strArray16);
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException9);
        retryOnPrimaryException9.setShard("RetryOnPrimaryException[retry_on_primary_exception]", (int) (byte) 10);
        java.util.List<java.lang.String> strList23 = retryOnPrimaryException9.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.elasticsearch.common.io.stream.StreamOutput streamOutput24 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException9.writeTo(streamOutput24);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strList23);
    }

    @Test
    public void test2974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2974");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "");
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        org.elasticsearch.rest.RestStatus restStatus11 = retryOnPrimaryException9.status();
        retryOnPrimaryException9.setShard("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", (int) (byte) 0);
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException9.setIndex("hi!");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        boolean boolean31 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException20);
        retryOnPrimaryException20.setIndex("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.Index index34 = null;
        retryOnPrimaryException20.setIndex(index34);
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str37 = retryOnPrimaryException20.toString();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertTrue("'" + restStatus11 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus11.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "");
        org.junit.Assert.assertEquals(throwable15.toString(), "[hi!][[hi!][0]] RetryOnPrimaryException[]");
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2975");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException9.setIndex(index12);
        org.elasticsearch.rest.RestStatus restStatus14 = retryOnPrimaryException9.status();
        java.lang.Throwable throwable15 = retryOnPrimaryException9.getRootCause();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException9);
        java.lang.Throwable throwable17 = retryOnPrimaryException2.unwrapCause();
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList20 = retryOnPrimaryException2.getHeader("[RetryOnPrimaryException[retry_on_primary_exception]][[RetryOnPrimaryException[retry_on_primary_exception]][1]] RetryOnPrimaryException[rest.exception.cause.skip]");
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + restStatus14 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus14.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable17);
        org.junit.Assert.assertEquals(throwable17.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable17.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(strList20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test2976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2976");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList5 = retryOnPrimaryException4.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException6 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.rest.RestStatus restStatus7 = retryOnPrimaryException6.status();
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet12 = retryOnPrimaryException11.getHeaderKeys();
        java.lang.Throwable throwable13 = retryOnPrimaryException11.getRootCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray14 = retryOnPrimaryException11.guessRootCauses();
        java.util.List<java.lang.String> strList16 = retryOnPrimaryException11.getHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        org.elasticsearch.index.Index index23 = null;
        retryOnPrimaryException20.setIndex(index23);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet29 = retryOnPrimaryException28.getHeaderKeys();
        retryOnPrimaryException28.setShard("rest.exception.cause.skip", (int) (short) 10);
        org.elasticsearch.index.shard.ShardId shardId33 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException35 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId33, "");
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException35);
        org.elasticsearch.rest.RestStatus restStatus37 = retryOnPrimaryException35.status();
        java.lang.String[] strArray42 = new java.lang.String[] { "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "retry_on_primary_exception" };
        retryOnPrimaryException35.setResources("rest.exception.cause.skip", strArray42);
        retryOnPrimaryException20.addHeader("RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        retryOnPrimaryException11.addHeader("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray42);
        retryOnPrimaryException6.setResources("RetryOnPrimaryException[retry_on_primary_exception]", strArray42);
        java.lang.String str47 = retryOnPrimaryException6.getDetailedMessage();
        java.lang.String str48 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException6);
        org.elasticsearch.common.io.stream.StreamInput streamInput49 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException50 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException6, streamInput49);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strList5);
        org.junit.Assert.assertTrue("'" + restStatus7 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus7.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strSet12);
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray14);
        org.junit.Assert.assertNull(strList16);
        org.junit.Assert.assertNotNull(strSet29);
        org.junit.Assert.assertTrue("'" + restStatus37 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus37.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str47, "RetryOnPrimaryException[retry_on_primary_exception]; nested: RetryOnPrimaryException[rest.exception.cause.skip];; org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "retry_on_primary_exception" + "'", str48, "retry_on_primary_exception");
    }

    @Test
    public void test2977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2977");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        boolean boolean24 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        org.elasticsearch.index.Index index31 = null;
        retryOnPrimaryException28.setIndex(index31);
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException28.getHeader("");
        java.lang.String str35 = retryOnPrimaryException28.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        retryOnPrimaryException38.setIndex("");
        java.lang.String[] strArray47 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("", strArray47);
        boolean boolean49 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "rest.exception.cause.skip");
        retryOnPrimaryException52.setIndex("");
        java.lang.Throwable[] throwableArray55 = retryOnPrimaryException52.getSuppressed();
        retryOnPrimaryException38.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        retryOnPrimaryException28.addSuppressed((java.lang.Throwable) retryOnPrimaryException38);
        boolean boolean58 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException38);
        java.util.List<java.lang.String> strList59 = retryOnPrimaryException38.getResourceId();
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strList59);
        java.lang.String str61 = retryOnPrimaryException2.getDetailedMessage();
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder62 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params63 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder64 = retryOnPrimaryException2.toXContent(xContentBuilder62, params63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(strList34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + false + "'", boolean49 == false);
        org.junit.Assert.assertNotNull(throwableArray55);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + false + "'", boolean58 == false);
        org.junit.Assert.assertNotNull(strList59);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str61, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(params63);
    }

    @Test
    public void test2978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2978");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray37);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException2.getHeader("");
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList44 = retryOnPrimaryException2.getResourceId();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNull(strList44);
    }

    @Test
    public void test2979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2979");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray24 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str25 = retryOnPrimaryException2.getResourceType();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray24);
        org.junit.Assert.assertNull(str25);
    }

    @Test
    public void test2980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2980");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index10 = retryOnPrimaryException9.getIndex();
        org.elasticsearch.index.shard.ShardId shardId12 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException14 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId12, "rest.exception.cause.skip");
        retryOnPrimaryException14.setIndex("");
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException14);
        org.elasticsearch.index.shard.ShardId shardId18 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException20 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId18, "rest.exception.cause.skip");
        retryOnPrimaryException20.setIndex("");
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException20.setResources("", strArray29);
        java.lang.String str31 = retryOnPrimaryException20.toString();
        retryOnPrimaryException14.addSuppressed((java.lang.Throwable) retryOnPrimaryException20);
        java.lang.String str33 = retryOnPrimaryException14.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        retryOnPrimaryException14.setShard(shardId34);
        java.lang.String[] strArray46 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", "RetryOnPrimaryException[retry_on_primary_exception]", "", "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", "[] RetryOnPrimaryException[rest.exception.cause.skip]", "hi!", "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "RetryOnPrimaryException[retry_on_primary_exception]", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        retryOnPrimaryException14.addHeader("rest.exception.stacktrace.skip", (java.util.List<java.lang.String>) strList47);
        retryOnPrimaryException9.addHeader("", (java.util.List<java.lang.String>) strList47);
        org.elasticsearch.index.shard.ShardId shardId51 = null;
        org.elasticsearch.index.shard.ShardId shardId53 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException55 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId53, "rest.exception.cause.skip");
        java.util.List<java.lang.String> strList56 = retryOnPrimaryException55.getResourceId();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException57 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId51, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException55);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray58 = retryOnPrimaryException57.guessRootCauses();
        retryOnPrimaryException9.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException57);
        boolean boolean61 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException57);
        org.elasticsearch.index.shard.ShardId shardId62 = null;
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet67 = retryOnPrimaryException66.getHeaderKeys();
        java.lang.Throwable throwable68 = retryOnPrimaryException66.getRootCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException69 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId62, "rest.exception.cause.skip", (java.lang.Throwable) retryOnPrimaryException66);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray70 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException69);
        retryOnPrimaryException69.setIndex("");
        java.lang.String str73 = retryOnPrimaryException69.toString();
        java.lang.Throwable throwable74 = retryOnPrimaryException69.unwrapCause();
        retryOnPrimaryException57.addSuppressed((java.lang.Throwable) retryOnPrimaryException69);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput76 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException elasticsearchException77 = org.elasticsearch.ElasticsearchException.writeStackTraces((org.elasticsearch.ElasticsearchException) retryOnPrimaryException69, streamOutput76);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNull(index10);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str31, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNull(strList56);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray58);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNotNull(strSet67);
        org.junit.Assert.assertNotNull(throwable68);
        org.junit.Assert.assertEquals(throwable68.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable68.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable68.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray70);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];" + "'", str73, "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
        org.junit.Assert.assertNotNull(throwable74);
        org.junit.Assert.assertEquals(throwable74.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable74.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]; nested: RetryOnPrimaryException[rest.exception.cause.skip];");
    }

    @Test
    public void test2981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2981");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.common.io.stream.StreamOutput streamOutput8 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException9 = org.elasticsearch.ElasticsearchException.writeStackTraces((java.lang.RuntimeException) retryOnPrimaryException2, streamOutput8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable6.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strSet7);
    }

    @Test
    public void test2982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2982");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.lang.String[] strArray9 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray9);
        org.elasticsearch.index.shard.ShardId shardId11 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException13 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId11, "rest.exception.cause.skip");
        org.elasticsearch.index.Index index14 = retryOnPrimaryException13.getIndex();
        java.lang.String str15 = retryOnPrimaryException13.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId17 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException19 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId17, "hi!");
        retryOnPrimaryException19.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        retryOnPrimaryException19.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray35);
        retryOnPrimaryException13.setResources("", strArray35);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException13);
        java.util.Set<java.lang.String> strSet40 = retryOnPrimaryException13.getHeaderKeys();
        java.lang.Throwable throwable41 = retryOnPrimaryException13.getRootCause();
        java.lang.Throwable throwable42 = retryOnPrimaryException13.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId43 = retryOnPrimaryException13.getShardId();
        boolean boolean44 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException13);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNull(index14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str15, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strSet40);
        org.junit.Assert.assertNotNull(throwable41);
        org.junit.Assert.assertEquals(throwable41.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable41.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
    }

    @Test
    public void test2983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2983");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str14 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable15 = retryOnPrimaryException2.getRootCause();
        boolean boolean16 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray17 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.common.io.stream.StreamInput streamInput18 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.RuntimeException runtimeException19 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.RuntimeException) retryOnPrimaryException2, streamInput18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "retry_on_primary_exception" + "'", str14, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable15);
        org.junit.Assert.assertEquals(throwable15.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable15.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray17);
    }

    @Test
    public void test2984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2984");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray7 = retryOnPrimaryException2.guessRootCauses();
        java.lang.String str8 = retryOnPrimaryException2.toString();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str8, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
    }

    @Test
    public void test2985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2985");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.lang.String str14 = retryOnPrimaryException2.toString();
        retryOnPrimaryException2.setShard("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", (int) (byte) 0);
        java.lang.String str18 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "rest.exception.cause.skip");
        java.lang.String[] strArray28 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray28);
        org.elasticsearch.index.shard.ShardId shardId30 = null;
        retryOnPrimaryException21.setShard(shardId30);
        java.lang.String str32 = retryOnPrimaryException21.getDetailedMessage();
        java.lang.String str33 = retryOnPrimaryException21.getResourceType();
        java.util.List<java.lang.String> strList34 = retryOnPrimaryException21.getResourceId();
        org.elasticsearch.index.shard.ShardId shardId35 = retryOnPrimaryException21.getShardId();
        java.util.List<java.lang.String> strList36 = retryOnPrimaryException21.getResourceId();
        java.util.Set<java.lang.String> strSet37 = retryOnPrimaryException21.getHeaderKeys();
        java.lang.String str38 = retryOnPrimaryException21.getDetailedMessage();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException21);
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str14, "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str18, "[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip][0]] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str32, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str33, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strList34);
        org.junit.Assert.assertNull(shardId35);
        org.junit.Assert.assertNotNull(strList36);
        org.junit.Assert.assertNotNull(strSet37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str38, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
    }

    @Test
    public void test2986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2986");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        org.elasticsearch.index.Index index21 = null;
        retryOnPrimaryException2.setIndex(index21);
        java.lang.Throwable throwable23 = retryOnPrimaryException2.unwrapCause();
        java.lang.Throwable throwable24 = retryOnPrimaryException2.getRootCause();
        java.util.List<java.lang.String> strList25 = retryOnPrimaryException2.getResourceId();
        java.lang.String str26 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable27 = retryOnPrimaryException2.unwrapCause();
        boolean boolean28 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException(throwable27);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwable23);
        org.junit.Assert.assertEquals(throwable23.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable23.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(throwable24);
        org.junit.Assert.assertEquals(throwable24.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable24.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(strList25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "retry_on_primary_exception" + "'", str26, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable27);
        org.junit.Assert.assertEquals(throwable27.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable27.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
    }

    @Test
    public void test2987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2987");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId6 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException8 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId6, "rest.exception.cause.skip");
        retryOnPrimaryException8.setIndex("");
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException8.setResources("", strArray17);
        java.lang.String str19 = retryOnPrimaryException8.toString();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException8);
        java.lang.String str21 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        retryOnPrimaryException2.setShard(shardId22);
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "hi!");
        retryOnPrimaryException26.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId31 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException33 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId31, "rest.exception.cause.skip");
        retryOnPrimaryException33.setIndex("");
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException33.setResources("", strArray42);
        retryOnPrimaryException26.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray42);
        java.lang.Throwable[] throwableArray45 = retryOnPrimaryException26.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException26.setShard(shardId47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable throwable50 = retryOnPrimaryException26.unwrapCause();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray51 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException26);
        java.lang.Throwable[] throwableArray52 = retryOnPrimaryException26.getSuppressed();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str19, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(throwableArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertNotNull(throwable50);
        org.junit.Assert.assertEquals(throwable50.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable50.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable50.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray51);
        org.junit.Assert.assertNotNull(throwableArray52);
    }

    @Test
    public void test2988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2988");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId7 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException9 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId7, "rest.exception.cause.skip");
        retryOnPrimaryException9.setIndex("");
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException9.setResources("", strArray18);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray18);
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException2.getSuppressed();
        org.elasticsearch.rest.RestStatus restStatus22 = retryOnPrimaryException2.status();
        java.lang.String str23 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setShard("[org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]", 0);
        java.lang.String str27 = retryOnPrimaryException2.getResourceType();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = retryOnPrimaryException2.guessRootCauses();
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertTrue("'" + restStatus22 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus22.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str23, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str27 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str27, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
    }

    @Test
    public void test2989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2989");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str8 = retryOnPrimaryException4.getDetailedMessage();
        java.lang.Throwable throwable9 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException10 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable9);
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException10);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput12 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException10.writeTo(streamOutput12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable9.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2990");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "hi!");
        retryOnPrimaryException4.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId9 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException11 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId9, "rest.exception.cause.skip");
        retryOnPrimaryException11.setIndex("");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException11.setResources("", strArray20);
        retryOnPrimaryException4.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray20);
        java.lang.Throwable[] throwableArray23 = retryOnPrimaryException4.getSuppressed();
        org.elasticsearch.index.shard.ShardId shardId24 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException26 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId24, "rest.exception.cause.skip");
        retryOnPrimaryException26.setIndex("");
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException26.setResources("", strArray35);
        java.lang.String str37 = retryOnPrimaryException26.toString();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException26);
        org.elasticsearch.index.shard.ShardId shardId39 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException41 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId39, "rest.exception.cause.skip");
        java.lang.Throwable throwable42 = retryOnPrimaryException41.unwrapCause();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException41);
        java.lang.String[] strArray47 = new java.lang.String[] { "retry_on_primary_exception", "RetryOnPrimaryException[retry_on_primary_exception]" };
        retryOnPrimaryException41.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray47);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException49 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException41);
        java.util.List<java.lang.String> strList51 = retryOnPrimaryException41.getHeader("");
        java.lang.String str52 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException41);
        java.util.Set<java.lang.String> strSet53 = retryOnPrimaryException41.getHeaderKeys();
        java.util.List<java.lang.String> strList55 = retryOnPrimaryException41.getHeader("[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder56 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params57 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder58 = retryOnPrimaryException41.toXContent(xContentBuilder56, params57);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(throwableArray23);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str37, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertNull(strList51);
        org.junit.Assert.assertEquals("'" + str52 + "' != '" + "retry_on_primary_exception" + "'", str52, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strSet53);
        org.junit.Assert.assertNull(strList55);
        org.junit.Assert.assertNotNull(params57);
    }

    @Test
    public void test2991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2991");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "retry_on_primary_exception");
        java.lang.String str3 = retryOnPrimaryException2.toString();
        org.elasticsearch.index.Index index4 = null;
        retryOnPrimaryException2.setIndex(index4);
        java.lang.String str6 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.Throwable throwable7 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable throwable9 = retryOnPrimaryException2.getRootCause();
        java.lang.Throwable[] throwableArray10 = throwable9.getSuppressed();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException(throwable9);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str3, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "retry_on_primary_exception" + "'", str6, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable7);
        org.junit.Assert.assertEquals(throwable7.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable7.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwableArray10);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
    }

    @Test
    public void test2992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2992");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "rest.exception.cause.skip");
        retryOnPrimaryException4.setIndex("");
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException4.setResources("", strArray13);
        boolean boolean15 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException4);
        org.elasticsearch.index.shard.ShardId shardId16 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException18 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId16, "rest.exception.cause.skip");
        retryOnPrimaryException18.setIndex("");
        java.lang.Throwable[] throwableArray21 = retryOnPrimaryException18.getSuppressed();
        retryOnPrimaryException4.addSuppressed((java.lang.Throwable) retryOnPrimaryException18);
        retryOnPrimaryException4.setShard("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", (int) (byte) -1);
        java.lang.Throwable throwable26 = retryOnPrimaryException4.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException27 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "RetryOnPrimaryException[rest.exception.cause.skip]", (java.lang.Throwable) retryOnPrimaryException4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(throwableArray21);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][[RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];][-1]] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2993");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.lang.String[] strArray10 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException2.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray10);
        org.elasticsearch.index.Index index12 = null;
        retryOnPrimaryException2.setIndex(index12);
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "rest.exception.cause.skip");
        retryOnPrimaryException16.setIndex("");
        boolean boolean19 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray20 = retryOnPrimaryException16.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        org.elasticsearch.index.Index index26 = null;
        retryOnPrimaryException23.setIndex(index26);
        org.elasticsearch.rest.RestStatus restStatus28 = retryOnPrimaryException23.status();
        java.lang.Throwable throwable29 = retryOnPrimaryException23.getRootCause();
        retryOnPrimaryException16.addSuppressed((java.lang.Throwable) retryOnPrimaryException23);
        java.lang.Throwable throwable31 = retryOnPrimaryException16.unwrapCause();
        boolean boolean32 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray33 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.Throwable throwable34 = retryOnPrimaryException16.getRootCause();
        java.lang.Throwable[] throwableArray35 = retryOnPrimaryException16.getSuppressed();
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException16);
        org.elasticsearch.index.shard.ShardId shardId38 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException40 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId38, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet41 = retryOnPrimaryException40.getHeaderKeys();
        java.lang.Throwable throwable42 = retryOnPrimaryException40.getRootCause();
        boolean boolean43 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException40);
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException47 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet48 = retryOnPrimaryException47.getHeaderKeys();
        java.lang.Throwable throwable49 = retryOnPrimaryException47.getRootCause();
        java.lang.String[] strArray55 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        retryOnPrimaryException47.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList56);
        java.util.List<java.lang.String> strList60 = null;
        retryOnPrimaryException47.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList60);
        boolean boolean62 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException47);
        java.lang.String str63 = retryOnPrimaryException47.getDetailedMessage();
        org.elasticsearch.index.shard.ShardId shardId65 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException67 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId65, "hi!");
        retryOnPrimaryException67.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId72 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException74 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId72, "rest.exception.cause.skip");
        retryOnPrimaryException74.setIndex("");
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException74.setResources("", strArray83);
        retryOnPrimaryException67.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray83);
        retryOnPrimaryException47.setResources("rest.exception.stacktrace.skip", strArray83);
        retryOnPrimaryException40.addHeader("[hi!][[hi!][0]] RetryOnPrimaryException[]", strArray83);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray83);
        java.lang.String str89 = retryOnPrimaryException2.getResourceType();
        java.lang.Throwable throwable90 = retryOnPrimaryException2.unwrapCause();
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray20);
        org.junit.Assert.assertTrue("'" + restStatus28 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus28.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable29);
        org.junit.Assert.assertEquals(throwable29.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable29.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwable31);
        org.junit.Assert.assertEquals(throwable31.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable31.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray33);
        org.junit.Assert.assertNotNull(throwable34);
        org.junit.Assert.assertEquals(throwable34.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable34.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(throwableArray35);
        org.junit.Assert.assertNotNull(strSet41);
        org.junit.Assert.assertNotNull(throwable42);
        org.junit.Assert.assertEquals(throwable42.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable42.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(strSet48);
        org.junit.Assert.assertNotNull(throwable49);
        org.junit.Assert.assertEquals(throwable49.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable49.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str63, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];" + "'", str89, "RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];");
        org.junit.Assert.assertNotNull(throwable90);
        org.junit.Assert.assertEquals(throwable90.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable90.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable90.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2994");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable[] throwableArray5 = retryOnPrimaryException2.getSuppressed();
        java.util.List<java.lang.String> strList7 = retryOnPrimaryException2.getHeader("rest.exception.cause.skip");
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        retryOnPrimaryException2.setIndex("rest.exception.cause.skip");
        java.lang.Throwable throwable11 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId12 = retryOnPrimaryException2.getShardId();
        org.elasticsearch.index.shard.ShardId shardId14 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException16 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId14, "hi!");
        retryOnPrimaryException16.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId21 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException23 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId21, "rest.exception.cause.skip");
        retryOnPrimaryException23.setIndex("");
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException23.setResources("", strArray32);
        retryOnPrimaryException16.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray32);
        java.lang.String str35 = retryOnPrimaryException16.getDetailedMessage();
        java.lang.String str36 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException16);
        java.lang.String str37 = retryOnPrimaryException16.getDetailedMessage();
        org.elasticsearch.index.Index index38 = null;
        retryOnPrimaryException16.setIndex(index38);
        org.elasticsearch.index.shard.ShardId shardId41 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException43 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId41, "rest.exception.cause.skip");
        retryOnPrimaryException43.setIndex("");
        java.lang.Throwable[] throwableArray46 = retryOnPrimaryException43.getSuppressed();
        java.lang.String[] strArray51 = new java.lang.String[] { "", "rest.exception.cause.skip", "[] RetryOnPrimaryException[rest.exception.cause.skip]" };
        retryOnPrimaryException43.addHeader("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", strArray51);
        retryOnPrimaryException16.addHeader("hi!", strArray51);
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[]", strArray51);
        boolean boolean55 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput56 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput56);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertNotNull(throwableArray5);
        org.junit.Assert.assertNull(strList7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip");
        org.junit.Assert.assertNotNull(throwable11);
        org.junit.Assert.assertEquals(throwable11.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable11.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId12);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertEquals("'" + str35 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str35, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "retry_on_primary_exception" + "'", str36, "retry_on_primary_exception");
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str37, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwableArray46);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
    }

    @Test
    public void test2995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2995");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.Throwable throwable4 = retryOnPrimaryException2.getRootCause();
        java.lang.String[] strArray10 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        retryOnPrimaryException2.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList11);
        java.util.List<java.lang.String> strList15 = null;
        retryOnPrimaryException2.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList15);
        boolean boolean17 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId19 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException21 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId19, "hi!");
        retryOnPrimaryException21.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId26 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException28 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId26, "rest.exception.cause.skip");
        retryOnPrimaryException28.setIndex("");
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException28.setResources("", strArray37);
        retryOnPrimaryException21.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray37);
        retryOnPrimaryException2.addHeader("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray37);
        java.util.List<java.lang.String> strList42 = retryOnPrimaryException2.getHeader("");
        java.lang.Throwable throwable43 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId45 = null;
        java.lang.Throwable throwable47 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException48 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId45, "rest.exception.stacktrace.skip", throwable47);
        org.elasticsearch.index.shard.ShardId shardId50 = null;
        org.elasticsearch.index.shard.ShardId shardId52 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException54 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId52, "hi!");
        retryOnPrimaryException54.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str58 = retryOnPrimaryException54.getDetailedMessage();
        java.lang.Throwable throwable59 = retryOnPrimaryException54.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException60 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId50, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable59);
        org.elasticsearch.index.Index index61 = retryOnPrimaryException60.getIndex();
        java.lang.String str62 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException60);
        org.elasticsearch.index.shard.ShardId shardId64 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException66 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId64, "rest.exception.cause.skip");
        retryOnPrimaryException66.setIndex("");
        java.lang.String[] strArray75 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException66.setResources("", strArray75);
        retryOnPrimaryException60.setResources("[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", strArray75);
        retryOnPrimaryException48.addHeader("retry_on_primary_exception", strArray75);
        retryOnPrimaryException2.setResources("org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: rest.exception.cause.skip", strArray75);
        org.elasticsearch.index.shard.ShardId shardId80 = retryOnPrimaryException2.getShardId();
        java.util.List<java.lang.String> strList82 = retryOnPrimaryException2.getHeader("RetryOnPrimaryException[]");
        org.elasticsearch.index.shard.ShardId shardId83 = retryOnPrimaryException2.getShardId();
        java.lang.Throwable throwable84 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(throwable4);
        org.junit.Assert.assertEquals(throwable4.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable4.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNull(strList42);
        org.junit.Assert.assertNotNull(throwable43);
        org.junit.Assert.assertEquals(throwable43.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable43.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str58, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable59);
        org.junit.Assert.assertEquals(throwable59.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable59.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable59.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index61);
        org.junit.Assert.assertEquals("'" + str62 + "' != '" + "retry_on_primary_exception" + "'", str62, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertNull(shardId80);
        org.junit.Assert.assertNull(strList82);
        org.junit.Assert.assertNull(shardId83);
        org.junit.Assert.assertNotNull(throwable84);
        org.junit.Assert.assertEquals(throwable84.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable84.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable84.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2996");
        org.elasticsearch.common.xcontent.XContentBuilder xContentBuilder0 = null;
        org.elasticsearch.common.xcontent.ToXContent.Params params1 = org.elasticsearch.common.xcontent.ToXContent.EMPTY_PARAMS;
        org.elasticsearch.index.shard.ShardId shardId2 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException4 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId2, "retry_on_primary_exception");
        java.lang.String str5 = retryOnPrimaryException4.toString();
        org.elasticsearch.index.Index index6 = null;
        retryOnPrimaryException4.setIndex(index6);
        java.lang.String str8 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.Throwable throwable9 = retryOnPrimaryException4.getRootCause();
        java.lang.Throwable throwable10 = retryOnPrimaryException4.getRootCause();
        boolean boolean11 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException4);
        java.lang.String str12 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException4);
        // The following exception was thrown during execution in test generation
        try {
            org.elasticsearch.ElasticsearchException.toXContent(xContentBuilder0, params1, (java.lang.Throwable) retryOnPrimaryException4);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(params1);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "RetryOnPrimaryException[retry_on_primary_exception]" + "'", str5, "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "retry_on_primary_exception" + "'", str8, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable9);
        org.junit.Assert.assertEquals(throwable9.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable9.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertNotNull(throwable10);
        org.junit.Assert.assertEquals(throwable10.getLocalizedMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable10.getMessage(), "retry_on_primary_exception");
        org.junit.Assert.assertEquals(throwable10.toString(), "RetryOnPrimaryException[retry_on_primary_exception]");
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + false + "'", boolean11 == false);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "retry_on_primary_exception" + "'", str12, "retry_on_primary_exception");
    }

    @Test
    public void test2997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2997");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException2.setResources("", strArray11);
        boolean boolean13 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.shard.ShardId shardId15 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException17 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId15, "hi!");
        retryOnPrimaryException17.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        retryOnPrimaryException24.setIndex("");
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException24.setResources("", strArray33);
        retryOnPrimaryException17.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        retryOnPrimaryException2.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray33);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray37 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet38 = retryOnPrimaryException2.getHeaderKeys();
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.lang.String str40 = retryOnPrimaryException2.toString();
        org.elasticsearch.common.io.stream.StreamInput streamInput41 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Throwable throwable42 = org.elasticsearch.ElasticsearchException.readStackTrace((java.lang.Throwable) retryOnPrimaryException2, streamInput41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + false + "'", boolean13 == false);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray37);
        org.junit.Assert.assertNotNull(strSet38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str40, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }

    @Test
    public void test2998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2998");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "hi!");
        retryOnPrimaryException2.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str6 = retryOnPrimaryException2.getDetailedMessage();
        java.util.Set<java.lang.String> strSet7 = retryOnPrimaryException2.getHeaderKeys();
        java.lang.String str8 = retryOnPrimaryException2.getDetailedMessage();
        boolean boolean9 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.List<java.lang.String> strList10 = retryOnPrimaryException2.getResourceId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray12 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.index.shard.ShardId shardId13 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException15 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId13, "rest.exception.cause.skip");
        retryOnPrimaryException15.setIndex("");
        boolean boolean18 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException15);
        retryOnPrimaryException15.setShard("hi!", (int) (short) 1);
        org.elasticsearch.index.shard.ShardId shardId22 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException24 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId22, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet25 = retryOnPrimaryException24.getHeaderKeys();
        java.lang.Throwable throwable26 = retryOnPrimaryException24.getRootCause();
        java.lang.String[] strArray32 = new java.lang.String[] { "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!", "rest.exception.cause.skip", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        retryOnPrimaryException24.addHeader("[] RetryOnPrimaryException[rest.exception.cause.skip]", (java.util.List<java.lang.String>) strList33);
        java.util.List<java.lang.String> strList37 = null;
        retryOnPrimaryException24.addHeader("RetryOnPrimaryException[retry_on_primary_exception]", strList37);
        boolean boolean39 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException24.setIndex("retry_on_primary_exception");
        org.elasticsearch.index.shard.ShardId shardId42 = null;
        org.elasticsearch.index.shard.ShardId shardId44 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException46 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId44, "hi!");
        retryOnPrimaryException46.setShard("rest.exception.cause.skip", (int) (byte) 1);
        java.lang.String str50 = retryOnPrimaryException46.getDetailedMessage();
        java.lang.Throwable throwable51 = retryOnPrimaryException46.unwrapCause();
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException52 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId42, "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]", throwable51);
        org.elasticsearch.index.Index index53 = retryOnPrimaryException52.getIndex();
        boolean boolean54 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException52);
        boolean boolean55 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException52);
        java.lang.Throwable[] throwableArray56 = retryOnPrimaryException52.getSuppressed();
        retryOnPrimaryException24.addSuppressed((java.lang.Throwable) retryOnPrimaryException52);
        retryOnPrimaryException24.setIndex("hi!");
        java.util.Set<java.lang.String> strSet60 = retryOnPrimaryException24.getHeaderKeys();
        retryOnPrimaryException15.addSuppressed((java.lang.Throwable) retryOnPrimaryException24);
        retryOnPrimaryException2.addSuppressed((java.lang.Throwable) retryOnPrimaryException15);
        org.elasticsearch.common.io.stream.StreamOutput streamOutput63 = null;
        // The following exception was thrown during execution in test generation
        try {
            retryOnPrimaryException2.writeTo(streamOutput63);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str6, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(strSet7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str8, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + false + "'", boolean9 == false);
        org.junit.Assert.assertNull(strList10);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray12);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strSet25);
        org.junit.Assert.assertNotNull(throwable26);
        org.junit.Assert.assertEquals(throwable26.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable26.toString(), "[hi!] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!" + "'", str50, "org.elasticsearch.action.support.replication.ReplicationOperation$RetryOnPrimaryException: hi!");
        org.junit.Assert.assertNotNull(throwable51);
        org.junit.Assert.assertEquals(throwable51.getLocalizedMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable51.getMessage(), "hi!");
        org.junit.Assert.assertEquals(throwable51.toString(), "[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]");
        org.junit.Assert.assertNull(index53);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + false + "'", boolean55 == false);
        org.junit.Assert.assertNotNull(throwableArray56);
        org.junit.Assert.assertNotNull(strSet60);
    }

    @Test
    public void test2999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test2999");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        java.util.Set<java.lang.String> strSet3 = retryOnPrimaryException2.getHeaderKeys();
        java.util.Set<java.lang.String> strSet4 = retryOnPrimaryException2.getHeaderKeys();
        org.elasticsearch.rest.RestStatus restStatus5 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable6 = retryOnPrimaryException2.getRootCause();
        org.elasticsearch.index.shard.ShardId shardId7 = retryOnPrimaryException2.getShardId();
        java.lang.Throwable throwable8 = retryOnPrimaryException2.unwrapCause();
        org.elasticsearch.index.shard.ShardId shardId10 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException12 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId10, "rest.exception.cause.skip");
        retryOnPrimaryException12.setIndex("");
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException12.setResources("", strArray21);
        boolean boolean23 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException12);
        java.lang.String str24 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId25 = null;
        retryOnPrimaryException12.setShard(shardId25);
        org.elasticsearch.index.shard.ShardId shardId27 = retryOnPrimaryException12.getShardId();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray28 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        retryOnPrimaryException12.setShard("hi!", (int) (byte) 0);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray32 = org.elasticsearch.ElasticsearchException.guessRootCauses((java.lang.Throwable) retryOnPrimaryException12);
        org.elasticsearch.index.shard.ShardId shardId34 = null;
        org.elasticsearch.index.shard.ShardId shardId36 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException38 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId36, "rest.exception.cause.skip");
        java.lang.String[] strArray45 = new java.lang.String[] { "", "rest.exception.cause.skip", "", "rest.exception.cause.skip", "rest.exception.cause.skip" };
        retryOnPrimaryException38.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray45);
        org.elasticsearch.index.shard.ShardId shardId47 = null;
        retryOnPrimaryException38.setShard(shardId47);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray49 = retryOnPrimaryException38.guessRootCauses();
        java.lang.String str50 = org.elasticsearch.ElasticsearchException.getExceptionName((java.lang.Throwable) retryOnPrimaryException38);
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException51 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId34, "retry_on_primary_exception", (java.lang.Throwable) retryOnPrimaryException38);
        java.lang.Throwable throwable52 = retryOnPrimaryException38.unwrapCause();
        retryOnPrimaryException38.setIndex("rest.exception.cause.skip");
        org.elasticsearch.index.shard.ShardId shardId56 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException58 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId56, "rest.exception.cause.skip");
        retryOnPrimaryException58.setIndex("");
        java.lang.String[] strArray67 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException58.setResources("", strArray67);
        boolean boolean69 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException58);
        org.elasticsearch.index.shard.ShardId shardId71 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException73 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId71, "hi!");
        retryOnPrimaryException73.setShard("rest.exception.cause.skip", (int) (byte) 1);
        org.elasticsearch.index.shard.ShardId shardId78 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException80 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId78, "rest.exception.cause.skip");
        retryOnPrimaryException80.setIndex("");
        java.lang.String[] strArray89 = new java.lang.String[] { "hi!", "", "hi!", "", "rest.exception.cause.skip" };
        retryOnPrimaryException80.setResources("", strArray89);
        retryOnPrimaryException73.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray89);
        retryOnPrimaryException58.setResources("[] RetryOnPrimaryException[rest.exception.cause.skip]", strArray89);
        retryOnPrimaryException38.setResources("hi!", strArray89);
        retryOnPrimaryException12.setResources("retry_on_primary_exception", strArray89);
        retryOnPrimaryException2.setResources("RetryOnPrimaryException[[rest.exception.cause.skip][[rest.exception.cause.skip][1]] RetryOnPrimaryException[hi!]]; nested: RetryOnPrimaryException[hi!];", strArray89);
        boolean boolean96 = org.elasticsearch.action.support.replication.ReplicationOperation.ignoreReplicaException((java.lang.Throwable) retryOnPrimaryException2);
        java.util.Set<java.lang.String> strSet97 = retryOnPrimaryException2.getHeaderKeys();
        org.junit.Assert.assertNotNull(strSet3);
        org.junit.Assert.assertNotNull(strSet4);
        org.junit.Assert.assertTrue("'" + restStatus5 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus5.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable6);
        org.junit.Assert.assertEquals(throwable6.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable6.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNull(shardId7);
        org.junit.Assert.assertNotNull(throwable8);
        org.junit.Assert.assertEquals(throwable8.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable8.toString(), "RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "retry_on_primary_exception" + "'", str24, "retry_on_primary_exception");
        org.junit.Assert.assertNull(shardId27);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray28);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray32);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "retry_on_primary_exception" + "'", str50, "retry_on_primary_exception");
        org.junit.Assert.assertNotNull(throwable52);
        org.junit.Assert.assertEquals(throwable52.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable52.toString(), "[rest.exception.cause.skip] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strArray89);
        org.junit.Assert.assertTrue("'" + boolean96 + "' != '" + false + "'", boolean96 == false);
        org.junit.Assert.assertNotNull(strSet97);
    }

    @Test
    public void test3000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest5.test3000");
        org.elasticsearch.index.shard.ShardId shardId0 = null;
        org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException retryOnPrimaryException2 = new org.elasticsearch.action.support.replication.ReplicationOperation.RetryOnPrimaryException(shardId0, "rest.exception.cause.skip");
        retryOnPrimaryException2.setIndex("");
        boolean boolean5 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray6 = retryOnPrimaryException2.guessRootCauses();
        boolean boolean7 = org.elasticsearch.action.support.replication.ReplicationOperation.isConflictException((java.lang.Throwable) retryOnPrimaryException2);
        org.elasticsearch.index.Index index8 = null;
        retryOnPrimaryException2.setIndex(index8);
        java.lang.String str10 = retryOnPrimaryException2.toString();
        org.elasticsearch.ElasticsearchException[] elasticsearchExceptionArray11 = retryOnPrimaryException2.guessRootCauses();
        org.elasticsearch.rest.RestStatus restStatus12 = retryOnPrimaryException2.status();
        java.lang.Throwable throwable13 = retryOnPrimaryException2.getRootCause();
        org.junit.Assert.assertTrue("'" + boolean5 + "' != '" + false + "'", boolean5 == false);
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray6);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + false + "'", boolean7 == false);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "[] RetryOnPrimaryException[rest.exception.cause.skip]" + "'", str10, "[] RetryOnPrimaryException[rest.exception.cause.skip]");
        org.junit.Assert.assertNotNull(elasticsearchExceptionArray11);
        org.junit.Assert.assertTrue("'" + restStatus12 + "' != '" + org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR + "'", restStatus12.equals(org.elasticsearch.rest.RestStatus.INTERNAL_SERVER_ERROR));
        org.junit.Assert.assertNotNull(throwable13);
        org.junit.Assert.assertEquals(throwable13.getLocalizedMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.getMessage(), "rest.exception.cause.skip");
        org.junit.Assert.assertEquals(throwable13.toString(), "[] RetryOnPrimaryException[rest.exception.cause.skip]");
    }
}

